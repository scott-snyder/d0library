      SUBROUTINE QCD_READ_NTUPLE_CWN(TOP_DIR1,TOP_DIR2,ID1,ID2,BNAME_1,
     &  BNAME_2, NEVT,EOF)

C-
C-
C-TOP_DIR1 TOP DIR FOR INPUT NTUPLE
C-ID1-INPUT NT ID,
C-ID2-OUTPUT NT ID
C-BNAME_1,INPUT NT BLOCK NAME
C-BNAME_2,OUTPUT NT BLOCK NAME
C-NEVT SEQ NUMBER OF EVENT READ
C-EOF LOGICAL TRUE IF EOF
C-
*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      20
*     Ntuple Title:   CMP CWN NTUPLE
*     Creation:       06/06/94 22.37.37
*
*********************************************************
*
*--   Enter user code here
*
      INCLUDE 'D0$INC:QCD_SMEAR_EVENT.INC'
      INCLUDE 'D0$INC:QCD_FAKE_NTUPLE_CWN.INC'
      INCLUDE 'D0$INC:QUEST.INC'
      INTEGER IER,IJ
      CHARACTER*10 VARC(200)
      LOGICAL FIRST/.TRUE./,EOF
      INTEGER IYN,ID1,ID2 ,NEVT,NLOOP
      CHARACTER*(*) BNAME_1,BNAME_2
      CHARACTER*(*) TOP_DIR1,TOP_DIR2
*
      IF (FIRST)THEN
        FIRST = .FALSE.
        CALL HBNAME(ID1,' ',0.,'$CLEAR')
        CALL HBNAME(ID1,BNAME_1,RUN,'$SET')
        CALL HCDIR(TOP_DIR2,' ')
        CALL HBNT(ID2,'CMP CWN NTUPLE',' ')
*HEAD 21
        CALL HBNAME(ID2,BNAME_2,RUN,
     &    ' RUN,EVENT,RL1BIT_,RL1BIT,RL2BIT0_,RL2BIT0,RL2BIT1_
     +    ,RL2BIT1,RL2BIT2_,RL2BIT2,UBLANK
     +    ,RNPELC,RNPPHO,RNPMUO,RNJET7,RNJET5,RNJET3,RNJETN,RNVERTEX
     +    ,RMIFLAG,CL_CAL')
*ELEC 12
        CALL HBNAME(ID2,BNAME_2,EE1,
     &    ' EE1,ETE1,THE1,ETAE1,PHIE1,RIETAE1')
C        CALL HBNAME(ID2,BNAME_2,EE2,
C     &    'EE2,ETE2
C     +    ,THE2,ETAE2,PHIE2,RIETAE2')
*TRAK*4
        CALL HBNAME(ID2,BNAME_2,DET1 ,'DET1,DEDX1')
C        CALL HBNAME(ID2,BNAME_2,DET2 ,'DET2,DEDX2')
*CORRECTED JETS*15
        CALL HBNAME(ID2,BNAME_2,EJC51,
     &    'EJC51,ETJC51,ETAJC51,EJC52,ETJC52,ETAJC52,EJC53,ETJC53
     +    ,ETAJC53,EJC54,ETJC54,ETAJC54,EJC55,ETJC55,ETAJC55')
*MET*16
        CALL HBNAME(ID2,BNAME_2,RMETC1,
     &    ' RMETC1,RMETPHIC1,RMETC2
     +    ,RMETPHIC2')
*OTHERS*8
        CALL HBNAME(ID2,BNAME_2,BAD_ELE,
     &    'BAD_ELE,UNJETS,UNJETS15,UNJETS20,UNJETS25,UNJETS30,RISOL,
     &    CHISQ1,STRK1,WMT, WMTC')
*
*
*
      ENDIF
C-
      CALL HCDIR(TOP_DIR1,' ')
      CALL HNOENT(ID1,NLOOP)
      IF(NEVT .GT. NLOOP)THEN
        EOF = .TRUE.
        GOTO 999
      ENDIF
C      IF(NEVT .EQ. 1)THEN
C        CALL HGNTV(ID1,VARC,119,1,ier)
C        IF(IER .NE. 0) THEN
C          PRINT*,'ERROR IN RETREIVING INFO FROM NTUPLE...EXITING..'
C          GOTO 999
C        ENDIF
C      ENDIF
      IJ = NEVT
C      IF(IJ .NE. 1)CALL HGNTF(ID1,IJ,IER)
      CALL HGNT(ID1,IJ,IER)
      IF(IER .NE. 0)THEN
        PRINT*,'UNABLE TO RETRIEVE INFO FROM NTUPLE FOR ROW ',IJ,IER,
     &      'IQUEST(1) = ',IQUEST(1)
        iyn = iyn+1
      ENDIF
      NELE = 1 
      NJETS = UNJETS  !JNEP number of jets
      ELE(1,1) = EE1
      ELE(2,1) = ETAE1
      ELE(3,1) = PHIE1
      ELE(1,2) = EE2
      ELE(2,2) = ETAE2
      ELE(3,2) = PHIE2
      NEUT(1) = RMETC1*COS(RMETPHIC1)
      NEUT(2) = RMETC1*SIN(RMETPHIC1)
C
      JET(1,1) = EJC51
      JET(2,1) = ETAJC51
      JET(3,1) = PHIJC51
      JET(1,2) = EJC52
      JET(2,2) = ETAJC52
      JET(3,2) = PHIJC52
      JET(1,3) = EJC53
      JET(2,3) = ETAJC53
      JET(3,3) = PHIJC53
      JET(1,4) = EJC54
      JET(2,4) = ETAJC54
      JET(3,4) = PHIJC54
      JET(1,5) = EJC55
      JET(2,5) = ETAJC55
      JET(3,5) = PHIJC55
      DO I = 1,5
        IF(JET(1,I) .EQ. 0)THEN
          NJETS = I -1
          GOTO 10
        ENDIF
      ENDDO
      NJETS = 5
   10 CONTINUE 
C
      NELE = MIN(NELE,NELMX)
      NJETS = MIN(NJETS,NJTMX)
C
      DO I = 1 , NELE
        CALL GET_CART(ELE(1,I),ELEC(1,I),0.0)
      ENDDO
      DO I = 1 , NJETS
        CALL GET_CART(JET(1,I),JETS(1,I),0.0)
      ENDDO
      DO I = 1 , 2
        REST(I) = 0.0
        DO J = 1 , NELE
          REST(I) = REST(I) + ELEC(I,J)
        ENDDO
        DO J = 1 , NJETS
          REST(I) = REST(I) + JETS(I,J)
        ENDDO
        REST(I) = REST(I) + NEUT(I)
        REST(I) = - REST(I)
      ENDDO
      REST_PT = SQRT(REST(1)**2 + REST(2)**2)
C

*
  999 RETURN
      END
