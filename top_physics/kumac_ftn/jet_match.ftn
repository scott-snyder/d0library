      REAL FUNCTION JET_MATCH(XDUMMY)
      IMPLICIT NONE
      REAL    XDUMMY
      REAL
     +RUN     ,EVENT   ,NPJETS  ,NJETS_7 ,NJETS_5 ,NJETS_N ,
     +NMATCH_7,NMATCH_5,NMATCH_N,PJ_X1   ,PJ_Y1   ,PJ_Z1   ,
     +PJ_E1   ,PJ_ET1  ,PJ_ETA1 ,PJ_PHI1 ,PJ_PR1_1,PJ_PR2_1,
     +MCH_J7_1,J7_X1   ,J7_Y1   ,J7_Z1   ,J7_E1   ,J7_ET1  ,
     +J7_ETA1 ,J7_PHI1 ,J7_RAT1 ,MCH_J5_1,J5_X1   ,J5_Y1   ,
     +J5_Z1   ,J5_E1   ,J5_ET1  ,J5_ETA1 ,J5_PHI1 ,J5_RAT1 ,
     +MCH_JN_1,JN_X1   ,JN_Y1   ,JN_Z1   ,JN_E1   ,JN_ET1  ,
     +JN_ETA1 ,JN_PHI1 ,JN_RAT1 ,PJ_X2   ,PJ_Y2   ,PJ_Z2   ,
     +PJ_E2   ,PJ_ET2  ,PJ_ETA2 ,PJ_PHI2 ,PJ_PR1_2,PJ_PR2_2,
     +MCH_J7_2,J7_X2   ,J7_Y2   ,J7_Z2   ,J7_E2   ,J7_ET2  ,
     +J7_ETA2 ,J7_PHI2 ,J7_RAT2 ,MCH_J5_2,J5_X2   ,J5_Y2   ,
     +J5_Z2   ,J5_E2   ,J5_ET2  ,J5_ETA2 ,J5_PHI2 ,J5_RAT2 ,
     +MCH_JN_2,JN_X2   ,JN_Y2   ,JN_Z2   ,JN_E2   ,JN_ET2  ,
     +JN_ETA2 ,JN_PHI2 ,JN_RAT2 ,PJ_X3   ,PJ_Y3   ,PJ_Z3   ,
     +PJ_E3   ,PJ_ET3  ,PJ_ETA3 ,PJ_PHI3 ,PJ_PR1_3,PJ_PR2_3,
     +MCH_J7_3,J7_X3   ,J7_Y3   ,J7_Z3   ,J7_E3   ,J7_ET3  ,
     +J7_ETA3 ,J7_PHI3 ,J7_RAT3 ,MCH_J5_3,J5_X3   ,J5_Y3   ,
     +J5_Z3   ,J5_E3   ,J5_ET3  ,J5_ETA3 ,J5_PHI3 ,J5_RAT3 ,
     +MCH_JN_3,JN_X3   ,JN_Y3   ,JN_Z3   ,JN_E3   ,JN_ET3  ,
     +JN_ETA3 ,JN_PHI3 ,JN_RAT3 ,PJ_X4   ,PJ_Y4   ,PJ_Z4   ,
     +PJ_E4   ,PJ_ET4  ,PJ_ETA4 ,PJ_PHI4 ,PJ_PR1_4,PJ_PR2_4,
     +MCH_J7_4,J7_X4   ,J7_Y4   ,J7_Z4   ,J7_E4   ,J7_ET4  ,
     +J7_ETA4 ,J7_PHI4 ,J7_RAT4 ,MCH_J5_4,J5_X4   ,J5_Y4   ,
     +J5_Z4   ,J5_E4   ,J5_ET4  ,J5_ETA4 ,J5_PHI4 ,J5_RAT4 ,
     +MCH_JN_4,JN_X4   ,JN_Y4   ,JN_Z4   ,JN_E4   ,JN_ET4  ,
     +JN_ETA4 ,JN_PHI4 ,JN_RAT4 ,PJ_X5   ,PJ_Y5   ,PJ_Z5   ,
     +PJ_E5   ,PJ_ET5  ,PJ_ETA5 ,PJ_PHI5 ,PJ_PR1_5,PJ_PR2_5,
     +MCH_J7_5,J7_X5   ,J7_Y5   ,J7_Z5   ,J7_E5   ,J7_ET5  ,
     +J7_ETA5 ,J7_PHI5 ,J7_RAT5 ,MCH_J5_5,J5_X5   ,J5_Y5   ,
     +J5_Z5   ,J5_E5   ,J5_ET5  ,J5_ETA5 ,J5_PHI5 ,J5_RAT5 ,
     +MCH_JN_5,JN_X5   ,JN_Y5   ,JN_Z5   ,JN_E5   ,JN_ET5  ,
     +JN_ETA5 ,JN_PHI5 ,JN_RAT5 ,PJ_X6   ,PJ_Y6   ,PJ_Z6   ,
     +PJ_E6   ,PJ_ET6  ,PJ_ETA6 ,PJ_PHI6 ,PJ_PR1_6,PJ_PR2_6,
     +MCH_J7_6,J7_X6   ,J7_Y6   ,J7_Z6   ,J7_E6   ,J7_ET6  ,
     +J7_ETA6 ,J7_PHI6 ,J7_RAT6 ,MCH_J5_6,J5_X6   ,J5_Y6   ,
     +J5_Z6   ,J5_E6   ,J5_ET6  ,J5_ETA6 ,J5_PHI6 ,J5_RAT6 ,
     +MCH_JN_6,JN_X6   ,JN_Y6   ,JN_Z6   ,JN_E6   ,JN_ET6  ,
     +JN_ETA6 ,JN_PHI6 ,JN_RAT6 ,PJ_X7   ,PJ_Y7   ,PJ_Z7   ,
     +PJ_E7   ,PJ_ET7  ,PJ_ETA7 ,PJ_PHI7 ,PJ_PR1_7,PJ_PR2_7,
     +MCH_J7_7,J7_X7   ,J7_Y7   ,J7_Z7   ,J7_E7   ,J7_ET7  ,
     +J7_ETA7 ,J7_PHI7 ,J7_RAT7 ,MCH_J5_7,J5_X7   ,J5_Y7   ,
     +J5_Z7   ,J5_E7   ,J5_ET7  ,J5_ETA7 ,J5_PHI7 ,J5_RAT7 ,
     +MCH_JN_7,JN_X7   ,JN_Y7   ,JN_Z7   ,JN_E7   ,JN_ET7  ,
     +JN_ETA7 ,JN_PHI7 ,JN_RAT7
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
*
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
      COMMON/PAWIDN/IDNEVT,VIDN1,VIDN2,VIDN3,VIDN(10),
     +RUN     ,EVENT   ,NPJETS  ,NJETS_7 ,NJETS_5 ,NJETS_N ,
     +NMATCH_7,NMATCH_5,NMATCH_N,PJ_X1   ,PJ_Y1   ,PJ_Z1   ,
     +PJ_E1   ,PJ_ET1  ,PJ_ETA1 ,PJ_PHI1 ,PJ_PR1_1,PJ_PR2_1,
     +MCH_J7_1,J7_X1   ,J7_Y1   ,J7_Z1   ,J7_E1   ,J7_ET1  ,
     +J7_ETA1 ,J7_PHI1 ,J7_RAT1 ,MCH_J5_1,J5_X1   ,J5_Y1   ,
     +J5_Z1   ,J5_E1   ,J5_ET1  ,J5_ETA1 ,J5_PHI1 ,J5_RAT1 ,
     +MCH_JN_1,JN_X1   ,JN_Y1   ,JN_Z1   ,JN_E1   ,JN_ET1  ,
     +JN_ETA1 ,JN_PHI1 ,JN_RAT1 ,PJ_X2   ,PJ_Y2   ,PJ_Z2   ,
     +PJ_E2   ,PJ_ET2  ,PJ_ETA2 ,PJ_PHI2 ,PJ_PR1_2,PJ_PR2_2,
     +MCH_J7_2,J7_X2   ,J7_Y2   ,J7_Z2   ,J7_E2   ,J7_ET2  ,
     +J7_ETA2 ,J7_PHI2 ,J7_RAT2 ,MCH_J5_2,J5_X2   ,J5_Y2   ,
     +J5_Z2   ,J5_E2   ,J5_ET2  ,J5_ETA2 ,J5_PHI2 ,J5_RAT2 ,
     +MCH_JN_2,JN_X2   ,JN_Y2   ,JN_Z2   ,JN_E2   ,JN_ET2  ,
     +JN_ETA2 ,JN_PHI2 ,JN_RAT2 ,PJ_X3   ,PJ_Y3   ,PJ_Z3   ,
     +PJ_E3   ,PJ_ET3  ,PJ_ETA3 ,PJ_PHI3 ,PJ_PR1_3,PJ_PR2_3,
     +MCH_J7_3,J7_X3   ,J7_Y3   ,J7_Z3   ,J7_E3   ,J7_ET3  ,
     +J7_ETA3 ,J7_PHI3 ,J7_RAT3 ,MCH_J5_3,J5_X3   ,J5_Y3   ,
     +J5_Z3   ,J5_E3   ,J5_ET3  ,J5_ETA3 ,J5_PHI3 ,J5_RAT3 ,
     +MCH_JN_3,JN_X3   ,JN_Y3   ,JN_Z3   ,JN_E3   ,JN_ET3  ,
     +JN_ETA3 ,JN_PHI3 ,JN_RAT3 ,PJ_X4   ,PJ_Y4   ,PJ_Z4   ,
     +PJ_E4   ,PJ_ET4  ,PJ_ETA4 ,PJ_PHI4 ,PJ_PR1_4,PJ_PR2_4,
     +MCH_J7_4,J7_X4   ,J7_Y4   ,J7_Z4   ,J7_E4   ,J7_ET4  ,
     +J7_ETA4 ,J7_PHI4 ,J7_RAT4 ,MCH_J5_4,J5_X4   ,J5_Y4   ,
     +J5_Z4   ,J5_E4   ,J5_ET4  ,J5_ETA4 ,J5_PHI4 ,J5_RAT4 ,
     +MCH_JN_4,JN_X4   ,JN_Y4   ,JN_Z4   ,JN_E4   ,JN_ET4  ,
     +JN_ETA4 ,JN_PHI4 ,JN_RAT4 ,PJ_X5   ,PJ_Y5   ,PJ_Z5   ,
     +PJ_E5   ,PJ_ET5  ,PJ_ETA5 ,PJ_PHI5 ,PJ_PR1_5,PJ_PR2_5,
     +MCH_J7_5,J7_X5   ,J7_Y5   ,J7_Z5   ,J7_E5   ,J7_ET5  ,
     +J7_ETA5 ,J7_PHI5 ,J7_RAT5 ,MCH_J5_5,J5_X5   ,J5_Y5   ,
     +J5_Z5   ,J5_E5   ,J5_ET5  ,J5_ETA5 ,J5_PHI5 ,J5_RAT5 ,
     +MCH_JN_5,JN_X5   ,JN_Y5   ,JN_Z5   ,JN_E5   ,JN_ET5  ,
     +JN_ETA5 ,JN_PHI5 ,JN_RAT5 ,PJ_X6   ,PJ_Y6   ,PJ_Z6   ,
     +PJ_E6   ,PJ_ET6  ,PJ_ETA6 ,PJ_PHI6 ,PJ_PR1_6,PJ_PR2_6,
     +MCH_J7_6,J7_X6   ,J7_Y6   ,J7_Z6   ,J7_E6   ,J7_ET6  ,
     +J7_ETA6 ,J7_PHI6 ,J7_RAT6 ,MCH_J5_6,J5_X6   ,J5_Y6   ,
     +J5_Z6   ,J5_E6   ,J5_ET6  ,J5_ETA6 ,J5_PHI6 ,J5_RAT6 ,
     +MCH_JN_6,JN_X6   ,JN_Y6   ,JN_Z6   ,JN_E6   ,JN_ET6  ,
     +JN_ETA6 ,JN_PHI6 ,JN_RAT6 ,PJ_X7   ,PJ_Y7   ,PJ_Z7   ,
     +PJ_E7   ,PJ_ET7  ,PJ_ETA7 ,PJ_PHI7 ,PJ_PR1_7,PJ_PR2_7,
     +MCH_J7_7,J7_X7   ,J7_Y7   ,J7_Z7   ,J7_E7   ,J7_ET7  ,
     +J7_ETA7 ,J7_PHI7 ,J7_RAT7 ,MCH_J5_7,J5_X7   ,J5_Y7   ,
     +J5_Z7   ,J5_E7   ,J5_ET7  ,J5_ETA7 ,J5_PHI7 ,J5_RAT7 ,
     +MCH_JN_7,JN_X7   ,JN_Y7   ,JN_Z7   ,JN_E7   ,JN_ET7  ,
     +JN_ETA7 ,JN_PHI7 ,JN_RAT7
      DIMENSION XDUMMY(261)
*
      REAL    JETS(9,4,7)
      EQUIVALENCE (JETS,PJ_X1)
      INTEGER IP,JP
      REAL    DELTA_R,DELTA_ETA,DELTA_PHI,DELTA_E,DELTA_ET
      REAL    DELTA_R_MIN
      DATA DELTA_R_MIN/1.4/
      INTEGER REJECT(7)
C
      INTEGER NPJ,IALG
C
      REAL    TWOPI
      DATA TWOPI/6.28318/
      REAL    PI
      DATA PI/3.14159/
      SAVE PI,TWOPI,DELTA_R_MIN
C
      REAL    ET_MEAS,ET_TRUE
      CHARACTER*32 ALGNAME(3)
      DATA ALGNAME/'CONE7','CONE5','NEIGHBOR'/
      SAVE ALGNAME
      REAL    JET_ET_TRUE
C
      LOGICAL DO_CORRECT
      DATA DO_CORRECT/.TRUE./
      SAVE DO_CORRECT
C
      LOGICAL FIRST
      SAVE FIRST
      DATA FIRST / .TRUE. /
C
      INTEGER P_ETA,P_PHI,P_ET,P_E,P_ID
      PARAMETER( P_ET = 5 )
      PARAMETER( P_ETA = 6 )
      PARAMETER( P_PHI = 7 )
      PARAMETER( P_E = 4 )
      PARAMETER( P_ID = 8 )
      INTEGER J_ETA,J_PHI,J_ET,J_E,J_M,J_R
      PARAMETER( J_ET = 6 )
      PARAMETER( J_ETA = 7 )
      PARAMETER( J_PHI = 8 )
      PARAMETER( J_E = 5 )
      PARAMETER( J_M = 1 )
C Match
      PARAMETER( J_R = 9 )
C ET_ratio
C
      IF( FIRST ) THEN
        FIRST = .FALSE.
        CALL HBOOK1(1000,'ET OF PJETS',50,0.,100.,0.)
        CALL HBOOK1(1001,'Efficiency ET OF PJETS .7 CONE',
     &    50,0.,100.,0.)
        CALL HBOOK1(1002,'Efficiency ET OF PJETS .5 CONE',
     &    50,0.,100.,0.)
        CALL HBOOK1(1003,'Efficiency ET OF PJETS NN CONE',
     &    50,0.,100.,0.)
C
        CALL HBOOK1(1004,'ET OF .7 cone JETS',50,0.,100.,0.)
        CALL HBOOK1(1005,'ET OF .5 cone JETS',50,0.,100.,0.)
        CALL HBOOK1(1006,'ET OF NN JETS',50,0.,100.,0.)
C
        CALL HBOOK1(1010,'DELTA_R PJETS',50,0.,5.0,0.)
*
        CALL HBPROF(3001,'EFFICIENCY .7 JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
        CALL HBPROF(4001,'EFFICIENCY .7 JET VS ET',50,0.,100.,
     &    0.,1.5,' ')
*
        CALL HBPROF(3002,'EFFICIENCY .5 JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
        CALL HBPROF(4002,'EFFICIENCY .5 JET VS ET',50,0.,100.,
     &    0.,1.5,' ')
*
        CALL HBPROF(3003,'EFFICIENCY NN JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
        CALL HBPROF(4003,'EFFICIENCY NN JET VS ET',50,0.,100.,
     &    0.,1.5,' ')
*
C
        CALL HBPROF(5001,'ET JET/PJET .7 JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
        CALL HBPROF(5002,'ET JET/PJET .5 JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
        CALL HBPROF(5003,'ET JET/PJET NN JET VS ETA',50,-3.0,3.0,
     &    0.,1.5,' ')
*
        CALL HBPROF(6001,'ET JET/PJET .7 JET VS meas ET',100,0.,200.,
     &    0.,1.5,' ')
        CALL HBPROF(6002,'ET JET/PJET .5 JET VS meas ET',100,0.,200.,
     &    0.,1.5,' ')
        CALL HBPROF(6003,'ET JET/PJET NN JET VS meas ET',100,0.,200.,
     &    0.,1.5,' ')
*
        CALL HBPROF(6011,'ET JET/PJET .7 JET VS pjet ET',100,0.,200.,
     &    0.,1.5,' ')
        CALL HBPROF(6012,'ET JET/PJET .5 JET VS pjet ET',100,0.,200.,
     &    0.,1.5,' ')
        CALL HBPROF(6013,'ET JET/PJET NN JET VS pjet ET',100,0.,200.,
     &    0.,1.5,' ')
*
        CALL HBPROF(6021,'ET measured JET(x) vs ET PJET(y) .7',
     &    100,0.,200.,0.,200.,' ')
        CALL HBPROF(6022,'ET measured JET(x) vs ET PJET(y) .5',
     &    100,0.,200.,0.,200.,' ')
        CALL HBPROF(6023,'ET measured JET(x) vs ET PJET(y) NN',
     &    100,0.,200.,0.,200.,' ')
*
        CALL HBPROF(6031,'ET measured JET(y) vs ET PJET(x) .7',
     &    100,0.,200.,0.,200.,' ')
        CALL HBPROF(6032,'ET measured JET(y) vs ET PJET(x) .5',
     &    100,0.,200.,0.,200.,' ')
        CALL HBPROF(6033,'ET measured JET(y) vs ET PJET(x) NN',
     &    100,0.,200.,0.,200.,' ')
*
        CALL HBPROF(7001,'.7 ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(7002,'.5 cone ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300., -1.0,1.0,'S')
        CALL HBPROF(7003,'NN ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300.,-1.0,1.0,'S')
*
        CALL HBPROF(8001,'.7 PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(8002,'.5 cone PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(8003,'NN PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')
*
        CALL HBOOK1(9001,'.7 Delta _R Pjet to matched jet',50,
     &    0.,1.0)
        CALL HBOOK1(9002,'.5 Delta _R Pjet to matched jet',50,
     &    0.,1.0)
        CALL HBOOK1(9003,'NN Delta _R Pjet to matched jet',50,
     &    0.,1.0)
*
        CALL HBPROF(10001,'.7 ENERGY JET - PJET VS meas ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
        CALL HBPROF(10002,'.5 ENERGY JET - PJET VS meas ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
        CALL HBPROF(10003,'NN ENERGY JET - PJETVS meas ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
        CALL HBPROF(10004,'.7 ENERGY JET - PJET VS pjet ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
        CALL HBPROF(10005,'.5 ENERGY JET - PJET VS pjet ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
        CALL HBPROF(10006,'NN ENERGY JET - PJET VS pjet ENERGY',50,
     &    0.,300.,-300.0,300.,'S')
*
        CALL HBPROF(10011,'.7 ET JET - PJET VS meas ET',50,
     &    0.,100.,-100.0,100.,'S')
        CALL HBPROF(10012,'.5 ET JET - PJET VS meas ET',50,
     &    0.,100.,-100.0,100.,'S')
        CALL HBPROF(10013,'NN ET JET - PJET VS meas ET',50,
     &    0.,100.,-100.0,100.,'S')
*
        CALL HBPROF(10021,'.7 ET JET - PJET VS Pjet ET',50,
     &    0.,100.,-100.0,100.,'S')
        CALL HBPROF(10022,'.5 ET JET - PJET VS Pjet ET',50,
     &    0.,100.,-100.0,100.,'S')
        CALL HBPROF(10023,'NN ET JET - PJET VS Pjet ET',50,
     &    0.,100.,-100.0,100.,'S')
*
        CALL HBPROF(10031,'ELEC .7 ENERGY JET - PJET VS meas ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
        CALL HBPROF(10032,'ELEC .5 ENERGY JET - PJET VS meas ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
        CALL HBPROF(10033,'ELEC NN ENERGY JET - PJETVS meas ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
        CALL HBPROF(10034,'ELEC .7 ENERGY JET - PJET VS pjet ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
        CALL HBPROF(10035,'ELEC .5 ENERGY JET - PJET VS pjet ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
        CALL HBPROF(10036,'ELEC NN ENERGY JET - PJETVS pjet ENERGY'
     &    ,50,0.,300.,-300.0,300.,'S')
C
        CALL HBPROF(10041,
     &    ' ELEC .7 ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(10042,
     &    ' ELEC .5 cone ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300., -1.0,1.0,'S')
        CALL HBPROF(10043,
     &    'ELEC NN ETA JET-ETA PJET VS meas ENERGY',
     &    50,0.,300.,-1.0,1.0,'S')
*
        CALL HBPROF(10051,
     &    'ELEC .7 PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(10052,
     &    'ELEC .5 cone PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')
        CALL HBPROF(10053,
     &    'ELEC NN PHI JET - PHI PJET VS meas ENERGY ',
     &    50,0.,300.,-1.0,1.0,'S')

      ENDIF
*
      NPJ=NPJETS
      NPJ = MIN(NPJ,7)
C      NPRINT 2000 ,NPJ
 2000 FORMAT(' NPJETS ',I10)
C
      IF ( DO_CORRECT ) THEN
        DO 3 IP = 1 , NPJ
          IF ( ABS(JETS(P_ID,1,IP)).NE.12 ) THEN
C
C ****  DO NOT CORRECT ELECTRONS
C
          DO 4 IALG = 1 , 3
            IF ( JETS(J_M,IALG+1,IP).NE.0 ) THEN
C JET MATCH
              ET_MEAS = JETS(J_ET,IALG+1,IP)
              ET_TRUE = JET_ET_TRUE(ET_MEAS,ALGNAME(IALG))
              JETS(J_ET,IALG+1,IP) = ET_TRUE
              JETS(J_R,IALG+1,IP) = ET_TRUE/JETS(P_ET,1,IP)
              JETS(J_E,IALG+1,IP) = JETS(J_E,IALG+1,IP)*ET_TRUE/ET_MEAS
            ENDIF
    4     CONTINUE
        ENDIF
    3 CONTINUE
      ENDIF
C
      DO 5 IP = 1 , NPJ
        REJECT(IP) = 0
    5 CONTINUE
C
      DO 10 IP = 1 , NPJ
        DO 20 JP = IP , NPJ
          IF ( IP.NE.JP ) THEN
            DELTA_ETA = (JETS(P_ETA,1,IP)-JETS(P_ETA,1,JP))
            DELTA_PHI = (JETS(P_PHI,1,IP)-JETS(P_PHI,1,JP))
            IF ( DELTA_PHI.GT.PI ) THEN
              DELTA_PHI = DELTA_PHI-TWOPI
            ELSEIF ( DELTA_PHI.LT.-PI ) THEN
              DELTA_PHI = DELTA_PHI+TWOPI
            ENDIF
            DELTA_R = SQRT(DELTA_ETA**2+DELTA_PHI**2)
            CALL HF1(1010,DELTA_R,1.0)
            IF ( DELTA_R.LT.DELTA_R_MIN ) THEN
C DIRTY PAIR OF PJETS
              REJECT(IP) = 1
              REJECT(JP) = 1
            ENDIF
          ENDIF
   20   CONTINUE
   10 CONTINUE
*
      DO 11 IP = 1 , NPJ
        IF ( REJECT(IP).EQ.0.AND.ABS(JETS(P_ID,1,IP)).NE.12.0 ) THEN
C IF HERE PJET PARENT NOT AN ELECTRON
          IF ( JETS(P_ET,1,IP).EQ.0.0 ) THEN
            PRINT 2001,RUN,EVENT,NPJ
 2001       FORMAT(' RUN,EVENT,NPJ ',2F10.3,2X,I7)
          ENDIF
          CALL HF1(1000,JETS(P_ET,1,IP),1.0)
          CALL HF1(1001,JETS(P_ET,1,IP),JETS(J_M,2,IP))
          CALL HF1(1002,JETS(P_ET,1,IP),JETS(J_M,3,IP))
          CALL HF1(1003,JETS(P_ET,1,IP),JETS(J_M,4,IP))
C
C
C ****  FOR THE FOLLOWING PROFILE MATCHES AND NON MATCHES SINCE WE ARE MEASURING
C ****  EFFIECIENCY.
C
          CALL HFILL(3001,JETS(P_ETA,1,IP),JETS(J_M,2,IP),1.0)  !ETA FOR .7
          CALL HFILL(3002,JETS(P_ETA,1,IP),JETS(J_M,3,IP),1.0)  !ETA FOR .5
          CALL HFILL(3003,JETS(P_ETA,1,IP),JETS(J_M,4,IP),1.0)  !ETA FOR NN
C
          IF(JETS(J_M,2,IP).EQ.0.0.AND.JETS(P_ET,1,IP).GT.30.0)THEN
C PJET HIGH ET AND NO MATCH IN
            WRITE(33,32)RUN,EVENT,JETS(P_ET,1,IP),IP,REJECT(IP),
     &        JETS(J_M,2,IP)
   32       FORMAT(' RUN,EVENT,PJET_ET,IJET,REJECT,.7MATCH ',2F10.0,
     &        F10.5,2I5,F10.5)
          ENDIF
          CALL HFILL(4001,JETS(P_ET,1,IP),JETS(J_M,2,IP),1.0)  !ET FOR .7
          CALL HFILL(4002,JETS(P_ET,1,IP),JETS(J_M,3,IP),1.0)  !ET FOR .5
          CALL HFILL(4003,JETS(P_ET,1,IP),JETS(J_M,4,IP),1.0)  !ET FOR NN
C
C
C ****  FOR THE FOLLOWING PROFILE MATCHES ONLY
C
          DO 42 IALG = 1 , 3
            IF ( JETS(J_M,IALG+1,IP).GT.0.0 ) THEN
              CALL HF1(1003+IALG,JETS(J_ET,IALG+1,IP),1.0)
C HISTOGRAM of Et of  jets
              CALL HFILL(5000+IALG,JETS(J_ETA,IALG+1,IP),
     &          JETS(J_R,IALG+1,IP),1.0) !Etrat/eta
              CALL HFILL(6000+IALG,JETS(J_ET,IALG+1,IP),
     &          JETS(J_R,IALG+1,IP),1.0) !Etrat/Et vs meas Et
              CALL HFILL(6010+IALG,JETS(P_ET,1,IP),
     &          JETS(J_R,IALG+1,IP),1.0) !Etrat/Et vs Pjet et
              CALL HFILL(6020+IALG,JETS(J_ET,IALG+1,IP),
     &          JETS(P_ET,1,IP),1.0) !Et of pjet(x) vs Et of meas jet
              CALL HFILL(6030+IALG,JETS(P_ET,1,IP),
     &          JETS(J_ET,IALG+1,IP),1.0) !Et of pjet vs Et of meas jet(x)
            ENDIF
   42     CONTINUE
C
          DO 30 IALG = 1 , 3
            DELTA_ETA = JETS(J_ETA,IALG+1,IP)-JETS(P_ETA,1,IP)
            DELTA_PHI = JETS(J_PHI,IALG+1,IP)-JETS(P_PHI,1,IP)
            DELTA_E   = JETS(J_E,IALG+1,IP)-JETS(P_E,1,IP)
            DELTA_ET   = JETS(J_ET,IALG+1,IP)-JETS(P_ET,1,IP)
C            print 2002,event,delta_eta,delta_phi,delta_e,
C     &      jets(j_m,ialg+1,ip)
 2002       FORMAT(' event,deta,dphi,de,match ',5F15.5)
            IF ( JETS(J_M,IALG+1,IP).NE.0 ) THEN
              CALL HFILL(7000+IALG,JETS(P_E,1,IP),DELTA_ETA,
     &          JETS(J_M,IALG+1,IP)) !DELTA ETA VS ET
              CALL HFILL(8000+IALG,JETS(P_E,1,IP),DELTA_PHI,
     &          JETS(J_M,IALG+1,IP)) !DELTA PHI VS ET
              DELTA_R = SQRT(DELTA_ETA**2+DELTA_PHI**2)
              CALL HF1(9000+IALG,DELTA_R,1.0)
              CALL HFILL(10000+IALG,JETS(J_E,IALG+1,IP),DELTA_E,
     &          1.0)
              CALL HFILL(10003+IALG,JETS(P_E,1,IP),DELTA_E,
     &          1.0)
              CALL HFILL(10010+IALG,JETS(J_ET,IALG+1,IP),DELTA_ET,
     &          1.0)
              CALL HFILL(10020+IALG,JETS(P_ET,1,IP),DELTA_ET,
     &          1.0)
            ELSE
            ENDIF
   30     CONTINUE
C
        ELSEIF ( REJECT(IP).EQ.0.AND.ABS(JETS(P_ID,1,IP)).EQ.12.0) THEN
C
C ****  DO ELECTRONS HERE
C
          DO 40 IALG = 1 , 3
            IF ( JETS(J_M,IALG+1,IP).NE.0 ) THEN
              DELTA_ETA = JETS(J_ETA,IALG+1,IP)-JETS(P_ETA,1,IP)
              DELTA_PHI = JETS(J_PHI,IALG+1,IP)-JETS(P_PHI,1,IP)
              DELTA_E   = JETS(J_E,IALG+1,IP)-JETS(P_E,1,IP)
              CALL HFILL(10030+IALG,JETS(J_E,IALG+1,IP),DELTA_E,
     &          1.0)
              CALL HFILL(10033+IALG,JETS(P_E,1,IP),DELTA_E,
     &          1.0)
              CALL HFILL(10040+IALG,JETS(J_E,IALG+1,IP),DELTA_ETA,
     &          1.0)
              CALL HFILL(10050+IALG,JETS(P_E,1,IP),DELTA_PHI,
     &          1.0)
            ELSE
            ENDIF
   40     CONTINUE
C
        ELSE
        ENDIF
        JET_MATCH = 1.0
   11 CONTINUE
      END
      REAL FUNCTION JET_ET_TRUE(ET_MEAS,ALGNAME)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : Given ET_measured and the cone size,
C-   will return the true ET
C-
C-   Inputs  : ET_MEAS in Gev
C-             Algorithm names (Cone7,cone5,Neighbor etc')
C-   Outputs : JET_ET_TRUE = true ET in GeV
C-   Controls: NONE
C-
C-   Created   7-MAR-1994   Rajendran Raja   
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INTEGER NC
      PARAMETER( NC = 3 )  
      INTEGER NALG
      PARAMETER( NALG = 3 )
C
C IALG=1 CONE.7
C IALG=2 CONE.5
C IALG=3 NN
C
      REAL MC_COEFF(NC,NALG)
      CHARACTER*(*) ALGNAME
      REAL    ET_MEAS
C
      DATA MC_COEFF/ -3.2081      ,   1.3063      , -0.34415E-03  ,
     &               -1.2911      ,   1.3788      , -0.83428E-03  ,
     &               1.6368      ,   1.5164      , -0.21183E-02  /
C

      SAVE MC_COEFF
      INTEGER IALG
      REAL    PAR(3)
      REAL    X
C
C----------------------------------------------------------------------
C
      IF ( ALGNAME.EQ.'CONE7' ) THEN
        IALG = 1
      ELSEIF ( ALGNAME.EQ.'CONE5' ) THEN
        IALG = 2
      ELSEIF ( ALGNAME.EQ.'NEIGHBOR' ) THEN
        IALG = 3
      ELSE
        CALL ERRMSG('TOP_PHYSICS','JET_ET_TRUE',
     &    'UNKOWN ALGORITHM NAME ','W')
        JET_ET_TRUE = ET_MEAS
        RETURN
      ENDIF
C
      X = ET_MEAS
      CALL UCOPY(MC_COEFF(1,IALG),PAR,3)
      JET_ET_TRUE = PAR(1)+PAR(2)*X+PAR(3)*X*X
C
C      WRITE(6,1)IALG,ET_MEAS,JET-ET_TRUE
C    1 FORMAT(' IALG,ET_MEAS,JET_ET_TRUE ',I5,2F15.5)
C
C
  999 RETURN
      END
