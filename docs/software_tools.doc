                                                    Olivier Callot
                                                   October 20, 1988
                                                    Serban Protopopescu
                                                 Updated May 30,1991

                            Tools for D0 Software
                            =====================


    This document is  intended to  briefly describe the  TOOLS provided to help
writing good and standard  software. The detailled  description of each item is
kept in separate files, whose reference will be given. 

[1] TEXT EDITING
_______________

    D0 uses it's own editor, called EVE, EVEDT or EDFOR. To call it, use EVe or
Edit ( minimum string in UPPER case ).  It provides standards for FORTRAN files
(  Subroutine  header,   cleaning,   indentation, ...  ), ZEBRA  documentation,
Structure  Charts,  Release Notes, ...  Usage of  any other  editor is STRONGLY
discouraged. Any comment  and/or suggestion for  improvement is encouraged. See
D0$EVEDT:EVEDT_REFERENCE.TEX for the complete documentation ( D0 note 728 ). 
It can be used to look at any FORTRAN entry point in the library by simply
using Gold-E and providing the name of the entry point. It also locates any
Zebra bank documentation by issuing command
COMMAND: ZEB xxxx

[2] CONVENTION CHECKER
_____________________

    To check that a FORTRAN file follows  the D0 standards, you must process it
thru the D0FLAVOR code  checker. It converts the D0  extensions to F77, uses
the Vax  compiler with  /STANDARD to  check for non  F77  constructs and checks
that the errors are not allowed extensions in D0 code. The D0FLAVOR program
also handles machine dependencies. To use it as a checker simply

$ D0FLAVOR/CHECK name_of_module

It can be called from inside EVE.


[3] COMMUNICATION
________________

    The general tool for  communication is the VMS  MAIL facility, to send mail
to a few   persons. To  distribute  to a  larger  audience  minute of meetings,
agenda, etc, a  tool called D0NEWS  has been developped, to distribute one copy
per vax.  Each user can  register for  the relevant  kind of  messages ( called
folders ). At login time,  the user is informed of  new messages in the various
selected  folders,  and can  read, print,  copy to his  own MAIL  file, ... the
messages by calling later on D0NEWS. See help inside D0_NEWS 

    To know  the MAIL  address and  phone number  of D0 users,  use the command
"WHOD0 part_of_name" and  you will see all users  whose names matches the given
string. Update procedure of the corresponding database will be provided soon. 

[4] PRINTING OF LISTINGS
_______________________

    The D0SOURCES utility is available to print source files ( Fortran, pascal,
or any  other  printable  file )  with entry  index  and page  numbering. It is
intended to print 'reference' listings of a package, ... The output is tuned to
your local printer. See D0$UTIL:SOURCES.DOC for more information. 

    To print  TEKTRONIX files on  a QMS or  TALARIS printer,  use the following
command: "D0TEKPR  file_name". It  will add the  necessary control sequence for
the printer to interpret  the Tektronix control  sequences. This is usefull for
GEANT  graphic  displays, you  put them in  a file by  first  connecting to the
computer  using SET  HOST/LOG xxx,  then running  GEANT, then  Logout. All your
session is recorded in a file SETHOST.LOG, edit it to extract each picture, and
print them by the D0TEKPR command. 
                                                                        Page 2

[5] DOCUMENTATION
________________

    The general  documentation on D0 rules, tools,  conventions, ... is kept in
D0$DOCS   directory.  The  file    D0$DOCS:INDEX.DOC  gives  the list and short
description of  the known  documentation.  The rules to  write documentation is
given in D0$DOCS:DOCUMENTS.DOC. 

    If you want to find the source file containing a given entry point, use the
following command:  "D0ENTRY entry_name". You will  see all the file names with
an entry point matching the given  string. This functionality is also available
from inside EVE, see the reference manual given in 1). 

[6] MACHINE DEPENDENCE
_______________________

    The offline code  should be as far  as possible machine  independent, using
FORTRAN77 with only those extensions  allowed in D0$DOCS:OFFLINE_STANDARDS.DOC.
But  some   operations (   mainly   input/output )  may  require  some  machine
dependency. A syntax to describe these 'flavors' and a tool to valid one of the
possible flavor is available, see D0$UTIL:D0FLAVOR.DOC . 


[7] RUNNING PROGRAMS
___________________

    Many D0  programs are build  with a FRAME,  controling the  initialization,
file access, ..., and APPLICATION,  processing a detector or checking some part
of the datas. A  tool is available to  describe for a  frame the way to call an
application  ( and vice  versa ), it  is called the   PROGRAM_BUILDER. A simple
introduction  to it  is given in    D0$DOCS:PROGRAM_BUILDER.DOC.  The following
frames  using  the    PROGRAM_BUILDER  are   available  for  analysis  and code
development:

CALOR_OFF  strictly batch frame for offline, does not use COMPACK.
           See D0$CALOR_OFF:CALOR_OFF_GUIDE.DOC
           For additional help contact D0SF14::HARRY

D0USER     interactive (uses COMPACK) and batch for offline, has option to look
           at shared common for online data, see D0$D0USER:D0USER_GUIDE.MEM
           For additional help contact BNLD01::SERBAN


EXAMINE2   interactive (uses COMPACK) for online, has option to look at files 
           on disk. See D0$EXAMINE2:EXAMINE_GUIDE.DOC.
           For additional help contact D0SF14::KLIMA
          

    A  command  procedure is   available to run  GEANT  with all  you favourite
options and  files. Just type  "D0GRUN", a  complete help  will be provided the
first time you will use it, and will be available on request after. 
