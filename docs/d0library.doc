--------------------------------------------------------------------------------


	I. Contents					June 17,1987
    D0LIBRARY contains the following subdirectories:

  .ADMIN_UTIL    procedures for library maintenance
  .ASPIRIN       program for conversion to FORTRAN 77
  .CALIB         calibration programs 
  .CDFLIB        CDF package for shared common
  .CERNLIB       CERN libraries       
  .COMPACK       D0 command interpreter
  .COOR          coordinate online user requests
  .D0DAQ         program to handle shared common
  .D0GEANT       D0 implementation of GEANT
  .D0H3          interface between DHS and DI3000
  .D0HMON        hardware monitoring tasks
  .D0RUN         manage communications between host and Level 2
  .D0USER        data analysis and offline code development program
  .DAQFIL        fill shared common from Level 2 buffer
  .DETECT        detector parameters  
  .DHS           dynamic histogram package
  .DOCS          documents            
  .ELNCON        communications between host and Level 2
  .EVEDT         D0 editor            
  .EVTMON        event monitoring programs
  .GIM           geometry tracing for D0SIM
  .INC           common blocks        
  .ISAJET        Montecarlo program   
  .ISAZEB        interface from ISAJET to ZEBRA
  .ITC           intertask communications
  .LINKS         parameters for structural links
  .LOGGER        handle logging of event data
  .MUON_RCT      muon programs        
  .MUON_UTIL     muon programs        
  .OFFLINE_UTIL  miscellaneous utilities
  .ONLINE_UTIL         "         "       (not useable offline)
  .PATCHY        PAM files            
  .RZ_QUERY      query language for RZ
  .SIM           D0SIM (simple montecarlo program)
  .SUPCON        communications between host and supervisor
  .ZBDUMP        dump Zebra banks in Level 2
  .ZEB           documentation for Zebra banks
  .ZEBRA_UTIL    utilities for accessing Zebra banks

--------------------------------------------------------------------------------

	II. CMS libraries				

    CMS is used to manage the source code and documents contained
    in the above subdirectories. There is a one-to-one mapping
    between a directory in D0LIBRARY and one in CMS, i.e.
    the CMS library for [D0LIBRARY.XXX] is [D0CMS.XXX].
    The directory [D0LIBRARY.XXX] contains .OLB's and documentation,
    the source code is subdirectories, usually named SOURCE if
    there is only one OLB in XXX, otherwise in a subdirectory 
    having the name of the OLB.

    The files in CMS are intelligible only to CMS and are not meant for
    human consumption.  The files in each SOURCE.DIR, on the other hand,
    are useful to humans and represent the latest released version of the
    software.  There will always be two object library files (OLBs).  For
    example, section XXXX contains XXXX.OLB and DEB_XXXX.OLB. The debug
    object library is tied to the files in SOURCE.DIR. 

--------------------------------------------------------------------------------

	III. Using CMS					(February 28,1986)
    In order to use CMS you must first make a logical
    connection to a particlar CMS library, then you
    can read and modify the files that are in the library.
    You can also add new files to the library, collect files into logical
    groups within the library and display history and organization information
    concerning the library.

	A. Making the Connection.    
    Use the CMS SET LIBRARY command.  For example, assuming $2$DUA6: is your
    default disk (it should be for all users of D0 CMS libraries) and you
    want to work with the FORTRAN files in the D0GEANT section, issue the
    command:
		$ CMS SET LIBRARY [D0CMS.D0GEANT]
    CMS will respond with in informational message indicating that your
    current CMS library is now $2$DUA6:[D0CMS.D0GEANT].  The process logical
    name CMS$LIB will now translate to that directory spec. also.  The CMS
    SET LIBRARY command can be re-issued at any time to change the active
    CMS library.

	B. Working with the Library
    To retrieve a file for modification	--> $ CMS RESERVE FILE.FOR "remark"
    To return a modified file		--> $ CMS REPLACE FILE.FOR "remark"
    To cancel a reservation		--> $ CMS UNRESERVE FILE.FOR "remark"
    To retrieve a file for reading	--> $ CMS FETCH FILE.FOR ""
    To add a new file to the library	-->
	$ CMS CREATE ELEMENT/NOCONCURR/NOREF/HIS="C#B" NEWFILE.FOR "remark"
    To see info about the library	--> $ CMS SHOW	HISTORY [FILE.FOR]
							RESERVATIONS
							GROUPS
							LIBRARY
    More details, of course, can be found in the DEC manuals.
    Instead of the CMS CREATE ELEMENT command users should use the
    procedure CCE (if module must be checked with ASPIRIN) or
    CCEN (no ASPIRIN).
