      SUBROUTINE GET_NEIGHBORS (IETA, IPHI, ILYR, UP, DOWN)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : Find the layers adjacent (above and below) a given
C-   cell.  
C-   
C-   N.B.:  ILYR = 3 is used as a "generic" result for ILYR = 3, 4, 5, and 6;
C-   routines calling this one must account for this feature.
C-   
C-
C-   Inputs  : IETA, IPHI, ILYR [I] - the indices of the given cell
C-   
C-                    The current algorithm does not use IPHI, but the
C-                    argument is left in place in case future implementation
C-                    finds it necessary.
C-   
C-   Outputs : UP [I] the layer of the cell immdediately above (away from the
C-                    interaction region); ZERO if no such cell
C-             DOWN  [I] the layer of the cell immediately below (towards the
C-                       interaction region) ; ZERO if no such cell
C-
C-
C-   Controls: none
C-
C-   Created  24-AUG-1992   Marc Paterno
C-   Updated  18-SEP-1992   Marc Paterno  Tweaked and verified data arrays;
C-                                        converted them from INTEGER to BYTE 
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INTEGER  IETA, IPHI, ILYR, UP, DOWN
C----------------------------------------------------------------------
      BYTE    ABOVE(17,37), BELOW(17,37), ABSETA

      DATA     BELOW /
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0,  0,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 7, 0, 8, 10, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 7, 8, 9, 10, 11,  0,  0, 12, 15,  0,
     & 0, 1, 2, 2, 2, 2, 3, 7, 8, 9, 10,  0,  0,  0, 11, 15,  0,
     & 0, 1, 2, 2, 2, 2, 3, 7, 8, 9, 10,  0,  0,  0, 11, 15, 16,
     & 0, 1, 2, 2, 0, 0, 0, 3, 8, 9, 10, 11,  0,  0, 12, 15, 16,
     & 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13,  0, 14, 16,
     & 0, 0, 0, 0, 0, 0, 3, 0, 7, 0,  9, 11, 12, 13, 14,  0, 15,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11,  0, 12, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12,  0, 13,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 2, 2, 2, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 1, 2, 0, 0, 0, 3, 0, 0, 0,  7, 11, 12, 13, 14,  0,  0,
     & 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 11, 12, 13, 14,  0,  0,
     & 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0, 13, 14,  0,  0 /

      DATA     ABOVE /
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13,  0,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13,  0,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7,  8, 10, 0, 11, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7,  8, 9, 10, 11, 12, 15,  0,  0, 16,  0, 0,
     &  2, 3, 7, 7, 7, 7,  8, 9, 10, 11, 15,  0,  0,  0, 16,  0, 0,
     &  2, 3, 7, 7, 7, 7,  8, 9, 10, 11, 15,  0,  0,  0, 16, 17, 0,
     &  2, 3, 8, 8, 0, 0,  0, 9, 10, 11, 12, 15,  0,  0, 16, 17, 0,
     &  0, 0, 0, 0, 0, 0,  0, 0, 10, 11, 12, 13, 14, 16,  0, 17, 0,
     &  0, 0, 0, 0, 7, 7,  9, 0, 11,  0, 12, 13, 14, 15, 17,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 14,  0, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 15,  0,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 7, 7, 7, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  2, 3, 7, 0, 0, 0, 11, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  0, 0, 0, 0, 0, 0,  0, 0,  0,  0, 12, 13, 14, 15,  0,  0, 0,
     &  0, 0, 0, 0, 0, 0,  0, 0,  0,  0,  0,  0, 14, 15,  0,  0, 0 /

C----------------------------------------------------------------------
      UP = 0
      DOWN = 0
      ABSETA = ABS(IETA)

      IF ( ABSETA .GE. 1 .AND.
     &     ABSETA .LE. 37 ) THEN
        IF ( ILYR .GE. 1 .AND.
     &       ILYR .LE. 17 ) THEN
          UP   = ABOVE (ILYR, ABSETA)
          DOWN = BELOW (ILYR, ABSETA)
        ENDIF
      ENDIF

      RETURN
      END
