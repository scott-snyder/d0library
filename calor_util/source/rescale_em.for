      SUBROUTINE RESCALE_EM(LBNK,XYZV,IPNT)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : RESCALE THE CASH AND PELC/PPHO OBJECT POINTED TO BY
C-                         LINK LBNK
C-
C-   Inputs  :LBNK = LINK TO BANK
C-            XYZV = VERTEX X,Y, AND Z
C-            IPNT = WORD IN BANK WHERE 4 VECTOR STARTS
C-   Outputs :
C-   Controls:
C-
C-   Created  14-NOV-1995   Rajendran Raja
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$INC:ZEBCOM.INC'
      INCLUDE 'D0$INC:ZEBSTP.INC'
      INCLUDE 'D0$INC:ZLINKC.INC'
      INTEGER NCH,POINTER,I,PACKED_WORD,IETA,IPHI,ILYR
      REAL ENERGY,ENERGY_NEW,ENERGY_OLD,ENERGY_SCALED
      INTEGER LBNK
      REAL    CHANGE_SCALE
      LOGICAL BTEST
      INTEGER IBSET,II
      INTEGER MSET
      INTEGER CRYO_INDEX,ICRYO
      LOGICAL DO_CRYO_CORR
      REAL    CRYO_FACTOR(3)
      REAL    XYZV(*)
      INTEGER IER
      REAL    XC,YC,ZC,DIST,COSX,COSY
      REAL    ETX,ETY,ETZ,ET,ENERGY_NEW1,ENERGY_PELC
      REAL    TOL,TOL_CASH
      INTEGER IOK
      INTEGER IPNT
C
      LOGICAL first
      SAVE first
      DATA first / .true. /
C----------------------------------------------------------------------
      IF( first ) THEN
        first = .false.
        CALL EZPICK('CAHITS_RCP')
        CALL EZGET_l('DO_CRYO_CORR',DO_CRYO_CORR,IER)
        CALL EZGET_rarr('CRYO_FACTOR',CRYO_FACTOR,IER)
        CALL EZGET('RESCALE_TOLERANCE',TOL,IER)
        CALL EZGET('CASH_SUM_TOLERANCE',TOL_CASH,IER)
        CALL EZRSET
      ENDIF
C
      LCACL = LQ(LBNK-2)
      IF(LCACL.EQ.0)THEN
        CALL ERRMSG('CALORIMETER','RESCALE_EM',
     &    'CACL BANK NOT PRESENT','W')
        RETURN
      ENDIF
C
      LCASH = LQ(LCACL-2)
      IF(LCASH.EQ.0)THEN
        CALL ERRMSG('CALORIMETER','RESCALE_EM',
     &    'CASH BANK NOT PRESENT','W')
        RETURN
      ENDIF
C
      NCH    = IQ(LCASH+2)
      POINTER = 1
C
C
C ****  CHECK IF CORRECTIONS HAVE ALREADY BEEN DONE
C
      MSET = 0
      MSET = IBSET(MSET,2)
      IF ( IAND(IQ(LBNK+31),MSET).EQ.0 ) THEN
C
C BIT 2 NOT SET, SO NO PHI CORRECTIONS DONE.
C
        ENERGY_NEW = 0.0
        ENERGY_OLD = 0.0
        ETX = 0.0
        ETY = 0.0
        ETZ = 0.0
        DO I = 1,NCH
          POINTER = POINTER+2
          PACKED_WORD = IQ(LCASH+POINTER)
          ENERGY = Q(LCASH+POINTER+1)
          CALL CAEP_INDICES(PACKED_WORD,IETA,IPHI,ILYR)
C
          ENERGY_OLD = ENERGY_OLD + ENERGY
          CALL CSF_SCALE(I,IETA,IPHI,ILYR,ENERGY,ENERGY_SCALED)
C
          IF ( DO_CRYO_CORR ) THEN
            CRYO_INDEX = ICRYO(IETA,IPHI,ILYR)
            IF((CRYO_INDEX.GE.1).AND.(CRYO_INDEX.LE.3))THEN
              ENERGY_SCALED = ENERGY_SCALED*CRYO_FACTOR(CRYO_INDEX)
            ENDIF
          ENDIF
C
          ENERGY_NEW = ENERGY_NEW + ENERGY_SCALED
C
          Q(LCASH+POINTER+1) = ENERGY_SCALED  !CHANGING CASH BANK
C
        ENDDO  ! loop over channels
C
        ENERGY_PELC = Q(LBNK+IPNT+3)
        CHANGE_SCALE = ENERGY_NEW/ENERGY_PELC
C
C ENERGY_OLD MAY NOT AGREE WITH ENERGY_PELC SINCE 
C ENERGY_PELC MAY HAVE BEEN THROUGH SOME VERSION OF CORRECT_EM!
C      
        ETX = Q(LBNK+IPNT)*CHANGE_SCALE
        ETY = Q(LBNK+IPNT+1)*CHANGE_SCALE
        ETZ = Q(LBNK+IPNT+2)*CHANGE_SCALE
        ENERGY_NEW1 = Q(LBNK+IPNT+3)*CHANGE_SCALE
        ET = SQRT(ETX**2+ETY**2)
C
        IF (ABS(ENERGY_PELC-ENERGY_OLD).GT.TOL_CASH ) THEN
          CALL ERRMSG('CALORIMETER','RESCALE_EM',
     &      'CASH BANK ENERGY NOT EQUAL TO PELC ENERGY','W')
        ENDIF
C
        CALL CHECK_RESCALE('ETX',Q(LBNK+IPNT),ETX,TOL)
        CALL CHECK_RESCALE('ETY',Q(LBNK+IPNT+1),ETY,TOL)
        CALL CHECK_RESCALE('ETZ',Q(LBNK+IPNT+2),ETZ,TOL)
        CALL CHECK_RESCALE('ENERGY',Q(LBNK+IPNT+3),ENERGY_NEW,TOL)
        CALL CHECK_RESCALE('ENERGY1',ENERGY_NEW1,ENERGY_NEW,TOL)
        CALL CHECK_RESCALE('ET',Q(LBNK+IPNT+4),ET,TOL)
C
        Q(LBNK+IPNT)   = ETX
        Q(LBNK+IPNT+1) = ETY
        Q(LBNK+IPNT+2) = ETZ
        Q(LBNK+IPNT+3) = ENERGY_NEW1
        Q(LBNK+IPNT+4) = ET
C
        IQ(LBNK+31) = IBSET(IQ(LBNK+31),2)   !SET THE BIT
C
      ENDIF
  999 RETURN
      END
