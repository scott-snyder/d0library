      SUBROUTINE CLGAEH
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : 
C-     CREATES ACTIVE CYLINDERS WHICH CONTAIN THE ACTIVE MODULES
C-     FOR THE END CAP HADRONIC CALORIMETER.
C-
C-   Inputs  : 
C-   Outputs : 
C-   Controls: 
C-     BANKS LIFTED:   CLGA, CSHA
C-     BANKS MODIFIED: CSHA for CLGI
C-
C-   Created  23-FEB-1987   Stephen Kahn
C-     REVISIONS: UPDATED TO D0-GEANT V1.0  S KAHN 18 JUNE 1987
C-                INTERCHANGE DY AND DZ FOR TRD1 S KAHN 13 JULY 87
C-                UPDATE DIMENSIONS S KAHN 14 OCT 88
C-   Updated  24-OCT-1989   Stephen Kahn  -- FILL FROM SRCP
C-                ADDED MFB, MCB CODE 
C-            30-JUN-1992   Stephen Kahn -- added all MH, OH modules
C-                so that CLIN can be hung off of them
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$INC:ZEBSTP.INC'
      INCLUDE 'D0$INC:CLINKS.INC'
      INCLUDE 'D0$PARAMS:CLGA.PARAMS'
      INCLUDE 'D0$INC:REGION.DEF'
      INCLUDE 'D0$INC:CSHA.DEF'
      INCLUDE 'D0$INC:PI.DEF'
      INCLUDE 'D0$LINKS:IZCLGA.LINK'
      INCLUDE 'D0$LINKS:IZCLGI.LINK'
      INCLUDE 'D0$LINKS:IZCMAT.LINK'
      INCLUDE 'D0$LINKS:IZCSHA.LINK'
      INCLUDE 'D0$LINKS:IZCREG.LINK'
      INCLUDE 'D0$LINKS:IZCLNK.LINK'
      INTEGER MCLGA(5), MCSHA(5), LORIG, LPGON, LTUBE, LCLGA(2)
      INTEGER LZFIND, NSEG, J, MCLNK(5)
      INTEGER LMFHA, LMFHB, LIFHA
      CHARACTER*14  MODULE_VOLUME_NAME
      COMMON / LCLGA / LCLGA, LPGON, LTUBE, LMFHA, LMFHB, LIFHA, LORIG
      REAL     RO, RI, ECCH1, DINF
      REAL     DPHI, CPHI, SPHI, CRACK, DEL
      REAL     PAX1(3), PAX2(3), INCH, SERL
      CHARACTER*4 CHAR4, CHAS4, CHAL4, CHARR
      INTEGER ICHARR
      EQUIVALENCE (ICHARR,CHARR), (CHAR4,MCLGA(1)), (CHAS4,MCSHA(1))
      EQUIVALENCE (CHAL4,MCLNK(1))
      DATA MCLGA / 4HCLGA, 6, 1, 18, 9/
      DATA MCSHA / 4HCSHA, 0, 0,  6, 9/
      DATA MCLNK / 4HCLNK, 1, 0,  4, 2/
      DATA CHAR4 / 'CLGA' /
      DATA CHAS4 / 'CSHA' /
      DATA CHAL4 / 'CLNK' /
      DATA NSEG  / 16 /
      DATA INCH /2.54/
C
C   END CAP HADRONIC CYLINDERS
C
      CALL MZLINT(IXSTP,'/LCLGA/',LCLGA,LTUBE,LORIG)    ! temp links
      LQCREG = LZFIND(IDVSTP,LC(LCGEH-IZCREG),ISECAL,IGREGN) ! get CREG
C
C
      MCLGA(5) = IOCLGA                         ! put in form address
C 
C    INNER FINE HADRONIC REGION
C
      LQCLGI = LZFIND(IDVSTP,LC(LQCREG-IZCLGI),ICIFHI,IGIDEN) ! get CLGI
      LTUBE = LC(LQCLGI-IXCSHA)
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICIFHA
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
C
      CALL MZLIFT(IDVSTP,LQCLGA,LQCREG,-IZCLGA,MCLGA,0)
      IC(LQCLGA+IGIDEN) = ICIFHA ! IFH ACTIVE REGION
      IC(LQCLGA+IGNLAY) = 4
      CHARR = 'IFHA'
      IC(LQCLGA+IGNAM ) = ICHARR
      IC(LQCLGA+IGCOOR) = 123
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA +IGDPHI) = TWOPI 
      CALL CLGSRC(LQCLGA,'IFH_MOTHER_VOLUME+Z','NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LQCLGA
      LIFHA = LQCLGA                 ! hold bank location for IHC
C
C     IFH SHAPE INFORMATION
C
C
      MCSHA(4) = 7
      MCSHA(5) = IOCSHA
      CALL MZLIFT(IDVSTP,LQCSHA,LCGEH,-IZCSHA,MCSHA,0)
C
      CALL SHPSRC(LQCSHA,'IFH_MOTHER_VOLUME+Z')
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCMAT),IC(LQCLGA+IGMATE),1) ! get CMAT
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
      LC(LQCLGI-IXCLGA) = LQCLGA   ! ref link to CLGA from CLGI
C
C     INNER COARSE HADRONIC ACTIVE TRAPEZOID
C
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICICHA
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
C
      LQCLGI = LZFIND(IDVSTP,LC(LQCREG-IZCLGI),ICICHI,IGIDEN)
      LTUBE = LC(LQCLGI-IXCSHA)      ! addr to inactive bank     
      IC(LQCLGA+IGIDEN) = ICICHA
      IC(LQCLGA+IGNLAY) = 1
      CHARR= 'ICHA'
      IC(LQCLGA+IGNAM ) = ICHARR
      CHARR= 'TUBS'
      IC(LQCLGA+IGSHAP) = ICHARR
      IC(LQCLGA+IGCOOR) = 123
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA+IGDPHI) = TWOPI/NSEG
      CALL CLGSRC(LQCLGA,'ICH_MOTHER_VOLUME+Z','NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LIFHA         ! store address of IFH for alignments
C
C     ICH TRD1 SHAPE INFO
C
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,'ICH_MOTHER_VOLUME+Z')
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCMAT),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
      LC(LQCLGI-IXCLGA) = LQCLGA   ! ref link to CLGA from CLGI
C
C     MIDDLE FINE ACTIVE CYLINDER
C
      CALL GTSRCP('EC_MH_SEGMENTS',NSEG,1)     ! number of MH phi modules
      LQCLGI = LZFIND(IDVSTP,LC(LQCREG-IZCLGI),ICMFHI,IGIDEN) ! get CLGI
      LTUBE = LC(LQCLGI-IXCSHA)
C
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICMFHA
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
      IC(LQCLGA+IGIDEN) = ICMFHA        ! module ident code
      IC(LQCLGA+IGNLAY) = 4
      CHARR= 'MFHA'
      IC(LQCLGA+IGNAM ) = ICHARR
      CHARR= 'TRD1'
      IC(LQCLGA+IGSHAP) = ICHARR
      IC(LQCLGA+IGCOOR) = 345
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA+IGDPHI) = TWOPI/NSEG
      MODULE_VOLUME_NAME = 'EC_MFA+1 '
      CALL CLGSRC(LQCLGA,MODULE_VOLUME_NAME,'NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LQCLGA
      LMFHA = LQCLGA     ! store for MCH links for alignments
C
C     MFH TUBE SHAPE INFO
C
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,MODULE_VOLUME_NAME)
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCREG),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA    
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
      LC(LQCLGI-IXCLGA) = LQCLGA   ! ref link to CLGA from CLGI
C
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICMFHB
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
C
      IC(LQCLGA+IGIDEN) = ICMFHB
      IC(LQCLGA+IGNLAY) = 4
      CHARR= 'MFHB'
      IC(LQCLGA+IGNAM ) = ICHARR
      CHARR= 'TRD1'
      IC(LQCLGA+IGSHAP) = ICHARR
      IC(LQCLGA+IGCOOR) = 345
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA+IGDPHI) = TWOPI/NSEG
      MODULE_VOLUME_NAME(6:6) = 'B'    ! name is now 'EC_MFB+n'
      CALL CLGSRC(LQCLGA,MODULE_VOLUME_NAME,'NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LQCLGA
      LMFHB = LQCLGA                 ! store for MCHB 
C
C     MFH TUBE SHAPE INFO
C
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,MODULE_VOLUME_NAME)
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCREG),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA    
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
C
C     MIDDLE COARSE ACTIVE CYLINDER
C
      LQCLGI = LZFIND(IDVSTP,LC(LQCREG-IZCLGI),ICMCHI,IGIDEN)
      LTUBE = LC(LQCLGI - IXCSHA)
C
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICMCHA
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
C
      IC(LQCLGA+IGIDEN) = ICMCHA       ! module ident code
      IC(LQCLGA+IGNLAY) = 1
      CHARR= 'MCHA'
      IC(LQCLGA+IGNAM ) = ICHARR
      CHARR= 'TRD1'
      IC(LQCLGA+IGSHAP) = ICHARR
      IC(LQCLGA+IGCOOR) = 345
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA +IGDPHI) = TWOPI/NSEG 
      MODULE_VOLUME_NAME = 'EC_MCA+1 '
      CALL CLGSRC(LQCLGA,MODULE_VOLUME_NAME,'NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LMFHA
C
C     MCH TUBE SHAPE INFO
C
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,MODULE_VOLUME_NAME)
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCREG),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
      LC(LQCLGI-IXCLGA) = LQCLGA   ! ref link to CLGA from CLGI
C
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICMCHB
      IC(LQCLNK + IGNSEG) = 1
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
C
      IC(LQCLGA+IGIDEN) = ICMCHB
      IC(LQCLGA+IGNLAY) = 1
      CHARR= 'MCHB'
      IC(LQCLGA+IGNAM ) = ICHARR
      CHARR= 'TRD1'
      IC(LQCLGA+IGSHAP) = ICHARR
      IC(LQCLGA+IGCOOR) = 345
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA +IGDPHI) = TWOPI/NSEG 
      MODULE_VOLUME_NAME(6:6) = 'B'
      CALL CLGSRC(LQCLGA,MODULE_VOLUME_NAME,'NONE')
      CALL SBIT1(IC(LQCLGA),IBZRFL)  ! reflect on Z
      LC(LQCLNK - 1) = LMFHB
C
C     MCH TUBE SHAPE INFO
C
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,MODULE_VOLUME_NAME)
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCREG),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
C
C
C     OUTER HADRONIC REGION
C
      CALL GTSRCP('EC_OH_SEGMENTS',NSEG,1)
      LQCLGI = LZFIND(IDVSTP,LC(LQCREG-IZCLGI),ICOCHI,IGIDEN) ! get CLGI
      LPGON = LC(LQCLGI-IXCSHA)
      MCLNK(2) = NSEG
      CALL MZLIFT(IDVSTP, LQCLNK, LQCREG, -IZCLNK, MCLNK, 0)
      IC(LQCLNK + IGIDEN) = ICOCHA
C     IC(LQCLNK + IGNSEG) = NSEG
      IC(LQCLNK + IGNSEG) = 1      ! set to 1 until survey is provided for each 
                                   ! module
      IC(LQCLNK + IGJPHI) = 1
      IC(LQCLNK + IGN1) = 0
      DO 300 J = 1, NSEG
      IF( J.EQ.1) THEN
        MCLGA(3) = 1
      ELSE
        MCLGA(3) = 0
      END IF
      CALL MZLIFT(IDVSTP,LQCLGA,LQCLGA,0,MCLGA,0)
C
      IC(LQCLGA+IGIDEN) = ICOCHA + ICMINC*(J-1)
      IC(LQCLGA+IGNLAY) = 3
      CHARR= 'OCHA'
      IC(LQCLGA+IGNAM ) = ICHARR
      IC(LQCLGA+IGCOOR) = 345
      IC(LQCLGA+IGPERP) = 3
      C(LQCLGA +IGDPHI) = TWOPI/NSEG 
      MODULE_VOLUME_NAME = 'EC_OCH+  '
      IF( J .LT. 10) THEN
        WRITE(MODULE_VOLUME_NAME(8:9),'(I1.1,1X)') J ! J is GEANT label
      ELSE
        WRITE(MODULE_VOLUME_NAME(8:9),'(I2.2)') J
      END IF
      IF( J.LE.4) SERL = 4-J
      IF( J.GE.13) SERL = 12-J
      IF( J.GE.5 .AND. J.LE.12) SERL = 13-J
      C(LQCLGA + IGSERL) = SERL
      CALL CLGSRC(LQCLGA,MODULE_VOLUME_NAME,'NONE')
      CALL SBIT1(iC(LQCLGA),IBZRFL)  ! reflect on z
      LC(LQCLNK-J) = LQCLGA
C
C     OCH TRAP SHAPE INFO
C
      MCSHA(4) = 13
      CALL MZLIFT(IDVSTP,LQCSHA,LQCSHA,0,MCSHA,0)
      CALL SHPSRC(LQCSHA,MODULE_VOLUME_NAME)
C
      LQCMAT = LZFIND(IDVSTP,LC(LCGEH-IZCREG),IC(LQCLGA+IGMATE),1)
      LC(LQCLGA-IXCMAT) = LQCMAT   ! ref link to CMAT
      LC(LQCLGA-IXCLGI) = LQCLGI   ! ref link to CLGI
      LC(LQCLGA-IXCSHA) = LQCSHA   ! ref link to CSHA
      LC(LQCLGI-IXCLGA) = LQCLGA   ! ref link to CLGA from CLGI
  300 CONTINUE
C
      LCLGA(1) = 0
      RETURN
      END
