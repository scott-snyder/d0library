      SUBROUTINE J_DOSEGM(ISEG)
C  DRAW ONE SEGMENT (NUMBER ISEG).
      INCLUDE 'D0$GRAPHICS_UTIL$XWNDI3:XWNEMU.INC'
      CHARACTER*120 STRING
      JSTAK=0
      IX=INDS1(ISEG)
C  CHECK
      IF(IX.GT.NBLOCX) THEN
        LFRAME=.FALSE.
        GO TO 9000
      ENDIF
      NCALL=NCALLS(ISEG)
      IF(NCALL.EQ.0) GO TO 9000
C
C  START OF NEW SEGMENT--PICK UP PARAMETERS
      CALL JALOAD(IBLOC(IX))
      IX=IX+23
C  SET THE PARAMETERS
      CALL JARSET
C  PICK UP THE WINDOWS SAVED WITH THIS SEGMENT
      DO I=1,4
        DO J=1,3
          RJ4(I,J)=RJ4SAV(I,J,ISEG)
        ENDDO
      ENDDO
C  IF J_RZP3D WANTS NEW PAN OR ZOOM WINDOW, DO IT.
      IF(MODWIN)THEN
c        TYPE *,' USING MODWIN WINDOWS'
        UMIN=UMINZ
        UMAX=UMAXZ
        VMIN=VMINZ
        VMAX=VMAXZ
      ENDIF
C  FIND THE WINDOW TRANSFORMATION FACTORS
      CALL J_COORDS
C  DO THE INSTRUCTIONS
      ICALL=1
C  LOOP BACK TO HERE
  800 CONTINUE
      IDSUB=IBLOC(IX)
      IX=IX+1
      IF(IDEBUG.GT.5)TYPE 888,IX,IDSUB,ICALL
  888 FORMAT(' IN JFRAME IX,IDSUB,ICALL:',3I)
C------------------------------------------------------
C  BRANCH ON SUBROUTINE
      GO TO(1001,1001,1003,1004,1005,
     &      1006,1007,1008,1009,1010,
     &      1011,1012,1013,1014,1015,
     &      1016,1017,1018,1019,1020,
     &      1021,1022,1023,1024,1025,
     &      1026,1027,1028,1029,1030,
     &      1036,1037,1038,1039,1040,
     &      1031,1032,1033,1034,1035,
     &      1041) IDSUB
 1001 CALL J3DRAW(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1002 CALL J3MARK(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1003 CALL J3MOVE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1004 N=IBLOC(IX)
      IX=IX+1
      CALL J3POLY(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
      IX=IX+3*N
      GO TO 100
 1005 N=IBLOC(IX)
      IX=IX+1
      CALL J3PLGN(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
      IX=IX+3*N
      GO TO 100
 1006 CALL JDRAW(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1007 CALL JMARK(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1008 CALL JMOVE(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1009 N=IBLOC(IX)
      IX=IX+1
      CALL JPOLY(SBLOC(IX),SBLOC(IX+N),N)
      IX=IX+2*N
      GO TO 100
 1010 N=IBLOC(IX)
      IX=IX+1
      CALL JPOLGN(SBLOC(IX),SBLOC(IX+N),N)
      IX=IX+2*N
      GO TO 100
 1011 CALL JCOLOR(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1012 CALL JINTEN(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1013 CALL JLSTYL(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1014 CALL JLWIDE(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1015 CALL JPEN(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1016 CALL JPEDGE(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1017 CALL JPINTR(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1018 CALL JPIDEX(IBLOC(IX),IBLOC(IX+1))
      IX=IX+2
      GO TO 100
C  NOT ASSIGNED (IPINT IS SECOND ARGUMENT OF JPIDEX)
 1019 CONTINUE
      GO TO 100
 1020 CALL JCMARK(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1021 CONTINUE
C!!!PROVIDE          CALL JPIKID(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1022 CALL JPATH(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1023 CALL JFONT(IBLOC(IX))
      IX=IX+1
      GO TO 100
 1024 CALL JJUST(IBLOC(IX),IBLOC(IX))
      IX=IX+2
      GO TO 100
 1025 CALL JRECT(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2),SBLOC(IX+3))
      IX=IX+4
      GO TO 100
 1026 CALL JR3DRA(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1027 CALL JR3MRK(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1028 CALL JR3MOV(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1029 N=IBLOC(IX)
      IX=IX+1
      CALL JR3PLY(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
      IX=IX+3*N
      GO TO 100
 1030 N=IBLOC(IX)
      IX=IX+1
      CALL JR3PGN(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
      IX=IX+3*N
      GO TO 100
 1031 CALL JSIZE(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1032 CALL JBASE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1033 CALL JPLANE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
      IX=IX+3
      GO TO 100
 1034 CALL J_GETSTR(IX,LENST,STRING)
      CALL J1STRG(STRING)
      GO TO 100
 1035 CALL J_GETSTR(IX,LENST,STRING)
c          type 767,ix,lenst,string(1:lenst)
c  767     format(' in dosegm(j3strg)-ix,lenst,string:',2i8,' >',a)
      CALL J3STRG(STRING)
      GO TO 100
 1036 CALL JRDRAW(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1037 CALL JRMARK(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1038 CALL JRMOVE(SBLOC(IX),SBLOC(IX+1))
      IX=IX+2
      GO TO 100
 1039 N=IBLOC(IX)
      IX=IX+1
      CALL JRPOLY(SBLOC(IX),SBLOC(IX+N),N)
      IX=IX+2*N
      GO TO 100
 1040 N=IBLOC(IX)
      IX=IX+1
      CALL JRPLGN(SBLOC(IX),SBLOC(IX+N),N)
      IX=IX+2*N
      GO TO 100
 1041 ISEGNW=IBLOC(IX)              ! CALLOB, PICK UP SEGMENT #
      IX=IX+1
      GO TO 100
C
  100 IF(ICALL.EQ.NCALL) GO TO 810
      ICALL=ICALL+1
      GO TO 800
  810 IF(JSTAK.EQ.0) RETURN
      ISEG=ISGSTK(JSTAK)
      NCALL=NCALLS(ISEG)
      IX=IXSTAK(JSTAK)
      ICALL=ICSTAK(JSTAK)
      JSTAK=JSTAK-1
c      type 809,jstak,iseg,ix,icall,ncall
c  809 format(' 810-jstak,iseg,ix,icall,ncall:',5i5)
      GO TO 100
 9000 JSTAK=0
      END
