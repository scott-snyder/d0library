      SUBROUTINE J_TR3XYZ(X,Y,Z,XP,YP,ZP)
C  DO THE VIEWING TRANSFORMATION ON COORDINATES
      INCLUDE 'D0$GRAPHICS_UTIL$XWNDI3:XWNEMU.INC'
C  DO MODELLING TRANSFORMATION IF CALLED FOR
      IF(IMODEL.EQ.0) THEN
        XP=X
        YP=Y
        ZP=Z
      ELSE
C!!!!ORDER???
        XP=X*MMODEL(1,1)+Y*MMODEL(2,1)+Z*MMODEL(3,1)+MMODEL(4,1)
        YP=X*MMODEL(1,2)+Y*MMODEL(2,2)+Z*MMODEL(3,2)+MMODEL(4,2)
        ZP=X*MMODEL(1,3)+Y*MMODEL(2,3)+Z*MMODEL(3,3)+MMODEL(4,3)
      ENDIF
C  TRANSLATE TO ORIGIN OF UVN SYSTEM
      XTR=XP-XVW
      YTR=YP-YVW
      ZTR=ZP-ZVW
C  ROTATE TO UVN AXES
      XP=XTR*UVECX+YTR*UVECY+ZTR*UVECZ
      YP=XTR*VVECX+YTR*VVECY+ZTR*VVECZ
      ZP=XTR*VNORMX+YTR*VNORMY+ZTR*VNORMZ
      IF(IPROJ.EQ.3) THEN
C  THIS IS A PERSPECTIVE TRANSFORMATION.
        SFACTR=VDIST/(VDIST+ZP)
        XP=SFACTR*XP
        YP=SFACTR*YP
C  (OBLIQUE TRANSFORMATIONS NOT IMPLEMENTED YET)
      ENDIF
C  TRANSFORM TO VIEWPORT COORDINATES
      XP=(XP-UMIN)*XSCALE+VXMIN
      YP=(YP-VMIN)*YSCALE+VYMIN
C  IMAGE TRANSFORMATIONS ON SEGMENTS
      IF(ISEGNM.GT.0) THEN
        IF(ITYCUR.GT.0) THEN
          IF(ITYCUR.GT.1) THEN
            DX=XP-PXC
            DY=YP-PYC
            XP=(DX*CSC-DY*SNC)+PXC
            YP=(DX*SNC+DY*CSC)+PYC
          ELSE
C!!!STICK IN ASSOCIATION STUFF HERE  (JLOCAT 7)
            XP=XP+TXC
            YP=YP+TYC
          ENDIF
        ENDIF
      ENDIF
C  TRANSFORM TO DEVICE COORDINATES LATER (SEE J_TRDEV)
      END
