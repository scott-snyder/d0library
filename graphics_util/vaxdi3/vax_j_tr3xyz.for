      SUBROUTINE J_TR3XYZ(X,Y,Z,XP,YP,ZP)
C  DO THE VIEWING TRANSFORMATION ON COORDINATES
      COMMON/SCRTRN/XSCALE,YSCALE,XSCALS,YSCALS
      REAL*4 X,Y,Z,XP,YP,ZP,XPR,YPR,ZPR
      INCLUDE 'D0$INC:DI3INC.INC'
C
C  DO MODELLING TRANSFORMATION IF CALLED FOR
      IF(IMODEL.EQ.1) GO TO 5
      XP=X
      YP=Y
      ZP=Z
      GO TO 10
    5 XP=X*MMODEL(1,1)+Y*MMODEL(2,1)+Z*MMODEL(3,1)+MMODEL(4,1)
      YP=X*MMODEL(1,2)+Y*MMODEL(2,2)+Z*MMODEL(3,2)+MMODEL(4,2)
      ZP=X*MMODEL(1,3)+Y*MMODEL(2,3)+Z*MMODEL(3,3)+MMODEL(4,3)
C  TRANSLATE TO ORIGIN OF UVN SYSTEM
   10 XTR=XP-XVW
      YTR=YP-YVW
      ZTR=ZP-ZVW
C  ROTATE TO UVN AXES
      XP=XTR*UVECX+YTR*UVECY+ZTR*UVECZ
      YP=XTR*VVECX+YTR*VVECY+ZTR*VVECZ
      ZP=XTR*VNORMX+YTR*VNORMY+ZTR*VNORMZ
      IF(IPROJ.NE.3)GO TO 20
C  THIS IS A PERSPECTIVE TRANSFORMATION.
      SFACTR=VDIST/(VDIST+ZP)
      XP=SFACTR*XP
      YP=SFACTR*YP
C  (OBLIQUE TRANSFORMATIONS NOT IMPLEMENTED YET)
C  TRANSFORM TO VIEWPORT COORDINATES
   20 XP=(XP-UMIN)*XSCALE+VXMIN
      YP=(YP-VMIN)*YSCALE+VYMIN
C  IMAGE TRANSFORMATIONS
      IF(ISEGNM.EQ.0) GO TO 30
      IF(ITYCUR.EQ.0) GO TO 30
      IF(ITYCUR.EQ.1) GO TO 35
      DX=XP-PXC
      DY=YP-PYC
      XP=(DX*CSC-DY*SNC)+PXC
      YP=(DX*SNC+DY*CSC)+PYC
C!!!STICK IN ASSOCIATION STUFF HERE  (JLOCAT 7)
   35 XP=XP+TXC
      YP=YP+TYC
C  TRANSFORM TO SCREEN COORDINATES
   30 XP=(XP-VCXMN)*XSCALS+XMARG
      YP=(YP-VCYMN)*YSCALS+YMARG
      END
