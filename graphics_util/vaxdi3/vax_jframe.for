C-   Updated  24-MAR-2004   sss - compile with g77.
      SUBROUTINE JFRAME
C  CLEAR THE DISPLAY AREA AND REDRAW ALL RETAINED SEGMENTS
      INCLUDE 'D0$INC:DI3INC.INC'
      COMMON/RZMODS/MODWIN,UMINZ,UMAXZ,VMINZ,VMAXZ
      COMMON/BCKCOL/IBCOLR
      COMMON/FRAME/LFRAME,LENST
      LOGICAL LFRAME
      LOGICAL MODWIN
      CHARACTER*120 STRING
      INTEGER IFIL(40)
      INTEGER*4 IPSAVD(23)
      EQUIVALENCE (IFIL,I3DRAW)
      DATA IFIL/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
     & 21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40/
C
C  CLEAR THE DISPLAY
      CALL J_ERASE(VD_ID)
C  JFRAME FLAG
      LFRAME=.TRUE.
C  PUT BACKGROUND COLOR INTO THE DISPLAY
      IF(IBCOLR.EQ.0) GO TO 5
      IPDTEM=IPEDGE
      IPCTEM=IPCOLO
      IPITEM=IPINT
      IPEDGE=1
      IPCOLO=IBCOLR
      IPITEM=0
      CALL JRECT(UMIN,VMIN,UMAX,VMAX)
      IPEDGE=IPDTEM
      IPCOLO=IPCTEM
      IPINT=IPITEM
C  ZERO THE POSITION
   5  XPOSN=0.
      YPOSN=0.
      ZPOSN=0.
C  SUPPRESS ENTRIES IN SEGMENT STORAGE (BLOCK J_PUTSG...)
      PUTS=.FALSE.
C
C  DRAW ALL VISIBLE SEGMENTS
      IF(NSEGS.EQ.0) GO TO 9000
C  SAVE DEFAULTS AND CURRENT CONDITIONS
      CALL JASAVE(IPSAVD)
C
      IF(IDEBUG.GT.5) CALL J_DMPSEG(JUNIT)
C  RUN THROUGH THE SEGMENTS
      DO 10 ISEG=1,NSEGS
        ISEGNM=NUMSEG(ISEG)
C  ENABLE SOON!!!
C  VISIBLE?
        IF(IVIS(ISEG).EQ.0) GO TO 10
        IX=INDS1(ISEG)
C  CHECK
        IF(IX.GT.NBLOCX) GO TO 9000
        NCALL=NCALLS(ISEG)
C
C  START OF NEW SEGMENT--PICK UP PARAMETERS
        CALL JALOAD(IBLOC(IX))
        IX=IX+23
C  SET THE PARAMETERS
        CALL JARSET
C  PICK UP THE WINDOWS SAVED WITH THIS SEGMENT
        DO 14 I=1,4
          DO 15 J=1,3
            RJ4(I,J)=RJ4SAV(I,J,ISEG)
   15     CONTINUE
   14   CONTINUE
C  IF J_RZP3D WANTS NEW PAN OR ZOOM WINDOW, DO IT.
        IF(MODWIN)THEN
          UMIN=UMINZ
          UMAX=UMAXZ
          VMIN=VMINZ
          VMAX=VMAXZ
        ENDIF
C  FIND THE WINDOW TRANSFORMATION FACTORS
        CALL J_DEVMAT
C  COPY THE IMAGE TRANSFORMATION INTO CURRENT COMMON BLOCK
        ITYCUR=ITTYP(ISEG)
        IF (ITYCUR.EQ.0) GO TO 20
        IF (ITYCUR.EQ.1) GO TO 25
        PXC=PXSEG(ISEG)
        PYC=PYSEG(ISEG)
        SXC=SXSEG(ISEG)
        SYC=SYSEG(ISEG)
        CSC=COS(ROTSEG(ISEG))
        SNC=SIN(ROTSEG(ISEG))
   25   TXC=TXSEG(ISEG)
        TYC=TYSEG(ISEG)
C  DO THE INSTRUCTIONS
   20   CONTINUE
        DO 100 ICALL=1,NCALL
          IDSUB=IBLOC(IX)
          IX=IX+1
          IF(IDEBUG.GT.5)write (*,888),IX,IDSUB,ICALL
C&IF LINUX
C&  888     FORMAT(' IN JFRAME IX,IDSUB,ICALL:',3I7)
C&ELSE
  888     FORMAT(' IN JFRAME IX,IDSUB,ICALL:',3I)
C&ENDIF
C  BRANCH ON SUBROUTINE
          GO TO(1001,1001,1003,1004,1005,
     &      1006,1007,1008,1009,1010,
     &      1011,1012,1013,1014,1015,
     &      1016,1017,1018,1019,1020,
     &      1021,1022,1023,1024,1025,
     &      1026,1027,1028,1029,1030,
     &      1036,1037,1038,1039,1040,
     &      1031,1032,1033,1034,1035) IDSUB
 1001     CALL J3DRAW(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1002     CALL J3MARK(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1003     CALL J3MOVE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1004     N=IBLOC(IX)
          IX=IX+1
          CALL J3POLY(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
          IX=IX+3*N
          GO TO 100
 1005     N=IBLOC(IX)
          IX=IX+1
          CALL J3PLGN(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
          IX=IX+3*N
          GO TO 100
 1006     CALL JDRAW(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1007     CALL JMARK(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1008     CALL JMOVE(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1009     N=IBLOC(IX)
          IX=IX+1
          CALL JPOLY(SBLOC(IX),SBLOC(IX+N),N)
          IX=IX+2*N
          GO TO 100
 1010     N=IBLOC(IX)
          IX=IX+1
          CALL JPOLGN(SBLOC(IX),SBLOC(IX+N),N)
          IX=IX+2*N
          GO TO 100
 1011     CALL JCOLOR(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1012     CALL JINTEN(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1013     CALL JLSTYL(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1014     CALL JLWIDE(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1015     CALL JPEN(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1016     CALL JPEDGE(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1017     CALL JPINTR(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1018     CALL JPIDEX(IBLOC(IX),IBLOC(IX+1))
          IX=IX+2
          GO TO 100
C  NOT ASSIGNED (IPINT IS SECOND ARGUMENT OF JPIDEX)
 1019     CONTINUE
          GO TO 100
 1020     CALL JCMARK(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1021     CONTINUE
C!!!PROVIDE          CALL JPIKID(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1022     CALL JPATH(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1023     CALL JFONT(IBLOC(IX))
          IX=IX+1
          GO TO 100
 1024     CALL JJUST(IBLOC(IX),IBLOC(IX))
          IX=IX+2
          GO TO 100
 1025     CALL JRECT(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2),SBLOC(IX+3))
          IX=IX+4
          GO TO 100
 1026     CALL JR3DRA(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1027     CALL JR3MRK(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1028     CALL JR3MOV(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1029     N=IBLOC(IX)
          IX=IX+1
          CALL JR3PLY(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
          IX=IX+3*N
          GO TO 100
 1030     N=IBLOC(IX)
          IX=IX+1
          CALL JR3PGN(SBLOC(IX),SBLOC(IX+N),SBLOC(IX+2*N),N)
          IX=IX+3*N
          GO TO 100
 1031     CALL JSIZE(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1032     CALL JBASE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1033     CALL JPLANE(SBLOC(IX),SBLOC(IX+1),SBLOC(IX+2))
          IX=IX+3
          GO TO 100
 1034     CALL J_GETSTR(IX,LENST,STRING)
          CALL J1STRG(STRING)
          GO TO 100
 1035     CALL J_GETSTR(IX,LENST,STRING)
          CALL J3STRG(STRING)
          GO TO 100
 1036     CALL JRDRAW(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1037     CALL JRMARK(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1038     CALL JRMOVE(SBLOC(IX),SBLOC(IX+1))
          IX=IX+2
          GO TO 100
 1039     N=IBLOC(IX)
          IX=IX+1
          CALL JRPOLY(SBLOC(IX),SBLOC(IX+N),N)
          IX=IX+2*N
          GO TO 100
 1040     N=IBLOC(IX)
          IX=IX+1
          CALL JRPLGN(SBLOC(IX),SBLOC(IX+N),N)
          IX=IX+2*N
          GO TO 100
C
  100   CONTINUE
   10 CONTINUE
C  FORCE OUTPUT BUFFER IF NEEDED
      CALL J_FORCE
C  RESTORE DEFAULTS AND CURRENT CONDITIONS
      ISEGNM=-1
      CALL JALOAD(IPSAVD)
      CALL JARSET
      LFRAME=.FALSE.
      RETURN
 9000 LFRAME=.FALSE.
      RETURN
      END
