      SUBROUTINE MULIB_AUX_WRITE(IUNIT_AUX,NREC,NTOT_REC,FILNAM,RCYCLES,
     &  NO_RCYCLES,NDC,NRCYCLES,NTOT_CYCLES,CYC)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : WRITE CYCLES ARRAY
C-   AND INPUT FILE NAME TO AUXILLIARY  FILE
C-
C-   Inputs  :IUNIT_AUX = UNIT TO WRITE TO
C-            NREC = Record number in Auxillary file
C-            NTOT_REC = total number of files in auxilliary file
C-            FILNAM = Input file name
C-            RCYCLES = Cycles array
C-            NDC     = length of RCYCLES
C-            NRCYCLES = CUMULATIVE CYCLE COUNT (TRACKS) IN RCYCLES
C-            NTOT_CYCLES = TOTAL NUMBER OF CYCLES
C-            CYC = .TRUE. WILL WRITE CYCLES INFO
C-   Outputs :
C-   Controls:
C-
C-   Created   11-JUN-1993   Jasbir Singh and Chip Stewart
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$INC:MULCON.INC'
      CHARACTER*(*) FILNAM
      INTEGER IUNIT_AUX,NO_NTOTCYCLES
      INTEGER NREC,NTOT_REC,RCYCLES(*),NTOT_CYCLES,NO_RCYCLES(*)
      INTEGER PRTUN,SSUNIT
      INTEGER NDC,K,NRCYCLES
      INTEGER IOSTAT,IREC
      INTEGER KMOM,KETA,KVRT
      INTEGER IOSTAT_DEL
      INTEGER SREC
      LOGICAL CYC
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      INTEGER SRECL
      INTEGER NREAD_CYC,REC_LEFT
      INTEGER IER,KLO
C----------------------------------------------------------------------
      IF ( FIRST ) THEN
        FIRST = .FALSE.
        CALL EZPICK('MUONLIBRARY_RCP')
        CALL EZGET('MUONLIBRARY_AUX_RECL',SRECL,IER)
        CALL EZRSET
C        SRECL = 0.9*SRECL               ! USE ONLY 90%
        SRECL = 0.45*SRECL               ! USE ONLY 45% FOR MUON HIT LIB.
        NREAD_CYC = NDATA_CYCLES/SRECL
        REC_LEFT = NDATA_CYCLES - NREAD_CYC*SRECL
      ENDIF
      IREC = 1
      IF ( CYC ) THEN
        READ(IUNIT_AUX,ERR=997,IOSTAT=IOSTAT,KEY=IREC)SREC
        IF(IOSTAT.EQ.0)THEN
C RECORD ALREADY EXISTS
          KLO = 1
          DO IREC = 1,NREAD_CYC
            READ(IUNIT_AUX,ERR=998,IOSTAT=IOSTAT,KEY=IREC)SREC
            REWRITE(UNIT=IUNIT_AUX,ERR=998,IOSTAT=IOSTAT)
     &      IREC,(RCYCLES(KLO+K-1),NO_RCYCLES(KLO+K-1),K=1,SRECL)
            KLO = KLO + SRECL
          ENDDO
          IREC = NREAD_CYC
          IF ( REC_LEFT.GT.0 ) THEN
            IREC = IREC + 1
            READ(IUNIT_AUX,ERR=998,IOSTAT=IOSTAT,KEY=IREC)SREC
            REWRITE(UNIT=IUNIT_AUX,ERR=998,IOSTAT=IOSTAT)
     &      IREC,(RCYCLES(KLO+K-1),NO_RCYCLES(KLO+K-1),K=1,REC_LEFT)
            KLO = KLO + REC_LEFT
          ENDIF
        ELSE
  997     CONTINUE
          KLO = 1
          DO IREC = 1,NREAD_CYC
            WRITE(UNIT=IUNIT_AUX,ERR=998,IOSTAT=IOSTAT)
     &      IREC,(RCYCLES(KLO+K-1),NO_RCYCLES(KLO+K-1),K=1,SRECL)
            KLO = KLO + SRECL
          ENDDO
          IREC = NREAD_CYC
          IF ( REC_LEFT.GT.0 ) THEN
            IREC = IREC + 1
            WRITE(UNIT=IUNIT_AUX,ERR=998,IOSTAT=IOSTAT)
     &      IREC,(RCYCLES(KLO+K-1),NO_RCYCLES(KLO+K-1),K=1,REC_LEFT)
            KLO = KLO + REC_LEFT
          ENDIF
        ENDIF
      ELSE
        IREC = NREAD_CYC
        IF(REC_LEFT.GT.0)IREC = IREC + 1
      ENDIF
C
      IREC = IREC + 1
      READ(IUNIT_AUX,ERR=996,IOSTAT=IOSTAT,KEY=IREC)SREC
      IF(IOSTAT.EQ.0)THEN
C Duplicate record
        REWRITE(IUNIT_AUX,ERR=997,IOSTAT=IOSTAT)IREC,NTOT_REC,
     &  NTOT_CYCLES,NDC
      ELSE
  996   CONTINUE
        WRITE(IUNIT_AUX,ERR=997,IOSTAT=IOSTAT)IREC,NTOT_REC,
     &  NTOT_CYCLES,NDC
 9961   CONTINUE
      ENDIF
C
      IREC = IREC+NREC
      READ(IUNIT_AUX,ERR=995,IOSTAT=IOSTAT,KEY=IREC)SREC
      IF(IOSTAT.EQ.0)THEN
C Duplicate record
        REWRITE(IUNIT_AUX,ERR=996,IOSTAT=IOSTAT)IREC,
     &  NRCYCLES,FILNAM
      ELSE
  995   CONTINUE
        WRITE(IUNIT_AUX,ERR=996,IOSTAT=IOSTAT)IREC,
     &  NRCYCLES,FILNAM
      ENDIF
C
      RETURN
  998 CONTINUE
      CALL ERRMSG('MUONLIBRARY','MULIB_AUX_WRITE',
     &  'ERROR WRITING AUXILLARY FILE','W')

  999 RETURN
      END
