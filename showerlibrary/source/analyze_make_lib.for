      SUBROUTINE ANALYZE_MAKE_LIB
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : ANALYSE AS WE MAKE THE SHOWER LIBRARY
C-
C-   Inputs  :
C-   Outputs :
C-   Controls:
C-
C-   Created  29-JAN-1990   Rajendran Raja
C-                          BASED ON CODE IN SHLEVT OF OLD
C-   Updated  22-APR-1992   W.G.D.Dharmaratna, MODIFIED FOR V 2.0. 
C-   Updated   3-DEC-1992   W. Dharmaratna  INCLUDE DROPPED ENERGY 
C
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$INC:SHLCON.INC'
      INCLUDE 'D0$INC:SHLDAT.INC'
      INTEGER I,II,IJ
      LOGICAL FIRST
      CHARACTER*40 A
      INTEGER ISA_PARTID
      REAL    ISA_ENERGY,TOT_ENERGY,DROP_ENERGY
      REAL    TOT_CAL_ENERGY,TOT_DEAD_ENERGY,TOT_ICD_ENERGY,
     &  TOT_MG1_ENERGY,TOT_MG2_ENERGY,ENER_MISS(4)
      INTEGER NUM_GCAH,NUM_HITS,PT_GCAH,NUMHITS
      INTEGER GEAN_ID
      REAL    CAL_TO_TRUE,CAL_DEAD_TO_TRUE,DROP_TO_TRUE
C
      DATA FIRST/.TRUE./
C----------------------------------------------------------------------
      IF ( FIRST ) THEN
        FIRST = .FALSE.
C
C BOOK HISTOGRAMS HERE
C
        CALL EZPICK('SHOWERLIBRARY_RCP')
        CALL DO_HBOOK('ANALYZE_HISTOGRAMS')
        CALL EZRSET
C
      ENDIF
C
      CALL SHLB_STAT(SHLB,ISA_PARTID,ISA_ENERGY,TOT_ENERGY,
     &  TOT_CAL_ENERGY,TOT_DEAD_ENERGY,TOT_ICD_ENERGY,TOT_MG1_ENERGY,
     &  TOT_MG2_ENERGY,ENER_MISS,NUM_GCAH,NUM_HITS,DROP_ENERGY)

C
      DO I = 1 ,NKEY 
        CALL HFILL(I,FLOAT(KEY(I)),0.,1.)       ! KEYS
      ENDDO
C
      CALL ISAGEA(ISA_PARTID,GEAN_ID)
      CALL HFILL(11,FLOAT(GEAN_ID),0.,1.)
      CALL HFILL(12,TOT_ENERGY,0.,1.)
C
      CALL ETAPHI(SHLB(6),SHLB(7),SHLB(8),ETA,PHI)
C
      CALL HFILL(13,PHI,0.,1.)
      CALL HFILL(14,ABS(ETA),0.,1.)
C
      CAL_TO_TRUE = (TOT_CAL_ENERGY)/ISA_ENERGY
      DROP_TO_TRUE = (DROP_ENERGY)/ISA_ENERGY
      CAL_DEAD_TO_TRUE = (TOT_CAL_ENERGY+TOT_DEAD_ENERGY)
     &  /ISA_ENERGY
C
      IF(KEY(4).EQ.1)THEN
        CALL HFILL(21,ISA_ENERGY,CAL_TO_TRUE,1.)
        CALL HFILL(22,ISA_ENERGY,CAL_DEAD_TO_TRUE,1.)
        CALL HFILL(23,ISA_ENERGY,TOT_DEAD_ENERGY,1.)
        CALL HFILL(24,TOT_CAL_ENERGY,TOT_DEAD_ENERGY,1.)
        CALL HFILL(25,ISA_ENERGY,DROP_TO_TRUE,1.)
      ELSE
        CALL HFILL(31,ISA_ENERGY,CAL_TO_TRUE,1.)
        CALL HFILL(32,ISA_ENERGY,CAL_DEAD_TO_TRUE,1.)
        CALL HFILL(33,ISA_ENERGY,TOT_DEAD_ENERGY,1.)
        CALL HFILL(34,TOT_CAL_ENERGY,TOT_DEAD_ENERGY,1.)
        CALL HFILL(35,ISA_ENERGY,DROP_TO_TRUE,1.)

      ENDIF
C
      CALL HFILL(41,FLOAT(NUM_HITS),0.,1.)
      CALL HFILL(42,FLOAT(NUM_GCAH),0.,1.)
      CALL HFILL(43,TOT_MG1_ENERGY,0.,1.)
      CALL HFILL(44,TOT_ICD_ENERGY,0.,1.)
      CALL HFILL(45,TOT_MG2_ENERGY,0.,1.)
      CALL HFILL(46,TOT_DEAD_ENERGY,0.,1.)
      CALL HFILL(47,TOT_CAL_ENERGY,0.,1.)
C
      IF ( KEY(5).EQ.1.AND.KEY(4).EQ.1 ) THEN
        CALL HFILL(51,TOT_DEAD_ENERGY,0.,1.)
        CALL HFILL(52,TOT_CAL_ENERGY,0.,1.)
      ELSEIF(KEY(5).EQ.2.AND.KEY(4).EQ.1)THEN
        CALL HFILL(61,TOT_DEAD_ENERGY,0.,1.)
        CALL HFILL(62,TOT_CAL_ENERGY,0.,1.)
      ELSEIF (KEY(5).EQ.1.AND.KEY(4).EQ.3 ) THEN
        CALL HFILL(71,TOT_DEAD_ENERGY,0.,1.)
        CALL HFILL(72,TOT_CAL_ENERGY,0.,1.)
      ELSEIF(KEY(5).EQ.2.AND.KEY(4).EQ.3)THEN
        CALL HFILL(81,TOT_DEAD_ENERGY,0.,1.)
        CALL HFILL(82,TOT_CAL_ENERGY,0.,1.)
      ENDIF
      CALL HFILL(301,VERTEX(3),FLOAT(KEY(1)),1.0)
      CALL HFILL(302,ABS(ETA),FLOAT(KEY(2)),1.0)
      CALL HFILL(303,ISA_ENERGY,FLOAT(KEY(3)),1.0)
C
  999 RETURN
      END
