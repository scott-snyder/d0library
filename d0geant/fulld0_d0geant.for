      SUBROUTINE PBDINI                                                         
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-    This routine must be called by the FrameWork to initialize                
C-    the run time switches associated with the packages                        
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL WRNGOK                                                            
      INTEGER LOGUNT,MAXLOG,MAXWRN                                              
      CHARACTER*32 STRGLG                                                       
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
C-                                                                              
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LOGUNT = 0                                                                
      WRNGOK = .TRUE.                                                           
      CALL ERRINI(LOGUNT,WRNGOK)                                                
      MAXLOG = 1                                                                
      MAXWRN = 1                                                                
      STRGLG = ' '                                                              
      CALL ERRMAX(STRGLG,MAXLOG,MAXWRN)                                         
C-                                                                              
      PBD_FLAG_MAX =  9                                                         
C-                                                                              
      PBD_FLAG_VALUE( 1) = .TRUE.                                               
      PBD_FLAG_NAME( 1) = 'D0'                                                  
      PBD_FLAG_VALUE( 2) = .TRUE.                                               
      PBD_FLAG_NAME( 2) = 'GVTX'                                                
      PBD_FLAG_VALUE( 3) = .TRUE.                                               
      PBD_FLAG_NAME( 3) = 'GCDC'                                                
      PBD_FLAG_VALUE( 4) = .TRUE.                                               
      PBD_FLAG_NAME( 4) = 'GFDC'                                                
      PBD_FLAG_VALUE( 5) = .TRUE.                                               
      PBD_FLAG_NAME( 5) = 'GTRD'                                                
      PBD_FLAG_VALUE( 6) = .TRUE.                                               
      PBD_FLAG_NAME( 6) = 'GLV0'                                                
      PBD_FLAG_VALUE( 7) = .TRUE.                                               
      PBD_FLAG_NAME( 7) = 'GCAL'                                                
      PBD_FLAG_VALUE( 8) = .TRUE.                                               
      PBD_FLAG_NAME( 8) = 'GMUO'                                                
      PBD_FLAG_VALUE( 9) = .TRUE.                                               
      PBD_FLAG_NAME( 9) = 'GSAM'                                                
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-    The following routine has been generated by the Program Builder           
C-    because the size of the common blocks has been modified                   
C-    by the user.                                                              
C-                                                                              
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      SUBROUTINE INZCOM(I)                                                      
C----------------------------------------------------------------------         
C-                                                                              
C-   Purpose and Methods :                                                      
C-       Initialize ZEBCOM (event data Zebra common)                            
C-                                                                              
C-   Inputs  : I = 1 data in division 1, otherwise in division 2                
C-   Outputs : NONE                                                             
C-                                                                              
C-   Created  28-OCT-1988   Serban D. Protopopescu                              
C-                                                                              
C----------------------------------------------------------------------         
      IMPLICIT NONE                                                             
C-                                                                              
C     INCLUDE 'D0$INC:ZEBCOM.INC'                                               
C-                                                                              
C-                                                                              
C                                                                               
C  ZEBCOM is the main zebra common block for event data storage                 
C                                                                               
      INTEGER NNQ,NREF                                                          
C     PARAMETER (NNQ=200000)                                                    
C-                                                                              
C-    The following is the new parameter value                                  
C-                                                                              
      PARAMETER (NNQ=1750000 )                                                  
C-                                                                              
      PARAMETER (NREF=9)                                                        
      COMMON/ZEBCOM/IXCOM,IXMAIN,IXDVR,FENCE,LHEAD,LHEADR,LREF,                 
     &  ZSTOR,ENDZS                                                             
      INTEGER IXCOM    ! store number                                           
     &       ,IXMAIN   ! event division number                                  
     &       ,IXDVR    ! run division number                                    
      INTEGER FENCE(8),LREF(NREF),ZSTOR(NNQ),ENDZS                              
      INTEGER LHEAD     ! pointer to event HEAD bank                            
      INTEGER LHEADR    ! pointer to begin run HEAD bank                        
      REAL Q(NNQ)                                                               
      INTEGER IQ(NNQ),LQ(NNQ)                                                   
      EQUIVALENCE (LHEAD,LQ(1)),(LQ(9),IQ(1),Q(1))                              
C                                                                               
C-                                                                              
C-                                                                              
      INTEGER I                                                                 
      LOGICAL FIRST                                                             
      SAVE FIRST                                                                
      DATA FIRST/.TRUE./                                                        
C----------------------------------------------------------------------         
C                                                                               
      IF(FIRST) THEN                                                            
C                                                                               
C **** Initialize store in /ZEBCOM/ common (store 0)                            
C                                                                               
        IXCOM=0                                                                 
        CALL MZSTOR (IXCOM,'/ZEBCOM/','Q',FENCE,LHEAD,LREF(1),ZSTOR(1),         
     &   ZSTOR(40000),ENDZS)                                                    
C                                                                               
C **** Use division IXMAIN for event data                                       
C                                                                               
        IXMAIN=IXCOM+2                                                          
        IF(I.EQ.1) IXMAIN=IXCOM+1                                               
C                                                                               
C **** Create a division for run header (3rd division)                          
C                                                                               
        CALL MZDIV(IXCOM,IXDVR,'RUN DIV',100,40000,'L')                         
        FIRST=.FALSE.                                                           
      ENDIF                                                                     
  999 RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
C-    The following routine has been generated by the Program Builder           
C-    because the size of the common blocks has been modified                   
C-    by the user.                                                              
C-                                                                              
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      SUBROUTINE INZSTP                                                         
C----------------------------------------------------------------------         
C-                                                                              
C-   Purpose and Methods :                                                      
C-       Initialize ZEBSTP (Zebra common for static parameters)                 
C-                                                                              
C-   Created  28-OCT-1988   Serban D. Protopopescu                              
C-                                                                              
C----------------------------------------------------------------------         
      IMPLICIT NONE                                                             
C-                                                                              
C     INCLUDE 'D0$INC:ZEBSTP.INC'                                               
C-                                                                              
C-                                                                              
C ZEBSTP.INC                                                                    
      INTEGER NNC                                                               
C     PARAMETER (NNC=200000)                                                    
C-                                                                              
C-    The following is the new parameter value                                  
C-                                                                              
      PARAMETER (NNC=600000 )                                                   
C-                                                                              
      COMMON/ZEBSTP/IXSTP,IDVSTP,IDVSUM,FENSTP,LSTPH,LZSUM,                     
     1 LSLV0,LLPDH,LLGNH,LLTMH,LLGEH,LLV,               ! level 0 links         
     2 LSMUO,LMPDH,LMGNH,LMTMH,LMGEH,LMU,               ! muon links            
     3 LSVTX,LVPDH,LVGNH,LVTMH,LVGEH,LBMXY,LVT,         ! vertex chamber links  
     4 LSCDC,LDPDH,LDGNH,LDTMH,LDGEH,LDALH,LDC,         ! cdc links             
     5 LSTRD,LTPDH,LTGAI,LTGEN,LTGEO,LTCAN,LTLIK,LTR,   ! trd links             
     6 LSFDC,LFPDH,LFGNH,LFTMH,LFGEH,LFD,               ! fdc links             
     7 LSCAL,LCPDH,LCGNH,LCGEH,LCA,                     ! calorimeter links     
     8 ZCONS,ENDZC                                                              
      INTEGER IXSTP,IDVSTP,IDVSUM,FENSTP(10),LZSUM,ZCONS(NNC),ENDZC             
      REAL C(NNC)                                                               
      INTEGER IC(NNC),LC(NNC)                                                   
      EQUIVALENCE (LSTPH,LC(1)),(LC(9),IC(1),C(1))                              
      INTEGER LSTPH ! static parameter header                                   
     $,  LSLV0      ! level 0 constants header                                  
     $,  LLPDH      ! level 0 pedestal header                                   
     $,  LLGNH      ! level 0 gain header                                       
     $,  LLTMH      ! level 0 time constants header                             
     $,  LLGEH      ! level 0 geometry constants header                         
     $,  LLV(10)    ! available                                                 
C                                                                               
      INTEGER LSMUO ! Muon constants header                                     
     $,  LMPDH      ! Muon pedestal header                                      
     $,  LMGNH      ! Muon gain header                                          
     $,  LMTMH      ! Muon time constants header                                
     $,  LMGEH      ! Muon geometry constants header                            
     $,  LMU(10)    ! available                                                 
C                                                                               
C LBMXY added NGraf 8/16/94                                                     
      INTEGER LSVTX ! Vertex chamber constants header                           
     $,  LVPDH      ! Vertex chamber pedestal header                            
     $,  LVGNH      ! Vertex chamber gain header                                
     $,  LVTMH      ! Vertex chamber time constants header                      
     $,  LVGEH      ! Vertex chamber geometry constants header                  
     $,  LBMXY      ! Beam position bank (does NOT hang from SVTX)              
     $,  LVT(9)     ! available                                                 
C                                                                               
      INTEGER LSCDC ! CDC constants header                                      
     $,  LDPDH      ! CDC pedestal header                                       
     $,  LDGNH      ! CDC gain header                                           
     $,  LDTMH      ! CDC time constants header                                 
     $,  LDGEH      ! CDC geometry constants header                             
     $,  LDALH      ! CDC wire alignment constants header                       
     $,  LDC(9)     ! available                                                 
C                                                                               
C LTCAN and LTLIK add Azlyber 8/1/94                                            
      INTEGER LSTRD ! TRD constants header                                      
     $,  LTPDH      ! TRD pedestal header                                       
     $,  LTGAI      ! TRD gains header                                          
     $,  LTGEN      ! TRD general header                                        
     $,  LTGEO      ! TRD geometry constants header                             
     $,  LTCAN      ! TRD canary header                                         
     $,  LTLIK      ! TRD header for JFL's likelihood tables                    
     $,  LTR(8)     ! available                                                 
C                                                                               
      INTEGER LSFDC ! FDC constants header                                      
     $,  LFPDH      ! FDC pedestal header                                       
     $,  LFGNH      ! FDC gain header                                           
     $,  LFTMH      ! FDC time constants header                                 
     $,  LFGEH      ! FDC geometry constants header                             
     $,  LFD(10)    ! available                                                 
C                                                                               
      INTEGER LSCAL ! Calorimeter constants header                              
     $,  LCPDH      ! Calorimeter pedestal header                               
     $,  LCGNH      ! Calorimeter gain header                                   
     $,  LCGEH      ! Calorimeter geometry constants header                     
     $,  LCA(11)    ! available                                                 
C                                                                               
C-                                                                              
C-                                                                              
      LOGICAL FIRST                                                             
      SAVE FIRST                                                                
      DATA FIRST/.TRUE./                                                        
C----------------------------------------------------------------------         
C                                                                               
      IF(FIRST) THEN                                                            
C                                                                               
C          Note that 10 words are set aside for reference links                 
C          but are not specifically named in the common block                   
C                                                                               
        CALL MZSTOR (IXSTP,'/ZEBSTP/','C',FENSTP,LSTPH,ZCONS,ZCONS(10),         
     &   ZCONS(10000),ENDZC)                                                    
C                                                                               
C **** IDVSTP is the 2nd division in the ZEBSTP store.                          
C                                                                               
        IDVSTP=IXSTP+2                                                          
        CALL CONSTP                 ! construct STP headers                     
        FIRST=.FALSE.                                                           
      ENDIF                                                                     
  999 RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
C-    The following routine has been generated by the Program Builder           
C-    because the size of the common blocks has been modified                   
C-    by the user.                                                              
C-                                                                              
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      SUBROUTINE INZWRK                                                         
C----------------------------------------------------------------------         
C-                                                                              
C-   Purpose and Methods :                                                      
C-      Initialize /ZEBWRK/, working area not written out                       
C-                                                                              
C-   Created  28-OCT-1988   Serban D. Protopopescu                              
C-                                                                              
C----------------------------------------------------------------------         
      IMPLICIT NONE                                                             
C-                                                                              
C     INCLUDE 'D0$INC:ZEBWRK.INC'                                               
C-                                                                              
C-                                                                              
C                                                                               
C--     Zebra working space; Banks WRKH; STEP; ADCS;                            
C                                                                               
      INTEGER NNW,NWR                                                           
C     PARAMETER (NNW=30000)                                                     
C-                                                                              
C-    The following is the new parameter value                                  
C-                                                                              
      PARAMETER (NNW=20000 )                                                    
C-                                                                              
      PARAMETER (NWR=9)                                                         
      COMMON/ZEBWRK/IXWRK,IDVWRK,FENWRK,LWRKH,LRWRK,LSTEP,                      
     2 ZWORK,ENDZW                                                              
C                                                                               
      INTEGER IXWRK,IDVWRK,LSTEP,FENWRK(10),ZWORK(NNW),ENDZW                    
      REAL W(NNW)                                                               
      INTEGER IW(NNW),LW(NNW)                                                   
      INTEGER*2 KW(2*NNW)                                                       
      EQUIVALENCE (LWRKH,LW(1)),(LW(9),IW(1),W(1),KW(1))                        
      INTEGER LWRKH               ! working space header                        
     $,  LRWRK(NWR)                                                             
C                                                                               
C-                                                                              
C-                                                                              
      LOGICAL FIRST                                                             
      SAVE FIRST                                                                
      DATA FIRST/.TRUE./                                                        
C----------------------------------------------------------------------         
C                                                                               
      IF(FIRST) THEN                                                            
        CALL MZSTOR (IXWRK,'/ZEBWRK/','Q',FENWRK,LWRKH,LRWRK,ZWORK(1),          
     &   ZWORK(10000),ENDZW)                                                    
        IDVWRK=IXWRK+2                                                          
        FIRST=.FALSE.                                                           
      ENDIF                                                                     
  999 RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
C-    The following routine has been generated by the Program Builder           
C-    because the size of the common blocks has been modified                   
C-    by the user.                                                              
C-                                                                              
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      SUBROUTINE INPAWC                                                         
C----------------------------------------------------------------------         
C-                                                                              
C-   Purpose and Methods :                                                      
C-       Initialize PAWC common for HBOOK4                                      
C-                                                                              
C-   Created  27-MAR-1989   Serban D. Protopopescu                              
C-   Updated  17-APR-1991   Rajendran Raja  Updated to have Global sections     
C-   Updated   3-MAR-1992   K. Wyatt Merritt  Put global sections in machine    
C-                           block for unix compatibility                       
C-                                                                              
C----------------------------------------------------------------------         
      IMPLICIT NONE                                                             
C-                                                                              
C     INCLUDE 'D0$INC:PAWC.INC'                                                 
C-                                                                              
C-                                                                              
C----------------------------------------------------------------------         
C-                                                                              
C-   Created  16-MAY-1989   Serban D. Protopopescu                              
C-   Updated   1-JUN-1991   Rajendran Raja                                      
C-                                                                              
C----------------------------------------------------------------------         
      INTEGER NPAWC                                                             
C     PARAMETER (NPAWC=100000)                                                  
C-                                                                              
C-    The following is the new parameter value                                  
C-                                                                              
      PARAMETER (NPAWC=250000 )                                                 
C-                                                                              
      INTEGER PAGELEN                                                           
      PARAMETER( PAGELEN = 128 )        ! LENGTH OF PAGE                        
      INTEGER MAXPAGES                                                          
      PARAMETER( MAXPAGES = NPAWC/PAGELEN )                                     
      CHARACTER*32 GNAME                                                        
C                                                                               
      COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LPMAIN,                
     &  HCV(9989)                                                               
C                                                                               
      REAL HMEMOR(PAGELEN*MAXPAGES)                                             
      INTEGER NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC,LPMAIN,HCV                    
      EQUIVALENCE(NWPAW,HMEMOR(1))                                              
      INTEGER IP(2),LP(8000)                                                    
      REAL    P(2)                                                              
      EQUIVALENCE (LP(1),LPMAIN),(IP(1),LP(9)),(P(1),IP(1))                     
C-                                                                              
C-                                                                              
      INTEGER NPAGES,HCREATEG                                                   
      INTEGER TRNLNM,STATUS,LENG                                                
      INTEGER TRULEN                                                            
C----------------------------------------------------------------------         
C                                                                               
      STATUS = TRNLNM('GLOBAL$PAWC',GNAME,LENG)                                 
      IF ( GNAME(1:LENG).EQ.'GLOBAL$PAWC' ) THEN          ! NO GLOBAL SECTION   
        CALL HLIMIT(-PAGELEN*MAXPAGES)                                          
      ELSE                                                                      
C&IF VAXVMS                                                                     
        NPAGES = HCREATEG(GNAME(1:LENG),HMEMOR,PAGELEN*MAXPAGES)                
        IF ( NPAGES.GT.0 ) THEN                                                 
          CALL ERRMSG(' INPAWC ','INPAWC',                                      
     &    ' GLOBAL SECTION: '//GNAME(1:LENG)//' CREATED ','S')                  
          CALL HLIMIT(-PAGELEN*MAXPAGES)                                        
        ELSE                                                                    
          CALL ERRMSG(' INPAWC ','INPAWC ',                                     
     &    ' GLOBAL SECTION ERROR ','S')                                         
        ENDIF                                                                   
C&ELSE                                                                          
C&        CALL HLIMIT(-PAGELEN*MAXPAGES)                                        
C&        CALL ERRMSG(' INPAWC ','INPAWC ',                                     
C&     &    'Global section not created on non-VMS system','S')                 
C&ENDIF                                                                         
      ENDIF                                                                     
C                                                                               
  999 RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
C-    The following routine has been generated by the Program Builder           
C-    because the size of the common blocks has been modified                   
C-    by the user.                                                              
C-                                                                              
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      SUBROUTINE INZGCB                                                         
C----------------------------------------------------------------------         
C-                                                                              
C-   Purpose and Methods : Init GCBANK (Geant Data Store)                       
C-                                                                              
C-   Inputs  :                                                                  
C-   Outputs :                                                                  
C-   Controls:                                                                  
C-                                                                              
C-   Created  24-NOV-1989   Alan M. Jonckheere                                  
C-                                                                              
C----------------------------------------------------------------------         
      IMPLICIT NONE                                                             
C-                                                                              
C     INCLUDE 'D0$INC:GCBANK.INC'                                               
C-                                                                              
C-                                                                              
C----------------------------------------------------------------------         
C-                                                                              
C-   Created  26-APR-1991   Alan M. Jonckheere - Geant 3.14                     
C-                                                                              
C----------------------------------------------------------------------         
      INTEGER NGCBNK                                                            
C     PARAMETER( NGCBNK = 69000 )                                               
C-                                                                              
C-    The following is the new parameter value                                  
C-                                                                              
      PARAMETER( NGCBNK = 1500000 )                                             
C-                                                                              
      INTEGER KWBANK,KWWORK                                                     
      PARAMETER (KWBANK=NGCBNK,KWWORK=5200)                                     
      COMMON/GCBANK/NZEBRA,GVERSN,ZVERSN,IXSTOR,IXDIV,IXCONS,FENDQ(16)          
     +             ,LMAIN,LR1,WS(KWBANK)                                        
      EQUIVALENCE (Q(1),IQ(1),LQ(9)),(LQ(1),LMAIN),(IWS(1),WS(1))               
c                                                                               
      INTEGER IQ(2),LQ(8000),IWS(2)                                             
      INTEGER NZEBRA,IXSTOR,IXDIV,IXCONS,LMAIN,LR1                              
      REAL GVERSN,ZVERSN,FENDQ,WS,Q(1)                                          
C                                                                               
C-                                                                              
C-                                                                              
      LOGICAL FIRST                                                             
      DATA    FIRST/.TRUE./                                                     
C----------------------------------------------------------------------         
      IF ( FIRST ) THEN                                                         
        CALL GZEBRA(NGCBNK)                                                     
      ENDIF                                                                     
  999 RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION STSWCH()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-    This routine allows the Program Builder user to set                       
C-    and reset(ON/OFF) the run time switches associated                        
C-    with the packages.                                                        
C-    Created by the PROGRAM BUILDER                                            
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
C-    A dummy routine becuase no SWITCH
C-    input qualifier specified
C-                                                                              
      STSWCH = .TRUE.                                                           
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION PBD_SET_FLAG(FLAG_NAME,VALUE)                            
C-                                                                              
      IMPLICIT NONE                                                             
C-                                                                              
      CHARACTER*(*) FLAG_NAME                                                   
      CHARACTER*80 TMP_FLAG_NAME                                                
      INTEGER I                                                                 
      LOGICAL DONE,VALUE                                                        
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
C-                                                                              
      I = 1                                                                     
      DONE = .FALSE.                                                            
      CALL PBD_UPCASE(FLAG_NAME,TMP_FLAG_NAME)                                  
      DO WHILE ((I.LE.PBD_FLAG_MAX).AND.(.NOT.DONE))                            
        IF (TMP_FLAG_NAME(1:LEN(FLAG_NAME)).EQ.                                 
     &      PBD_FLAG_NAME(I)(1:LEN(FLAG_NAME))) THEN                            
          PBD_FLAG_VALUE(i) = VALUE                                             
          DONE = .TRUE.                                                         
        END IF                                                                  
        I = I + 1                                                               
      END DO                                                                    
      PBD_SET_FLAG = DONE                                                       
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION PBD_GET_FLAG(FLAG_NAME,VALUE)                            
C-                                                                              
      IMPLICIT NONE                                                             
C-                                                                              
      CHARACTER*(*) FLAG_NAME                                                   
      CHARACTER*80 TMP_FLAG_NAME                                                
      INTEGER I                                                                 
      LOGICAL DONE,VALUE                                                        
C-                                                                              
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      I = 1                                                                     
      DONE = .FALSE.                                                            
      CALL PBD_UPCASE(FLAG_NAME,TMP_FLAG_NAME)                                  
      DO WHILE ((I.LE.PBD_FLAG_MAX).AND.(.NOT.DONE))                            
        IF (TMP_FLAG_NAME(1:LEN(FLAG_NAME)).EQ.                                 
     &      PBD_FLAG_NAME(I)(1:LEN(FLAG_NAME))) THEN                            
          VALUE = PBD_FLAG_VALUE(I)                                             
          DONE = .TRUE.                                                         
        END IF                                                                  
        I = I + 1                                                               
      END DO                                                                    
      PBD_GET_FLAG = DONE                                                       
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      SUBROUTINE PBD_DUMP_FLAGS                                                 
C-                                                                              
      IMPLICIT NONE                                                             
C-                                                                              
      INTEGER I                                                                 
C-                                                                              
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
      DO I = 1, PBD_FLAG_MAX                                                    
        WRITE (6,'('' '',A,'' : '',L1)') PBD_FLAG_NAME(I)(1:32),                
     &PBD_FLAG_VALUE(I)                                                         
      END DO                                                                    
C-                                                                              
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      SUBROUTINE PBD_UPCASE(IN_STRING,OUT_STRING)                               
      IMPLICIT NONE                                                             
      CHARACTER*(*) IN_STRING,OUT_STRING                                        
      INTEGER I,OFFSET                                                          
C-                                                                              
C-                                                                              
C-                                                                              
      OFFSET = ICHAR('A') - ICHAR('a')                                          
      DO I = 1, LEN(IN_STRING)                                                  
        IF ((IN_STRING(I:I).GE.'a').AND.(IN_STRING(I:I).LE.'z')) THEN           
          OUT_STRING(I:I) = CHAR(ICHAR(IN_STRING(I:I)) + OFFSET)                
        ELSE                                                                    
          OUT_STRING(I:I) = IN_STRING(I:I)                                      
        END IF                                                                  
      END DO                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      SUBROUTINE PBD_GET_FLAG_NAME(FLAG_ID,FLAG_NAME,FLAG_VALUE)                
C-                                                                              
      IMPLICIT NONE                                                             
C-                                                                              
      INTEGER FLAG_ID                                                           
      CHARACTER*(*) FLAG_NAME                                                   
      LOGICAL FLAG_VALUE                                                        
C-                                                                              
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      IF ( FLAG_ID .LE. PBD_FLAG_MAX ) THEN                                     
        FLAG_NAME = PBD_FLAG_NAME(FLAG_ID)                                      
        FLAG_VALUE = PBD_FLAG_VALUE(FLAG_ID)                                    
      ELSE                                                                      
        FLAG_NAME = ' '                                                         
        FLAG_ID = 0                                                             
        FLAG_VALUE = .FALSE.                                                    
      END IF                                                                    
C-                                                                              
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LURSWT()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL FFID0                                                             
      EXTERNAL FFID0                                                            
      LOGICAL FFIVTX                                                            
      EXTERNAL FFIVTX                                                           
      LOGICAL FFICDC                                                            
      EXTERNAL FFICDC                                                           
      LOGICAL FFIFDC                                                            
      EXTERNAL FFIFDC                                                           
      LOGICAL FFITRD                                                            
      EXTERNAL FFITRD                                                           
      LOGICAL FFILV0                                                            
      EXTERNAL FFILV0                                                           
      LOGICAL FFICAL                                                            
      EXTERNAL FFICAL                                                           
      LOGICAL FFIMUO                                                            
      EXTERNAL FFIMUO                                                           
      LOGICAL FFISAM                                                            
      EXTERNAL FFISAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LURSWT = .TRUE.                                                           
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 1))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFID0()) THEN                                                
            LURSWT = .FALSE.                                                    
            CALLER = 'FFID0'                                                    
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFIVTX()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFIVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFICDC()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFICDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFIFDC()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFIFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFITRD()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFITRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFILV0()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFILV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFICAL()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFICAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFIMUO()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFIMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. FFISAM()) THEN                                               
            LURSWT = .FALSE.                                                    
            CALLER = 'FFISAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUESWT()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL CLNVTX                                                            
      EXTERNAL CLNVTX                                                           
      LOGICAL CLNCDC                                                            
      EXTERNAL CLNCDC                                                           
      LOGICAL CLNFDC                                                            
      EXTERNAL CLNFDC                                                           
      LOGICAL CLNTRD                                                            
      EXTERNAL CLNTRD                                                           
      LOGICAL CLNLV0                                                            
      EXTERNAL CLNLV0                                                           
      LOGICAL CLNCAL                                                            
      EXTERNAL CLNCAL                                                           
      LOGICAL CLNMUO                                                            
      EXTERNAL CLNMUO                                                           
      LOGICAL CLNSAM                                                            
      EXTERNAL CLNSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUESWT = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNVTX()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNCDC()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNFDC()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNTRD()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNLV0()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNCAL()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNMUO()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. CLNSAM()) THEN                                               
            LUESWT = .FALSE.                                                    
            CALLER = 'CLNSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUBOOK()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL BOKVTX                                                            
      EXTERNAL BOKVTX                                                           
      LOGICAL BOKCDC                                                            
      EXTERNAL BOKCDC                                                           
      LOGICAL BOKFDC                                                            
      EXTERNAL BOKFDC                                                           
      LOGICAL BOKTRD                                                            
      EXTERNAL BOKTRD                                                           
      LOGICAL BOKLV0                                                            
      EXTERNAL BOKLV0                                                           
      LOGICAL BOKCAL                                                            
      EXTERNAL BOKCAL                                                           
      LOGICAL BOKMUO                                                            
      EXTERNAL BOKMUO                                                           
      LOGICAL BOKSAM                                                            
      EXTERNAL BOKSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUBOOK = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKVTX()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKCDC()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKFDC()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKTRD()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKLV0()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKCAL()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKMUO()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. BOKSAM()) THEN                                               
            LUBOOK = .FALSE.                                                    
            CALLER = 'BOKSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LURGEO()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL INID0                                                             
      EXTERNAL INID0                                                            
      LOGICAL INIVTX                                                            
      EXTERNAL INIVTX                                                           
      LOGICAL INICDC                                                            
      EXTERNAL INICDC                                                           
      LOGICAL INIFDC                                                            
      EXTERNAL INIFDC                                                           
      LOGICAL INITRD                                                            
      EXTERNAL INITRD                                                           
      LOGICAL INILV0                                                            
      EXTERNAL INILV0                                                           
      LOGICAL INICAL                                                            
      EXTERNAL INICAL                                                           
      LOGICAL INIMUO                                                            
      EXTERNAL INIMUO                                                           
      LOGICAL INISAM                                                            
      EXTERNAL INISAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LURGEO = .TRUE.                                                           
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 1))                                                 
     &    ) THEN                                                                
         IF (.NOT. INID0()) THEN                                                
            LURGEO = .FALSE.                                                    
            CALLER = 'INID0'                                                    
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. INIVTX()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INIVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. INICDC()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INICDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. INIFDC()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INIFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. INITRD()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INITRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. INILV0()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INILV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. INICAL()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INICAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. INIMUO()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INIMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. INISAM()) THEN                                               
            LURGEO = .FALSE.                                                    
            CALLER = 'INISAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUSGEO()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL GEOD0                                                             
      EXTERNAL GEOD0                                                            
      LOGICAL GEOVTX                                                            
      EXTERNAL GEOVTX                                                           
      LOGICAL GEOCDC                                                            
      EXTERNAL GEOCDC                                                           
      LOGICAL GEOFDC                                                            
      EXTERNAL GEOFDC                                                           
      LOGICAL GEOTRD                                                            
      EXTERNAL GEOTRD                                                           
      LOGICAL GEOLV0                                                            
      EXTERNAL GEOLV0                                                           
      LOGICAL GEOCAL                                                            
      EXTERNAL GEOCAL                                                           
      LOGICAL GEOMUO                                                            
      EXTERNAL GEOMUO                                                           
      LOGICAL GEOSAM                                                            
      EXTERNAL GEOSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUSGEO = .TRUE.                                                           
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 1))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOD0()) THEN                                                
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOD0'                                                    
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOVTX()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOCDC()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOFDC()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOTRD()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOLV0()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOCAL()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOMUO()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. GEOSAM()) THEN                                               
            LUSGEO = .FALSE.                                                    
            CALLER = 'GEOSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUKINE()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL KIND0                                                             
      EXTERNAL KIND0                                                            
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUKINE = .TRUE.                                                           
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 1))                                                 
     &    ) THEN                                                                
         IF (.NOT. KIND0()) THEN                                                
            LUKINE = .FALSE.                                                    
            CALLER = 'KIND0'                                                    
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
C-    No routine was provided for the package: GVTX                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GCDC                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GFDC                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GTRD                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GLV0                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GCAL                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GMUO                             
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: GSAM                             
C-                                                                              
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUTREV()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL TEVVTX                                                            
      EXTERNAL TEVVTX                                                           
      LOGICAL TEVCDC                                                            
      EXTERNAL TEVCDC                                                           
      LOGICAL TEVFDC                                                            
      EXTERNAL TEVFDC                                                           
      LOGICAL TEVTRD                                                            
      EXTERNAL TEVTRD                                                           
      LOGICAL TEVLV0                                                            
      EXTERNAL TEVLV0                                                           
      LOGICAL TEVCAL                                                            
      EXTERNAL TEVCAL                                                           
      LOGICAL TEVMUO                                                            
      EXTERNAL TEVMUO                                                           
      LOGICAL TEVSAM                                                            
      EXTERNAL TEVSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUTREV = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVVTX()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVCDC()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVFDC()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVTRD()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVLV0()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVCAL()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVMUO()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. TEVSAM()) THEN                                               
            LUTREV = .FALSE.                                                    
            CALLER = 'TEVSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUSTEP()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL STPVTX                                                            
      EXTERNAL STPVTX                                                           
      LOGICAL STPCDC                                                            
      EXTERNAL STPCDC                                                           
      LOGICAL STPFDC                                                            
      EXTERNAL STPFDC                                                           
      LOGICAL STPTRD                                                            
      EXTERNAL STPTRD                                                           
      LOGICAL STPLV0                                                            
      EXTERNAL STPLV0                                                           
      LOGICAL STPCAL                                                            
      EXTERNAL STPCAL                                                           
      LOGICAL STPMUO                                                            
      EXTERNAL STPMUO                                                           
      LOGICAL STPSAM                                                            
      EXTERNAL STPSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUSTEP = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPVTX()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPCDC()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPFDC()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPTRD()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPLV0()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPCAL()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPMUO()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. STPSAM()) THEN                                               
            LUSTEP = .FALSE.                                                    
            CALLER = 'STPSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUTRAK()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL TRKVTX                                                            
      EXTERNAL TRKVTX                                                           
      LOGICAL TRKCDC                                                            
      EXTERNAL TRKCDC                                                           
      LOGICAL TRKFDC                                                            
      EXTERNAL TRKFDC                                                           
      LOGICAL TRKTRD                                                            
      EXTERNAL TRKTRD                                                           
      LOGICAL TRKLV0                                                            
      EXTERNAL TRKLV0                                                           
      LOGICAL TRKCAL                                                            
      EXTERNAL TRKCAL                                                           
      LOGICAL TRKMUO                                                            
      EXTERNAL TRKMUO                                                           
      LOGICAL TRKSAM                                                            
      EXTERNAL TRKSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUTRAK = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKVTX()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKCDC()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKFDC()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKTRD()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKLV0()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKCAL()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKMUO()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. TRKSAM()) THEN                                               
            LUTRAK = .FALSE.                                                    
            CALLER = 'TRKSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUDIGI()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL DIGVTX                                                            
      EXTERNAL DIGVTX                                                           
      LOGICAL DIGCDC                                                            
      EXTERNAL DIGCDC                                                           
      LOGICAL DIGFDC                                                            
      EXTERNAL DIGFDC                                                           
      LOGICAL DIGTRD                                                            
      EXTERNAL DIGTRD                                                           
      LOGICAL DIGLV0                                                            
      EXTERNAL DIGLV0                                                           
      LOGICAL DIGCAL                                                            
      EXTERNAL DIGCAL                                                           
      LOGICAL DIGMUO                                                            
      EXTERNAL DIGMUO                                                           
      LOGICAL DIGSAM                                                            
      EXTERNAL DIGSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUDIGI = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGVTX()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGCDC()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGFDC()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGTRD()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGLV0()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGCAL()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGMUO()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. DIGSAM()) THEN                                               
            LUDIGI = .FALSE.                                                    
            CALLER = 'DIGSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LUOUT()                                                  
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL ANLVTX                                                            
      EXTERNAL ANLVTX                                                           
      LOGICAL ANLCDC                                                            
      EXTERNAL ANLCDC                                                           
      LOGICAL ANLFDC                                                            
      EXTERNAL ANLFDC                                                           
      LOGICAL ANLTRD                                                            
      EXTERNAL ANLTRD                                                           
      LOGICAL ANLLV0                                                            
      EXTERNAL ANLLV0                                                           
      LOGICAL ANLCAL                                                            
      EXTERNAL ANLCAL                                                           
      LOGICAL ANLMUO                                                            
      EXTERNAL ANLMUO                                                           
      LOGICAL ANLSAM                                                            
      EXTERNAL ANLSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LUOUT = .TRUE.                                                            
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLVTX()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLCDC()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLFDC()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLTRD()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLLV0()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLCAL()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLMUO()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. ANLSAM()) THEN                                               
            LUOUT = .FALSE.                                                     
            CALLER = 'ANLSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
      LOGICAL FUNCTION LULAST()                                                 
C-                                                                              
C-                                                                              
C-    Purposes and Methods:                                                     
C-    --------------------                                                      
C-                                                                              
C-    Created by the PROGRAM BUILDER Release                                    
C-    11-JUL-97 10:00:44                                                        
C-                                                                              
C-                                                                              
      CHARACTER*32 MESSID,CALLER                                                
      CHARACTER*80 MESSAG                                                       
      LOGICAL LSTVTX                                                            
      EXTERNAL LSTVTX                                                           
      LOGICAL LSTCDC                                                            
      EXTERNAL LSTCDC                                                           
      LOGICAL LSTFDC                                                            
      EXTERNAL LSTFDC                                                           
      LOGICAL LSTTRD                                                            
      EXTERNAL LSTTRD                                                           
      LOGICAL LSTLV0                                                            
      EXTERNAL LSTLV0                                                           
      LOGICAL LSTCAL                                                            
      EXTERNAL LSTCAL                                                           
      LOGICAL LSTMUO                                                            
      EXTERNAL LSTMUO                                                           
      LOGICAL LSTSAM                                                            
      EXTERNAL LSTSAM                                                           
      LOGICAL PBD_FLAG_VALUE( 9)                                                
      CHARACTER*32 PBD_FLAG_NAME( 9)                                            
      INTEGER PBD_FLAG_MAX                                                      
      COMMON /PBD_COMMON/ PBD_FLAG_VALUE,PBD_FLAG_NAME,PBD_FLAG_MAX             
C-                                                                              
      LULAST = .TRUE.                                                           
C-                                                                              
C-                                                                              
C-    No routine was provided for the package: D0                               
C-                                                                              
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 2))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTVTX()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTVTX'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 3))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTCDC()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTCDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 4))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTFDC()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTFDC'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 5))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTTRD()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTTRD'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 6))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTLV0()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTLV0'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 7))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTCAL()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTCAL'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 8))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTMUO()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTMUO'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
C-                                                                              
      IF ( (PBD_FLAG_VALUE( 9))                                                 
     &    ) THEN                                                                
         IF (.NOT. LSTSAM()) THEN                                               
            LULAST = .FALSE.                                                    
            CALLER = 'LSTSAM'                                                   
            MESSAG = 'This error is ignored'                                    
            CALL ERRMSG(MESSID,CALLER,MESSAG,'I')                               
         END IF                                                                 
      END IF                                                                    
      RETURN                                                                    
      END                                                                       
C-                                                                              
C-                                                                              
C-                                                                              
