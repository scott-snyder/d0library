      FUNCTION TB90L2_STATUS_PAGE ()
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : prints out status page at EXM_END_ANALYSIS hook
C-
C-   Returned value  : true if OK
C-   Inputs  : none
C-   Outputs : none
C-   Controls: none
C-
C-   Created   2-AUG-1990   Chip Stewart 
C-   Updated  19-JUL-1991   Kathy Hodel Updated RCP files for load2  
C-                                      put ini stage into begin hook
C-   Updated  22-MAR-2004   sss - compile with g77
C----------------------------------------------------------------------
      IMPLICIT NONE
      LOGICAL TB90L2_STATUS_PAGE
      LOGICAL TB90L2_STATUS_PAGE_EVENT
      LOGICAL TB90L2_STATUS_PAGE_READ_EVENT
      LOGICAL TB90L2_STATUS_PAGE_BEGIN
      LOGICAL TB90L2_STATUS_PAGE_INI
      LOGICAL DATA_AVAILABLE
      LOGICAL EZERR,DAQ_FLAG,FILE_FLAG, FLGVAL, OK
      LOGICAL FIRST, DO_COUNT,DO_CUTS,DO_RESULTS,DO_UNPACKING
      LOGICAL DO_EPIC,DO_HVMON,DO_F_CURRENT,DO_DBM_SPAGE
      LOGICAL DO_LAR_TEMP,DO_LAR_PUR,DO_ERR
      INCLUDE 'D0$ERRMSG_UTIL$PARAMS:ERRMSG.PARAMS'
      INCLUDE 'D0$PARAMS:CAL_ADC_NO.PARAMS'
      INCLUDE 'D0$INC:ERRCTL.INC'
      INCLUDE 'D0$INC:ERRCNT.INC'
      INCLUDE 'D0$INC:ERRIDS.INC'
      INCLUDE 'D0$INC:ZEBCOM.INC'
      INCLUDE 'D0$INC:CUNFLG.INC'
      CHARACTER DAYTIME*30,FILENAME*50
      CHARACTER DET_CODE*80,OPERS*80,OWNER*80,KEYWORD*80,COMMENT*80
      INTEGER I,J,K,L,N,NUNIT,IER, RUN,EVENT,SIZE,LCAD1
C#####ADD COUNTER FOR TOTAL BEAM EVENTS AND NON-ZERO SUPRESSED EVENTS
      INTEGER RAW_BEAM, RAW_BEAM_PEDS, RAW_NZSUP_BEAM,GZCAD1
      INTEGER CAL_BEAM, CAL_BEAM_PEDS, NZSUP_BEAM
      INTEGER INFO_ID,LOG_BOOK,LOG_PAGE

C
C#####COUNTERS FOR ERROR STRINGS
      INTEGER NTIMES
      CHARACTER STRINGER*35
C
      CHARACTER CBADDR*4, CCUSED*10,CPEDGAIN*12
C      INTEGER*2 IKADDR,ISEQ
      INTEGER CONINT,CONHEX,ICUSED
C     INTEGER*2 ISCL,IDEP,ITOW,IBLS,IADC
      INTEGER NUMG,ETAV(20),PHIV(20),LAYERV(20)
C#####OPERATOR EXPECTED ETA AND PHI
      REAL ETA_OP,PHI_OP
C
C
C CALOR_HIST
      REAL    GAIN_10PF(4),SFRAC_CORR(45)
      REAL    UPSTR_CUT,LOW_CRAZY,HIGH_CRAZY
      REAL    ETA_BEAM,PHI_BEAM
C####NEW ARRAYS FOR CALOR_HIST
      REAL    EM_RANGE(4),FH_RANGE(4),CH_RANGE(4)
      REAL    MH_RANGE(4),OH_RANGE(4),ICD_RANGE(4)
C ACCOUNTING
      INTEGER PWC_COUNT,IOS
      REAL    MOM_AVE,CERENA,CEREN2,CEREN9
C CAHITS
      INTEGER HIGH_PEDESTAL1,LOW_PEDESTAL1
      INTEGER HIGH_PEDESTAL8,STATUS_MASK,LOW_PEDESTAL8
      INTEGER NCHAR,GAIN_RUN,PED_RUN
      REAL ECUTOF,SCUTOF
      REAL GAIN_NORM,LOW_GAIN,HIGH_GAIN
      REAL ADC_PER_GEV,EM_GAIN
      LOGICAL CONGEV,ZSUP,ADDR_CHECK,ADCGEV
      LOGICAL DO_PEDSUB,DO_GNSCOR,CPZ,DUMP,DO_CONNECTED
      CHARACTER*50 PED_FILE,GAIN_FILE
C EPICS
      REAL BEAMOM,NW4W, NW8Q1, NW8Q2,NW9E,NW9V, NW9EVCC, NWAEVCC
      REAL NW4CON,NW6CON, NW7CON,NWASC2,NWAEVCC2
C HVMON
      INTEGER VOLTAGE(32),CURRENT(32)
C FANOUT CURRENTS
      REAL FAN_CURR(144)
C DBMON
      REAL S_READ
      CHARACTER*34 SPAGE_READ(34)
      
C PWC
      INTEGER  NTY,NTXD,NTXU,NHY,NHXD,CHY,CHXD
      INTEGER  NTR, NWTRK,NP
      REAL     YT(5),DXT(5),UXT(4),MOM(4)
C TAG
      INTEGER   TAGWORD,HALL
      INTEGER   TDC(50),ADC(50),LDTDC(50)
      INTEGER   NADC,NTDC,NSCALER,NLDTDC
      INTEGER   SCALER(50)
C#####VARIABLES FOR TB_LAR_TEMP
      INTEGER   MONTH_TEMP,DAY_TEMP,HOUR_TEMP
      REAL      CH_2MID,FH_2MID,FH_1MID
      REAL      SHELL_2CLK,SHELL_3CLK,GRID_FWRD
C#####VARIABLES FOR TB_LAR_PUR
      REAL      ALPHA1_H1000,ALPHA1_H3000
      REAL      BETA1_H0200,BETA1_H2500

C----------------------------------------------------------------------
C                        Status Page Format
C
C       Date time
C       Run Number
C       BINF:
C         operators,log book,log page,keyword, operator
C         expected eta and phi
C       Number of events:Beam, Pedestal, and Non-zero supressed
C
C       Analysis Cuts:
C         upstream energy cut,sampling fraction correction,
C         low and high energy limits
C          eta and phi ranges for EM,FH,CH,MH,OH and ICD
C       Analysis Results:
C           Events analyzed for beam,pedestal,and non-zero suppressed     
C           PWC efficiency
C           Cerenkov Tag efficiency
C           Average Beam momemtum
C
C       Unpacking Status:
C           Zero Suppression
C             energy cutoff
C             sigma cutoff      
C           GAIN correction 
C             gain normalization,low and high gain cut
C           Pedestal Subtraction 
C             pedestal file, low and high pedestal cuts *1,*8
C           ADC to Gev conversion, EM_GAIN, sampling fraction
C              correction
C
C       Error Summary:
C         from event hooks in calor_unpack and PWC 
C           
C
C       Hardware  Status: RCP files
C            EPIC
C            HVMON
C            FANOUT CURRENTS
C            TEMPERATURES FOR PREAMP,BLS,ADC
C            ARGON TEMPERATURES
C            ARGON PURITY
C
C ****  GET RCP FILES DEPENDING ON FILE OR DAQ
C
      TB90L2_STATUS_PAGE = .FALSE.

      DAYTIME= ' '
C&IF LINUX
C&      call fdate(daytime)
C&ELSE
      CALL DATE (DAYTIME(1:15))
      CALL TIME (DAYTIME(17:26))
C&ENDIF
      CALL STRINT('RUN',RUN,FILENAME,I)
      FILENAME='USR$OUT:'//FILENAME(1:I)//'_STATUS.SUM'
      CALL GTUNIT(77,NUNIT,IER)
      CALL D0OPEN(NUNIT,FILENAME,'OF',OK)
      CALL INTMSG(' STATUS PAGE WRITING TO '//FILENAME)
C
      WRITE (NUNIT,200) RUN,DAYTIME
  200 FORMAT(1X,'  EXAMINE RUN ',I8,20X,A30)
C
      CALL EZPICK('BINF')
      IF(EZERR(IER)) THEN
        WRITE (NUNIT,2240)
 2240   FORMAT(5X,'NO BINF RCP BANK')
        COMMENT = '                NO COMMENT'
      ELSE
        CALL EZGET('INFO_ID',         INFO_ID,   IER)
        CALL EZGETS('DETECTOR_CODE',N,DET_CODE,L,IER)
        CALL EZGETS('OPERATORS',    N,OPERS,   L,IER)
        CALL EZGETS('RUN_OWNER',    N,OWNER,   L,IER) 
        CALL EZGET('LOG_BOOK_NUMBER',        LOG_BOOK,  IER)
        CALL EZGET('PAGE_NUMBER',     LOG_PAGE,  IER)
        CALL EZGETS('RUN_TYPE',  N,KEYWORD, L,IER)
        CALL EZGETS('BEGIN_COMMENT',N,COMMENT, L,IER)
        CALL EZGET('ETA',ETA_OP,IER)
        CALL EZGET('PHI',PHI_OP,IER)
      ENDIF
      CALL EZRSET
C#####WRITING OUT SELECT BINF STUFF
      WRITE (NUNIT,210) OPERS
      WRITE (NUNIT,212) LOG_BOOK, LOG_PAGE
      WRITE (NUNIT,210) KEYWORD
      WRITE (NUNIT,210) COMMENT
      WRITE (NUNIT,214) PHI_OP,ETA_OP
  214 FORMAT(1X,' OPERATOR EXPECTED PHI ',F7.2,5X,' ETA ',F7.2) 
  210 FORMAT(1X,A79)
  212 FORMAT(1X,' LOG_BOOK ',I7,5X,' LOG_PAGE ',I7)
C
      IF(DO_COUNT) THEN
C#####WRITE OUT RAW BEAM COUNTS FOR BEAM, PEDS, AND NZSUP
        WRITE (NUNIT,220) RAW_BEAM, RAW_BEAM_PEDS, RAW_NZSUP_BEAM
  220   FORMAT(1X,'EVENTS  BEAM ',I7,5X,' PEDS ',I7,5X,
     &    ' NZSUP ',I7)
      END IF
C
      IF(DO_CUTS) THEN
        WRITE (NUNIT,230)
  230   FORMAT(/1X,'ANALYSIS CUTS:')
C
        CALL EZPICK('TB90L2_CALOR_HIST_RCP')
        IF(EZERR(IER)) THEN
          WRITE (NUNIT,240)
  240     FORMAT(5X,'NO TB90L2_CALOR_HIST_RCP BANK')
        ELSE
C######CORRECTIONS TO CALOR HIST RCP READ OUT
          CALL EZGET('UPSTREAM_ENERGY_CUT',UPSTR_CUT,IER)
          CALL EZGET('SAMPLING_FRACTION_CORR',SFRAC_CORR,IER)
          CALL EZGET('LOW_ENERGY_CRAZY_LIMIT',LOW_CRAZY,IER)
          CALL EZGET('HIGH_ENERGY_CRAZY_LIMIT',HIGH_CRAZY,IER)
          CALL EZGET('TB90L2EM_RANGE',EM_RANGE,IER)
          CALL EZGET('TB90L2FH_RANGE',FH_RANGE,IER)
          IF(FH_RANGE(1).EQ. 0.0)THEN
            DO 1600 I=1,4
               FH_RANGE(I)=EM_RANGE(I)
               CH_RANGE(I)=EM_RANGE(I)
               MH_RANGE(I)=EM_RANGE(I)
               OH_RANGE(I)=EM_RANGE(I)
               ICD_RANGE(I)=EM_RANGE(I)
 1600       CONTINUE
          ELSE
            CALL EZGET('TB90L2CH_RANGE',CH_RANGE,IER)
            CALL EZGET('TB90L2MH_RANGE',MH_RANGE,IER)
            CALL EZGET('TB90L2OH_RANGE',OH_RANGE,IER)
            CALL EZGET('TB90L2ICD_RANGE',ICD_RANGE,IER)
          ENDIF
C??          CALL EZGET('ETA_OF_BEAM',ETA_BEAM,IER)
C??          CALL EZGET('PHI_OF_BEAM',PHI_BEAM,IER)
C??          CALL EZGET('CAPACITANCE_GAIN_CORR',GAIN_10PF,IER)

C??          WRITE (NUNIT,250) ETA_BEAM,PHI_BEAM
  250     FORMAT(5X,' ETA ',F10.3,' PHI ',F10.3)


          WRITE (NUNIT,290) LOW_CRAZY,HIGH_CRAZY
  290     FORMAT(5X,' CELL ENERGY CUT LOW ',F15.3,3X,' HIGH ',F15.3)

          WRITE (NUNIT,260) SFRAC_CORR(1),SFRAC_CORR(2),SFRAC_CORR(3)
     &          ,SFRAC_CORR(4),SFRAC_CORR(6),SFRAC_CORR(7),SFRAC_CORR(8)
     &          ,SFRAC_CORR(11)
  260     FORMAT(5X,' SAMPLING FRACTIONS: ',/7X,'EM',2X,4(F4.2,2X),'FH',
     &      2X,3(F4.2,2X),'CH',2X,F4.2)
          WRITE (NUNIT,292)SFRAC_CORR(16),SFRAC_CORR(17),SFRAC_CORR(18),
     &      SFRAC_CORR(19),SFRAC_CORR(20),SFRAC_CORR(21),SFRAC_CORR(22),
     &      SFRAC_CORR(23)
  292     FORMAT(7X,'MH',2X,5(F4.2,2X),'OH',2X,3(F4.2,2X))
          WRITE(NUNIT,294)SFRAC_CORR(26),SFRAC_CORR(31),SFRAC_CORR(36),
     &      SFRAC_CORR(41)
  294     FORMAT(7X,'ICD',2X,F4.2,2X,'CCMG',2X,F4.2,2X,'ECMG',2X,F4.2,
     &       2X,'ICDMG',2X,F4.2)

          WRITE(NUNIT,252)UPSTR_CUT
  252     FORMAT(5X,' UPSTREAM ENERGY CUT ',3X,F7.2)
 
C##### WRITING OUT THE ETA AND PHI RANGES
          WRITE(NUNIT,261)
  261     FORMAT(5X,' RANGES ',4X,'NARROW_ETA',2X,'NARROW_PHI',2X,
     &      'BROAD_ETA',2X,'BROAD_PHI')
          WRITE(NUNIT,262)EM_RANGE(1),EM_RANGE(2),EM_RANGE(3),
     &      EM_RANGE(4)
  262     FORMAT(5X,' EM_RANGE ',2X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          
          WRITE(NUNIT,264)FH_RANGE(1),FH_RANGE(2),FH_RANGE(3),
     &      FH_RANGE(4)
  264     FORMAT(5X,' FH_RANGE ',2X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          
          WRITE(NUNIT,266)CH_RANGE(1),CH_RANGE(2),CH_RANGE(3),
     &      CH_RANGE(4)
  266     FORMAT(5X,' CH_RANGE ',2X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          
          WRITE(NUNIT,268)MH_RANGE(1),MH_RANGE(2),MH_RANGE(3),
     &      MH_RANGE(4)
  268     FORMAT(5X,' MH_RANGE ',2X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          
          WRITE(NUNIT,269)OH_RANGE(1),OH_RANGE(2),OH_RANGE(3),
     &      OH_RANGE(4)
  269     FORMAT(5X,' OH_RANGE ',2X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          
          WRITE(NUNIT,267)ICD_RANGE(1),ICD_RANGE(2),ICD_RANGE(3),
     &      ICD_RANGE(4)
  267     FORMAT(5X,' ICD_RANGE ',1X,F10.2,2X,F10.2,2X,F10.2,
     &       2X,F10.2)          

        END IF
      END IF
      CALL EZRSET
      IF (DO_RESULTS) THEN
        WRITE (NUNIT,500)
  500   FORMAT(/1X,'ANALYSIS RESULTS:')
C#######WRITE BEAM, PEDS AND NZSUP
        WRITE (NUNIT,510) CAL_BEAM, CAL_BEAM_PEDS, NZSUP_BEAM
  510   FORMAT(5X,' EVENTS ANALYSED   BEAM ',I7,3X,' PEDS ',I7,3X,
     &    ' NZSUP ', I7)
        IF( CAL_BEAM.GT. 0) THEN

          WRITE (NUNIT,520) (PWC_COUNT +0.0) / CAL_BEAM
  520     FORMAT(5X,' PWC EFFICIENCY ',F12.3,' (TRACKS FOUND /EVENTS) ')
 
          IF(PWC_COUNT.GT.0)WRITE (NUNIT,540) MOM_AVE / PWC_COUNT
  540     FORMAT(5X,' PWC MOMENTUM AVERAGE (GEV)',F12.3)

          WRITE (NUNIT,550) (CERENA+0.0)/CAL_BEAM,
     &    (CEREN2+0.0)/CAL_BEAM ,(CEREN9+0.0)/CAL_BEAM
  550     FORMAT(5X,' CERENKOV EFFICIENCIES  A =',
     &    F10.3,'  2 =',F10.3,'  9 =',F10.3)

        END IF
      END IF

      IF( DO_UNPACKING ) THEN
        WRITE (NUNIT,295)
  295   FORMAT(/1X,'UNPACKING STATUS:')

C######CHANGE CALOR_UNPACK TO CAHITS
        CALL EZPICK('CAHITS_RCP')
        IF ( EZERR(IER) ) THEN
          WRITE (NUNIT,296)
  296     FORMAT(5X,' NO CAHITS_RCP BANK')
        ELSE
          CALL EZGET('ENERGY_CUTOFF',ECUTOF,IER)
          CALL EZGET('SIGMA_CUTOFF',SCUTOF,IER)
          CALL EZGET('DO_ZERO_SUPRESS',ZSUP,IER)
          CALL EZGET('DO_PEDSUB',DO_PEDSUB,IER)
          CALL EZGET('DO_GNSCOR',DO_GNSCOR,IER)
          CALL EZGET('GAIN_NORMALIZATION',GAIN_NORM,IER)
          CALL EZGET('LOW_GAIN_CUT',LOW_GAIN,IER)
          CALL EZGET('HIGH_GAIN_CUT',HIGH_GAIN,IER)
          CALL EZGET('LOW_PED_CUT*1',LOW_PEDESTAL1,IER)
          CALL EZGET('HIGH_PED_CUT*1',HIGH_PEDESTAL1,IER)
          CALL EZGET('LOW_PED_CUT*8',LOW_PEDESTAL8,IER)
          CALL EZGET('HIGH_PED_CUT*8',HIGH_PEDESTAL8,IER)
          CALL EZ_GET_CHARS('PEDESTAL_FILE',NCHAR,PED_FILE,IER)
          CALL EZ_GET_CHARS('GAINS_FILE',NCHAR,GAIN_FILE,IER)
          CALL EZGET('DO_ADC_TO_GEV',ADCGEV,IER)
          CALL EZGET('SAMPLING_FRACTIONS',SFRAC_CORR,IER)
          CALL EZGET('DO_ADDR_CHECK',ADDR_CHECK,IER)
          CALL EZGET('ADC_PER_GEV',ADC_PER_GEV,IER)
          CALL EZGET('EM_GAIN',EM_GAIN,IER) 

          WRITE (NUNIT,298)ADDR_CHECK
  298     FORMAT(5X,' DO ADDR_CHECK ',3X,L1)
          WRITE (NUNIT,300)DO_PEDSUB
  300     FORMAT(5X,' DO PEDESTAL SUBTRACTION ',L1)
          IF(DO_PEDSUB) THEN
C??
            CALL PEDRNO(PED_RUN)
            WRITE (NUNIT,310)PED_FILE(1:20),PED_RUN
  310       FORMAT(7X,' PEDESTAL FILE ',A20,' PED RUN ',I7)
            WRITE (NUNIT,320)'x1',LOW_PEDESTAL1,HIGH_PEDESTAL1
  320       FORMAT(7X,' ',A2,' PEDESTAL CUTS LOW ',I10,10X,' HIGH ',I10)
            WRITE (NUNIT,320)'x8',LOW_PEDESTAL8,HIGH_PEDESTAL8
          END IF
          WRITE (NUNIT,350)DO_GNSCOR
  350     FORMAT(5X,' DO GAIN CORRECTION ',L1)
          IF(DO_PEDSUB) THEN
            CALL GNSRNO(GAIN_RUN)
            WRITE (NUNIT,360)GAIN_FILE(1:20),GAIN_RUN
  360       FORMAT(7X,' GAIN FILE ',A20,' GAIN RUN ',I7)
            WRITE (NUNIT,370)LOW_GAIN,HIGH_GAIN
  370       FORMAT(7X,' GAIN CUTS LOW ',E10.3,10X,' HIGH ',E10.3)
            WRITE (NUNIT,380)GAIN_NORM
  380       FORMAT(7X,' GAIN NORMALIZATION ',E15.3)
          END IF

          WRITE (NUNIT,400)ZSUP
  400     FORMAT(5X,' DO ZERO SUPRESSION ',L1)
          IF(ZSUP) THEN
            WRITE (NUNIT,410)SCUTOF,ECUTOF
  410       FORMAT(7X,' SIGMA (PEDESTAL) FACTOR CUT ',F12.3,
     &      ' ENERGY (GEV) CUT ',F12.4)
          END IF

          WRITE (NUNIT,420)ADCGEV
  420     FORMAT(5X,' CONVERT FROM ADC COUNTS TO GEV ',L1)
C######
            WRITE (NUNIT,430)ADC_PER_GEV
  430       FORMAT(7X,' ADC TO GEV CONVERSION FACTOR ', F12.4)
            WRITE (NUNIT,435)EM_GAIN
  435       FORMAT(7X,' RELATIVE GAIN FOR EM LAYERS ',3X,F8.4)
C#######
            WRITE (NUNIT,440)(SFRAC_CORR(I),I=1,4)
  440       FORMAT(7X,' SAMPLING FRACTIONS: ',/7X,'CCEM',1X,F8.4,1X,
     &        'CCFH',1X,F8.4,1X,'CCGAP',1X,F8.4,1X,'ICD',1X,F8.4)
            WRITE (NUNIT,442)(SFRAC_CORR(I),I=5,8)
  442       FORMAT(7X,'ECGAP',1X,F8.4,1X,
     &        'ECFH',1X,F8.4,1X,'CCCH',1X,F8.4,1X,'ECCH',1X,F8.4)
          
 
        END IF   !IER LOOP
        CALL EZRSET
C
        IF (DO_ERR) THEN
         WRITE (NUNIT,890)
  890    FORMAT(2X,' UNPACKING ERRORS:')
C#####FORMATTING AND PRINTING OUT ERRORS AND TIMES CALLED
         WRITE(NUNIT,893)
  893    FORMAT(3X,'CALOR_UNPACK ERRORS')
         STRINGER='GTCAD_TOTAL'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD HEADER ERROR'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD_ORDER'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='BAD CAD WORD'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='BAD CAD ADDRESS'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='ERROR IN CAEPFL_PEDGNS'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='GTCAD'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD1-STATUS-BAD'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD1-CONTROL-BAD'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD NWORD WRONG'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD CHANNELS WRONG'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='BAD CAD ADDR'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD-OVERFLOW'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD DATA ALREADY GAIN CORRECTED'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         STRINGER='CAD DATA ALREADY PED SUBTRACTED'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER, NTIMES
         WRITE(NUNIT,897)
  897    FORMAT(3X,' PWC ERRORS ')
         STRINGER='CAMAC'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER,NTIMES
         STRINGER='PWC'
         CALL ERRGET(STRINGER,NTIMES)
         WRITE(NUNIT,895)STRINGER,NTIMES
  895    FORMAT(5X,A35,3X,' TIMES ',I7)
C?????   12     CONTINUE
C
        END IF !ERROR LOOP
      END IF  !UNPACKING LOOP
C
      WRITE (NUNIT,600)
  600 FORMAT(/1X,'HARDWARE STATUS:')
      IF(DO_EPIC) THEN
        CALL EZPICK('EPIC_RCP')
        IF(EZERR(IER)) THEN
          WRITE (NUNIT,610)
  610     FORMAT(5X,'NO EPIC_RCP BANK')
        ELSE
          CALL EZGET( 'BEAMOM',BEAMOM,IER)
          CALL EZGET( 'NW4W',NW4W,IER)
          CALL EZGET( 'NW8Q1',NW8Q1,IER)
          CALL EZGET( 'NW8Q2',NW8Q2,IER)
          CALL EZGET( 'NW9E',NW9E,IER)
          CALL EZGET( 'NW9V',NW9V,IER)
          CALL EZGET( 'NW9EVCC',NW9EVCC,IER)
          CALL EZGET( 'NWAEVCC',NWAEVCC,IER)
          CALL EZGET( 'NWAEVCC2',NWAEVCC2,IER)
          CALL EZGET( 'NW4CON',NW4CON,IER)
          CALL EZGET( 'NW6CON',NW6CON,IER)
          CALL EZGET( 'NW7CON',NW7CON,IER)
          CALL EZGET( 'NWASC2',NWASC2,IER)
          WRITE (NUNIT,620) BEAMOM
  620     FORMAT(3X,'BEAMLINE MOMENTUM(GEV):',F10.2)
          WRITE (NUNIT,630) NW9E,NW9V
  630     FORMAT(5X,' NW9 CURRENTS  E ',E10.2,10X,' V ',E10.2)
          WRITE (NUNIT,640) NW4CON,NW6CON,NW7CON
  640     FORMAT(5X,' CONVERTER WHEEL READBACK NW4 '
     &    ,E8.2,5X,' NW6 ',E8.2,5X,' NW7 ',E8.2)
          WRITE (NUNIT,645) NW9EVCC,NWAEVCC,NWAEVCC2
  645     FORMAT(5X,' CERENKOV PRESSURES NW9 '
     &    ,E10.2,5X,' NWA ',E10.2,5X,' NW2 ',E10.2)
        END IF
        CALL EZRSET
      END IF
      IF(DO_HVMON) THEN
        CALL EZPICK('HVMON_RCP')
        IF(EZERR(IER)) THEN
          WRITE (NUNIT,650)
  650     FORMAT(5X,'NO HVMON_RCP BANK')
        ELSE
          CALL EZGET( 'VOLTAGE',VOLTAGE,IER)
          CALL EZGET( 'CURRENT',CURRENT,IER)
          WRITE(NUNIT,651)
  651     FORMAT(3X,'HIGH VOLTAGE')
          WRITE(NUNIT,653)
  653     FORMAT(5X,'MODULE',4X,'CCEM1',3X,'CCEM2',3X,'CCEM3',3X,
     &      'CCEM4',3X,'CCFH1',3X,'CCFH2',3X,'CCCH1')
          WRITE(NUNIT,652)
  652     FORMAT(5X,'CHANNEL',6X,'2',7X,'4',7X,'6',7X,'8',
     &            7X,'11',6X,'12',6X,'16')
          WRITE(NUNIT,654)VOLTAGE(2),VOLTAGE(4),VOLTAGE(6),
     &       VOLTAGE(8),VOLTAGE(11),VOLTAGE(12),VOLTAGE(16)
  654     FORMAT(5X,'VOLTAGE',2X,7(I7,1X))
          WRITE(NUNIT,656)CURRENT(2),CURRENT(4),CURRENT(6),
     &       CURRENT(8),CURRENT(11),CURRENT(12),CURRENT(16)
  656     FORMAT(5X,'CURRENT',2X,7(I7,1X))
          WRITE(NUNIT,657)
  657     FORMAT(5X,'MODULE',4X,'CCMG1',3X,'ECMH1',3X,'ECMH2',3X,
     &      'ECOH1',3X,'ECOH2',3X,'ECMG1')
          WRITE(NUNIT,658)
  658     FORMAT(5X,'CHANNEL',6X,'17',6X,'19',6X,'24',6X,'29',
     &       6X,'31',6X,'32')
          WRITE(NUNIT,660)VOLTAGE(17),VOLTAGE(19),VOLTAGE(24),
     &       VOLTAGE(29),VOLTAGE(31),VOLTAGE(32)
  660     FORMAT(5X,'VOLTAGE',2X,6(I7,1X))
          WRITE(NUNIT,662)CURRENT(17),CURRENT(19),CURRENT(24),
     &        CURRENT(29),CURRENT(31),CURRENT(32)
  662     FORMAT(5X,'CURRENT',2X,6(I7,1X))
        END IF
        CALL EZRSET
      END IF
C#####NEW FANOUT CURRENTS
      IF(DO_F_CURRENT)THEN
        CALL EZPICK('F_CURRENT_RCP')
        IF(EZERR(IER))THEN
          WRITE(NUNIT,1030)
 1030     FORMAT(5X,'NO FANOUT CURRENT BANK')
        ELSE
          CALL EZGET('FANOUT_CURR',FAN_CURR,IER)
          WRITE(NUNIT,1035)
 1035     FORMAT(3X,'FIRST FANOUT CHANNEL FOR CORRESPONDING HV CHANNEL')
          WRITE(NUNIT,1653)
          WRITE(NUNIT,1652)
 1653     FORMAT(5X,'MODULE',4X,'CCEM1',4X,'CCEM2',4X,'CCEM3',4X,
     &      'CCEM4',4X,'CCFH1',4X,'CCFH2',4X,'CCCH1')
 1652     FORMAT(5X,'CHANNEL',5X,'2',8X,'4',8X,'6',8X,'8',
     &            8X,'11',8X,'12',8X,'16')
          WRITE(NUNIT,1040)FAN_CURR(19),FAN_CURR(55),FAN_CURR(20),
     &        FAN_CURR(56),FAN_CURR(75),FAN_CURR(111),FAN_CURR(58)
 1040     FORMAT(5X,'CURRENT',7(1X,F8.1))
          WRITE(NUNIT,1657)
 1657     FORMAT(5X,'MODULE',4X,'CCMG1',4X,'ECMH1',4X,'ECMH2',4X,
     &      'ECOH1',4X,'ECOH2',4X,'ECMG1')
          WRITE(NUNIT,1658)
 1658     FORMAT(5X,'CHANNEL',5X,'17',7X,'19',7X,'24',7X,'29',
     &       7X,'31',7X,'32')
          WRITE(NUNIT,1045)FAN_CURR(5),FAN_CURR(86),FAN_CURR(16),
     &       FAN_CURR(89),FAN_CURR(18),FAN_CURR(81)
 1045     FORMAT(5X,'CURRENT',6(1X,F8.1))
        END IF
        CALL EZRSET
      END IF         
C##### DBMON PRINTOUT
      IF(DO_DBM_SPAGE)THEN
        CALL EZPICK('DBM_DEV$SPAGE_RCP')
        IF(EZERR(IER))THEN
          WRITE(NUNIT,1060)
 1060     FORMAT(5X,'NO DBM_SPAGE_DEV_RCP BANK')
        ELSE
          DO 16 I=1,34
             CALL EZGETS('SPAGE_READ',I,SPAGE_READ(I),L,IER)
   16     CONTINUE
          CALL EZRSET
          CALL EZPICK('DBM_SPAGE_RCP')
          IF(EZERR(IER))THEN
            WRITE(NUNIT,1070)
 1070       FORMAT(5X,'NO DBM_SPAGE_RCP BANK')
          ELSE
            WRITE(NUNIT,1080)
 1080       FORMAT(3X,'TEMPERATURES AND VOLTAGES FROM ADC, BLS,
     & AND PREAMP')
            DO 15 I=1,34,2
              CALL EZGET(SPAGE_READ(I),S_READ,IER)
              IF(IER.EQ.0)THEN
                WRITE(NUNIT,1090)SPAGE_READ(I+1),S_READ
 1090           FORMAT(5X,A34,2X,F8.4)
              END IF
   15       CONTINUE
          END IF
          CALL EZRSET
        END IF
      END IF
C######ARGON TEMPERATURE PRINTOUT

      IF(DO_LAR_TEMP)THEN
        CALL EZPICK('TB_LAR_TEM_RCP')
        IF(EZERR(IER)) THEN
          WRITE(NUNIT,810)
  810     FORMAT(5X,'NO TB_LAR_TEM_RCP')
        ELSE
          CALL EZGET('TB_MONTH_TEMP',MONTH_TEMP,IER)
          CALL EZGET('TB_DAY_TEMP',DAY_TEMP,IER)
          CALL EZGET('TB_HOUR_TEMP',HOUR_TEMP,IER)
          CALL EZGET('TB_CH_2MID',CH_2MID,IER)
          CALL EZGET('TB_FH_2MID',FH_2MID,IER)
          CALL EZGET('TB_FH_1MID',FH_1MID,IER)
          CALL EZGET('TB_SHELL_2CLK',SHELL_2CLK,IER)
          CALL EZGET('TB_SHELL_3CLK',SHELL_3CLK,IER)
          CALL EZGET('TB_GRID_FWRD',GRID_FWRD,IER)
          WRITE (NUNIT,815)MONTH_TEMP,DAY_TEMP
  815     FORMAT(3X,'ARGON TEMP DATA:     MONTH',3X,I2,3X,'DAY',3X,I2)
          WRITE (NUNIT,825)HOUR_TEMP
  825     FORMAT(22X,'HOUR TAKEN',3X,I2)
          WRITE (NUNIT,830)CH_2MID,FH_2MID
  830     FORMAT(5X,'CH2 MIDDLE',3X,F6.1,3X,'FH2 MIDDLE',3X,F6.1)
          WRITE (NUNIT,840)FH_1MID,SHELL_2CLK
  840     FORMAT(5X,'FH1 MIDDLE',3X,F6.1,3X,'SHELL 2 OCLOCK',3X,F6.1)
          WRITE(NUNIT,844)SHELL_3CLK,GRID_FWRD
  844     FORMAT(5X,'SHELL 3 OCLOCK',3X,F6.1,3X,'GRID 6 OCLOCK',3X,F6.1)
        END IF
        CALL EZRSET
      END IF

C### ARGON PURITY PRINT OUT
      IF(DO_LAR_PUR)THEN
        CALL EZPICK('TB_LAR_PUR_RCP')
        IF(EZERR(IER))THEN
          WRITE(NUNIT,1000)
 1000     FORMAT(5X,'NO TB_LAR_PUR RCP BANK')
        ELSE
          CALL EZGET('TB_ALPHA1_H1000',ALPHA1_H1000,IER)
          CALL EZGET('TB_ALPHA1_H3000',ALPHA1_H3000,IER)
          CALL EZGET('TB_BETA1_H0200',BETA1_H0200,IER)
          CALL EZGET('TB_BETA1_H2500',BETA1_H2500,IER)
          WRITE(NUNIT,1005)
 1005     FORMAT(3X,'ARGON PURITY VOLTAGES')
          WRITE(NUNIT,1010)ALPHA1_H1000,ALPHA1_H3000
 1010     FORMAT(5X,'ALPHA1_H1000',3X,F8.4,3X,'ALPHA1_H3000',
     &         3X,F8.4)
          WRITE(NUNIT,1020)BETA1_H0200,BETA1_H2500
 1020     FORMAT(5X,'BETA1_H0200',3X,F8.4,3X,'BETA1_H2500',
     &         3X,F8.4)
        END IF
        CALL EZRSET
      END IF

      CALL RLUNIT(77,NUNIT,IER)
      CLOSE(UNIT=NUNIT)
      TB90L2_STATUS_PAGE = .TRUE.
  999 RETURN
C
      ENTRY TB90L2_STATUS_PAGE_READ_EVENT ()
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : TO BE CALLED FROM EXM_READ_EVENT
C-                         TO COUNT PED & BEAM EVENTS
C-
C-   Inputs  : NONE
C-   Outputs : NONE
C-   Controls: NONE
C-
C-   Created   3-AUG-1990   Chip Stewart
C-   Updated  12-NOV-1990   Chip Stewart   - DO CAL_BEAM IN EVENT HOOK
C-
C----------------------------------------------------------------------
C##### PUT IN COUNTERS FOR RAW BEAM,RAW PEDS, RAW-NZSUP EVENTS
       CALL GET_EVENT_TYPE('ANY',DATA_AVAILABLE)
       IF(DATA_AVAILABLE)THEN
         IF ( (iand(2,IQ(LHEAD+11)) ) .GT.0) RAW_BEAM= RAW_BEAM + 1
         IF ( (iand(4,IQ(LHEAD+11)) ) .GT.0) RAW_BEAM_PEDS= 
     &        RAW_BEAM_PEDS + 1
C        THE TRIGGER FOR NON-ZERO SUPPRESSED EVENTS

         IF(BTEST(IQ(LHEAD+11),0))RAW_NZSUP_BEAM=
     &      RAW_NZSUP_BEAM+1
       ENDIF
C----------------------------------------------------------------------
      TB90L2_STATUS_PAGE_READ_EVENT = .TRUE.
 1999 RETURN
C
      ENTRY TB90L2_STATUS_PAGE_EVENT ()
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : TO BE CALLED FROM EXM_POST_ANALYSIS
C-
C-   Inputs  : NONE
C-   Outputs : NONE
C-   Controls: NONE
C-
C-   Created   3-AUG-1990   Chip Stewart
C-
C----------------------------------------------------------------------
      RUN = IQ(LHEAD+6)
      EVENT = IQ(LHEAD+9)
      IF ( (iand(4,IQ(LHEAD+11)) ) .GT.0)THEN
         CAL_BEAM_PEDS= CAL_BEAM_PEDS + 1
      ELSE IF ( (iand(2,IQ(LHEAD+11)) ) .GT.0)THEN
         CAL_BEAM= CAL_BEAM + 1

      ELSE
        GOTO 2999
      END IF
C#####COUNTING NZSUP EVENTS
      IF (BTEST(IQ(LHEAD+11),0))THEN 
         NZSUP_BEAM=NZSUP_BEAM+1
      ENDIF
      CALL GTPWCT(YT,DXT,UXT,NTY,NTXD,NTXU,NHY,NHXD,CHY,CHXD,
     &                  NP,MOM,IER)
      IF(NP.GT.0) THEN
        PWC_COUNT = PWC_COUNT + 1
        MOM_AVE = MOM_AVE + MOM(1)
      END IF

      CALL GTTCMC(TAGWORD,HALL,NADC,ADC,NTDC,TDC,NSCALER,SCALER,
     &                  NLDTDC,LDTDC,IER)

      IF ( (iand(2**5, TAGWORD)  ) .GT.0) CEREN9 = CEREN9 + 1
      IF ( (iand(2**6, TAGWORD)  ) .GT.0) CERENA = CERENA + 1
      IF ( (iand(2**8, TAGWORD)  ) .GT.0) CEREN2 = CEREN2 + 1

C----------------------------------------------------------------------
      TB90L2_STATUS_PAGE_EVENT = .TRUE.
C----------------------------------------------------------------------
 2999 RETURN

      ENTRY TB90L2_STATUS_PAGE_BEGIN ()
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : TO BE CALLED FROM EXM_BEGIN_RUN
C-
C-   Inputs  : NONE
C-   Outputs : NONE
C-   Controls: NONE
C-
C-   Created   13-AUG-1990   Chip Stewart
C-
C----------------------------------------------------------------------
C *****INITIALIZATION**************************************
      DATA FIRST/ .TRUE. /
      IF (FIRST) THEN
        FIRST = .FALSE.
        CALL INRCP('TB90L2_STATUS_PAGE_RCP',IER)
        IF(EZERR(IER)) THEN
          CALL ERRMSG('NO TB90L2_STATUS_PAGE_RCP FILE',
     &      'TB90L2_STATUS_PAGE','USE DEFAULTS ','W')
          GOTO 3900
        END IF
        CALL EZPICK('TB90L2_STATUS_PAGE_RCP')
        IF(EZERR(IER)) THEN
          CALL ERRMSG('NO TB90L2_STATUS_PAGE_RCP BANK',
     &      'TB90L2_STATUS_PAGE','USE DEFAULTS ','W')
          GOTO 3900
        END IF
        CALL EZGET('SUM_COUNTS',DO_COUNT,IER)
        IF(IER.NE.0) DO_COUNT = .TRUE.
        CALL EZGET('SUM_CUTS',DO_CUTS,IER)
        IF(IER.NE.0) DO_CUTS = .TRUE.
        CALL EZGET('SUM_RESULTS',DO_RESULTS,IER)
        IF(IER.NE.0) DO_RESULTS = .TRUE.
        CALL EZGET('SUM_UNPACKING',DO_UNPACKING,IER)
        IF(IER.NE.0) DO_UNPACKING = .TRUE.
C        CALL EZGET('SUM_ONLY_CONNECTED_CHANNELS',DO_CONNECTED,IER)
C        IF(IER.NE.0) DO_CONNECTED = .TRUE.
        CALL EZGET('SUM_EPIC',DO_EPIC,IER)
        CALL EZGET('SUM_HVMON',DO_HVMON,IER)
        CALL EZGET('SUM_F_CURRENT',DO_F_CURRENT,IER)
        CALL EZGET('SUM_DBM_SPAGE',DO_DBM_SPAGE,IER)
        CALL EZGET('SUM_LAR_TEMP',DO_LAR_TEMP,IER)
        CALL EZGET('SUM_LAR_PUR',DO_LAR_PUR,IER)
        CALL EZGET('SUM_ERR',DO_ERR,IER)
        CALL EZRSET
      END IF
C******************************************************************

 3900 CAL_BEAM = 0
      PWC_COUNT = 0
      MOM_AVE = 0
      CEREN2 = 0
      CERENA = 0
      CEREN9 = 0
      CAL_BEAM = 0
      CAL_BEAM_PEDS = 0
C#### ZERO COUNTERS FOR RAW EVENTS
      NZSUP_BEAM=0
      RAW_BEAM=0
      RAW_BEAM_PEDS=0
      RAW_NZSUP_BEAM=0
      FILE_FLAG = FLGVAL('SEL_DATA_FILE')
      DAQ_FLAG = FLGVAL('DAQ_DATA')
C
C ****  DROP EXISTING RCP BANKS
C
      CALL EZDROP('HVMON_RCP')
      CALL EZDROP('EPIC_RCP')
      CALL EZDROP('TB_LAR_TEM_RCP')
      CALL EZDROP('DBM_DEV$SPAGE_RCP')
      CALL EZDROP('TB_LAR_PUR_RCP')
      CALL EZDROP('DBM_SPAGE_RCP')
      CALL EZDROP('F_CURRENT_RCP')


      IF(DAQ_FLAG) THEN

C
C ****  GET RCP FILES FROM LOGGER$BRD
C
        IF (DO_HVMON)     CALL INRCP('LOGGER$BRD:HVMON.RCP',IER)
        IF (DO_EPIC)      CALL INRCP('LOGGER$BRD:EPIC.RCP',IER)
        IF (DO_LAR_TEMP)  CALL INRCP('LOGGER$BRD:TB_LAR_TEM.RCP',IER)
        IF (DO_DBM_SPAGE) CALL INRCP('LOGGER$BRD:DBM_DEV$SPAGE.RCP',IER)
        IF (DO_LAR_PUR)   CALL INRCP('LOGGER$BRD:TB_LAR_PUR.RCP',IER)
        IF (DO_DBM_SPAGE) CALL INRCP('LOGGER$BRD:DBM_SPAGE.RCP',IER)
        IF (DO_F_CURRENT) CALL INRCP('LOGGER$BRD:F_CURRENT.RCP',IER)

      ELSE IF(FILE_FLAG) THEN

        CALL EZDROP('BINF')
        CALL EZDROP('FILTERS')
        CALL BERD_SRCP

      ELSE

        CALL ERRMSG('NOT FILE OR DAQ','TB90L2_STATUS_PAGE',
     &    ' NO STATUS PAGE PRINT ','W')
        GOTO 3999
      END IF
      
 3999 RETURN
      END
