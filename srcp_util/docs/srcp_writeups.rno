.CHAPTER Write-ups
.TEST PAGE 20 !MODULE=INRCP
.HEADER LEVEL 1 INRCP
.LITERAL
   
   SUBROUTINE INRCP (FILNAM, IERR)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   Purpose and Methods : 

    Read into memory an RCP file.
                         Each _\START .. _\STOP block in the file will
                         be directed to a different SRCP bank whose
                         name is specified in the _\START statement.
                         Note: INRCP creates stand-alone SRCP banks.
                         Use EZPICK to select an SRCP bank, and use
                         EZSHUNT to move a selected bank into some ex-
                         isting structure. If only one _\START .. _\STOP
                         block exists in the file then only one bank
                         will be created. There should be no more than
                         20 _\START .. _\STOP blocks per file.

.END NOTE
.LITERAL

   Inputs  : FILNAM [C*]      Logical name of RCP file (and bank)

   Outputs : IERR   [I]       0 - OK
 
   Created  11-NOV-1989
.END LITERAL
.TEST PAGE 20 !MODULE=EZADD
.HEADER LEVEL 1 EZADD
.LITERAL
   
   SUBROUTINE EZADD (RECORD,NREC,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Add the parameter(s) specified in the array
   of strings RECORD(*) to the current RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : RECORD(*)        [C*]    One or more strings
             NREC             [I]     Number of strings
   Outputs : IER              [I]     Error code
   Controls:
 
   Created  11-NOV-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZASIZ
.HEADER LEVEL 1 EZASIZ
.LITERAL
   
   SUBROUTINE EZASIZ (LUNIN,LUNOUT,FILNAM,NVALS,NPARS)
   
   Author(s) : Harrison B. Prosper, Chip Stewart
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Create a new RCP file with the _\SIZE parameter
                         inserted at the start of the file. The input
                         file should be already OPEN. The input file is
                         first rewound and EZSIZE is called to calculate
                         the size of the file. The file is rewound again
                         and its records are transferred to a new file
                         after the size parameter has been written out.
 
                         NOTE: The sizes written are 10 greater than
                               calculated.
 
   
.END NOTE
.LITERAL
   Inputs  : LUNIN    Unit number of input file; file MUST already be OPEN.
             LUNOUT   Unit number of output file; opened/closed internally.
             FILNAM   Name of output file (opened with STATUS='NEW')
 
   Outputs : NVALS    Calculated number of values in output file
             NPARS    Calculated number of parameters (+ comments)
                      in output file.
 
   Controls: None
 
   Created  19-JAN-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZBANK
.HEADER LEVEL 1 EZBANK
.LITERAL
   
   SUBROUTINE EZBANK
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Simple routine to help debug RCP banks
   interactively.
 
   
.END NOTE
.LITERAL
   Inputs  : None
   Outputs : None
   Controls: None
 
   Created   6-JUN-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZBOOK
.HEADER LEVEL 1 EZBOOK
.LITERAL
   
   SUBROUTINE EZBOOK (BKNAME,WRDIDS,NUMIDS,NUMVAL)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Create a stand-alone RCP-type bank . Use
                         EZSHUNT/EZMOVE to move the RCP bank about in store
                         /ZEBSTP/. Use EZPICK to select one of possibly
                         many RCP banks so that subsequent calls to
                         EZxxxx routines will refer to the selected bank.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME      Name assigned to RCP bank. Can
                         be up to 32 characters long.
             WRDIDS      Number or words per record
             NUMIDS      Number of records per RCP bank
             NUMVAL      Number of values per RCP bank
 
   Outputs : NONE        Error codes returned by logical function
                         EZERR (IER). See also EZERR_REPORT(IER,STRING)
                         0 --- OK
   Controls: None
 
   Created  23-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZCDAT
.HEADER LEVEL 1 EZCDAT
.LITERAL
   
   SUBROUTINE EZCDAT (LUNIN,LUNOUT)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Convert DATA statements into formatted lines
                         that can be read by EZRDF .
 
   
.END NOTE
.LITERAL
   Inputs  : LUNIN       Logical unit number of input file
             LUNOUT      Logical unit number of output file
   Outputs : None
   Controls: None
 
   Created  15-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZCHAIN
.HEADER LEVEL 1 EZCHAIN
.LITERAL
   
   SUBROUTINE EZCHAIN(BKNAME,NNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Chain together the specified stand-alone
   RCP banks.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME(*)        [C*]    Names of RCP banks to be chained
             NNAME            [I]     Number of banks to chain.
   Outputs :
   Controls:
 
   Created  10-MAY-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZCHEK
.HEADER LEVEL 1 EZCHEK
.LITERAL
   
   FUNCTION EZCHEK   (PARAM1)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Check if specified parameter is in the
                         currently selected RCP bank.
 
   
.END NOTE
.LITERAL
   Returned values:      TRUE if parameter present
   Inputs  : PARAM1      Name of parameter (CHARACTER string)
   Outputs : None
 
                         Error code. Use EZERR to check for errors.
                         See also EZREPORT_ERROR(IER,STRING).
 
                           0 --> OK
   Controls: None
 
   Created   7-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZCOPY
.HEADER LEVEL 1 EZCOPY
.LITERAL
   
   SUBROUTINE EZCOPY(RCP_FROM,RCP_TO,LTO,IZLINK,IER)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Copy RCP filename RCP_FROM to file name
   RCP_TO hanging at Link IC(LTO-IZLINK). If IZLINK = 0, it will create a
   Stand alone bank at LTO
 
   
.END NOTE
.LITERAL
   Inputs  : RCP_FROM= bankname to copy from
             RCP_TO = Bankname to copy to
             LTO, IZLINK If IZLINK > 0, RCP_TO will be at IC(LTO-IZLINK)
             in /ZEBSTP/
   Outputs : LTO IS OUTPUT IF IZLINK =0. It will create  a standalone
             bank
             IER = Error flag
   Controls: IZLINK
 
   Created  11-DEC-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZDBUG
.HEADER LEVEL 1 EZDBUG
.LITERAL
   
   SUBROUTINE EZDBUG (LUN)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Print out names and addresses of RCP banks.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN         Logical unit number of output stream
   Outputs : None
   Controls: None
 
   Created  23-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZDECODE
.HEADER LEVEL 1 EZDECODE
.LITERAL
   
   SUBROUTINE EZDECODE (LUN,NAME,VALS,TYPES,TOTAL,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   

 
      Read and decode next parameter in an RCP file and return
      the value(s) and value type(s). The RCP file must be opened
      externally. This routine may be called in a loop to return
      all the parameters within an RCP file without creating an
      RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN      [I]     Input unit number (opened externally)
 
   Outputs : NAME     [C*]    Name of parameter
             VALS(*)  [R*]    Parameter values. Use equivalences
                              to convert between REAL, INTEGER and
                              LOGICAL. Use routine DHTOC convert
                              from REAL to CHARACTER.
             TYPES(*) [I*]    Value types (see RCP_MANUAL).
             TOTAL    [I]     Total number of values/parameter name
             IER      [I]     non-zero for End-Of-Data.
 
   Controls: None
 
   Created  13-SEP-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZDELETE
.HEADER LEVEL 1 EZDELETE
.LITERAL
   
   SUBROUTINE EZDELETE (PARAM,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Delete the specified parameter from the
   currently selected RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM    [C*]    Name of parameter
   Outputs : IER      [I]     0 --- OK
   Controls:
 
   Created  18-DEC-1990
.END LITERAL

.TEST PAGE 20 !MODULE=EZSQUEEZE
.HEADER LEVEL 1 EZSQUEEZE
.LITERAL
   
   SUBROUTINE EZSQUEEZE(NWORDS)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Compress the currently selected RCP bank
   to the smallest possible size.
 
   
.END NOTE
.LITERAL
   Inputs  : None
   Outputs : NWORDS [I]   Number of freed up words
   Controls:
 
   Created   8-MAR-1994
.END LITERAL
   
   
.TEST PAGE 20 !MODULE=EZDIR
.HEADER LEVEL 1 EZDIR
.LITERAL
   
   SUBROUTINE EZDIR (BKNAME,NNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return a list of all the RCP banks in
   memory.
 
   
.END NOTE
.LITERAL
   Inputs  : None
   Outputs : BKNAME(*)        [C*]    Names of RCP banks
             NNAME            [I]     Number of names
   Controls: BKNAME(1)        Use this to specify a wildcard search,
                              either:
 
                              xxx*, *xxx or *xxx*.
 
   Created  10-MAY-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZDROP
.HEADER LEVEL 1 EZDROP
.LITERAL
   
   SUBROUTINE EZDROP (BKNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Drop the specified RCP bank. EZPICK and
   EZRSET is called internally. If the specified RCP bank is at
   the head of a chain of RCP banks then all banks within that
   chain will be dropped.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME   [C*]    Name of RCP bank.
                              Use EZERR(IER) to check for errors:
                              0 --- OK
                             -1 --- Bank not found
   Outputs : None
   Controls: None
 
   Created  30-APR-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZDUMP
.HEADER LEVEL 1 EZDUMP
.LITERAL
   
   SUBROUTINE EZDUMP (PRUNIT,LBANK,SWITCH)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Print the contents of given RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : PRUNIT   Print Unit
             LBANK    Bank address. If ZERO use address of currently
                      selected bank. Use EZPICK to select bank.
             SWITCH  -1 Printout of RCP bank in SORTED order
                      0 Printout of RCP bank in ORIGINAL order
                      1 Printout of RCP bank in ORIGINAL and SORTED order
                      2 Printout a list of identifiers only.
 
   Outputs : None
                      Error codes
                      0 ---- OK
                     -1 ---- RCP bank address is zero
 
   Created  27-NOV-1987
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZEND
.HEADER LEVEL 1 EZEND
.LITERAL
   
   SUBROUTINE EZEND
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   

 
      Complete construction of RCP bank. This routine MUST be called
      after filling an RCP bank with EZADD. Note:
      If an RCP bank has not been selected the routine simply returns.
 
   
.END NOTE
.LITERAL
   Inputs  : None
   Outputs : None
   Controls: None
 
   Created  29-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZERROR
.HEADER LEVEL 1 EZERROR
.LITERAL
   
   FUNCTION EZERROR (IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Set TRUE if IER not equal to ZERO. Use this
                         function after a call to an RCP routine
                         to test for errors. Use the routine
                         EZGET_ERROR_TEXT(IER,STRING) to return a
                         string describing error given error code.
 
   
.END NOTE
.LITERAL
   Inputs  : None
 
   Outputs : IER         Error code
                         0 --- OK. NO ERROR.
   Controls: None
 
   ENTRY EZGET_ERROR_TEXT (IER,STRING)
 
   Created  23-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZFETCH
.HEADER LEVEL 1 EZFETCH
.LITERAL
   
   SUBROUTINE EZFETCH (PARAM,MAXBUF,NBUF,BUFFER,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Print the RCP parameter PARAM to the array of
   character strings BUFFER(*).
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM    [C*]    Parameter name.
             MAXBUF   [I]     Maximum number of records
                              to return
 
   Outputs : NREC     [I]     Number of records returned
             BUFFER(*)[C*]    Array of character strings
             IER      [I]     0 --- OK.
 
   Controls: None
 
   Created  12-JUN-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZFILL
.HEADER LEVEL 1 EZFILL
.LITERAL
   
   SUBROUTINE EZFILL (IDENTF,REMARK,NUMBER,TYPE,TOTAL)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Write a record to previously selected RCP
                         bank. Use EZPICK to select bank. Call EZEND
                         after one or more calls to EZFILL in order to
                         complete construction of the bank. The RCP
                         bank will be automatically extended if there is
                         not enough room for the new record(s). This is
                         signaled by setting ERRSRC = 1; use EZERROR to
                         return Error code. IMPORTANT: Use equivalences
                         to mix reals, integers and logicals and
                         use DCTOH (UCTOH) to convert from characters
                         to reals or integers.
 
   
.END NOTE
.LITERAL
   Inputs  : IDENTF           [C*]    Name of identifier
                                      Up to 32 characters
             REMARK           [C*]    Short comment
             NUMBER(*)                Value(s)
             TYPE(*)          [C*]    Type of parameter
                                      I       INTEGER,
                                      R       REAL,
                                      L       LOGICAL,
                                      C       CHARACTER
 
                              NOTE:   If two strings are consecutive
                              the last TYPE of the first string
                              should be replaced with either an & or
                              $ symbol to delimit the string.
 
                              IMPORTANT:  The string length is rounded
                              up to nearest multiple of 4.
 
             TOTAL            [C*]    Number of values
 
   Outputs   None        Use EZERR to check for errors and to
                         return error code. See also
                         EZGET_ERROR_TEXT.
                         0 --- OK
   Controls: None
 
   Created  27-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZFLIS
.HEADER LEVEL 1 EZFLIS
.LITERAL
   
   PROGRAM EZFLIS
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   

   Produce a list of the parameter names in an RCP text file.
 
   
.END NOTE
.LITERAL
   Inputs  :
   Outputs :
   Controls:
 
   Created  23-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZFSIZ
.HEADER LEVEL 1 EZFSIZ
.LITERAL
   
   PROGRAM EZFSIZ
   
   Author(s) : Chip Stewart
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Scan an RCP text file and compute the number of
                         identifiers (including comments) and values
                         it contains, then update the _\SIZE parameter.
                         Scans over multiple banks and checks for some types
                         of RCP errors. Errors are flagged int eh file and in
                         the interactive messages. RCPTEST should be run on
                         the file if there is any question about the nature
                         of the error. This verion replaces a previous
                         EZFSIZ but the code is almost complete re-done.
 
   
.END NOTE
.LITERAL
   Created   7-MAY-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET
.HEADER LEVEL 1 EZGET
.LITERAL
   
   SUBROUTINE EZGET (PARAM1,IVAL,IER)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return the value(s) associated with the
                         identifier PARAM1 from a pre-selected
                         RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM1   [C*]    Name of parameter (CHARACTER string)
 
   Outputs : IVAL(*)          Value(s) pertaining to name ``PARAM1''.
 
             IER      [I]     Error code
 
                               0 --> OK
                              -1 --> Variable not found
                              -2 --> Bank not found
 
   Controls: None
   Calls:    EZGETA
 
   Created  27-NOV-1987
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET1
.HEADER LEVEL 1 EZGET1
.LITERAL
   
   SUBROUTINE EZGET1 (ID,JSTART,JEND,JSTEP,IVAL,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return the value(s) associated with the
                         parameter index ID from the
                         currently selected RCP bank. Use EZPICK to
                         select an RCP bank.  If the parameter file has
                         been read in with the routine EZRDF
                         then the RCP bank hanging from STPH (via SCPH)
                         will be automatically selected. EZGET1
                         is the same as EZGET except that the array
                         indices are given explicitly and access is by
                         the index ID. This avoids all the character
                         decoding done in EZGET. Use EZSET1 to set values.
                         See also EZGET2.
 
                         Use EZGETI to get index ID associated with a
                         parameter.
 
   
.END NOTE
.LITERAL
   Inputs  : ID       [I]     Parameter ID
             JSTART   [I]     First array index. If JSTART = 0 then the
                              length of the array is returned in IVAL.
             JEND     [I]     Last array index
             JSTEP    [I]     Step size:
 
                              DO I = JSTART, JEND, JSTEP
 
   Outputs : IVAL(*)          Value(s) pertaining to parameter ID.
             IER              Error code.
                                      Use EZGET_ERROR_TEXT(IER,STRING)
 
                               0 --> OK
 
   Controls: None
 
   ENTRY EZSET1 (ID,JSTART,JEND,JSTEP,IVAL,IER)
 
   Created   6-APR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET2
.HEADER LEVEL 1 EZGET2
.LITERAL
   
   SUBROUTINE EZGET2 (ID,JSTART,JEND,JSTEP,IVAL,TYPE,NUMV,TOTAL,IER)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return data and types associated with parameter
                         index ID from a pre-selected RCP bank. See also
                         EZGET1.
 
   
.END NOTE
.LITERAL
   Inputs  : ID       [I]     Parameter index
             JSTART   [I]     Value of first DO loop index. If zero
                              Parameter size is returned in IVAL and
                              NUMV and TYPE is set to 1.
             JEND     [I]     Value of Last DO loop index. If zero
                              then the parameter size will be assumed,
                              that is, the number of values/parameter ID.
             JSTEP    [I]     Value of step in DO loop. If zero, then
                              1 will be assumed.
 
 
   Outputs : IVAL(*)          Value(s) pertaining to ID.
             TYPE(*)  [I*]    Value type(s)
             NUMV     [I]     Number of values returned
             TOTAL    [I]     Total number of values/parameter ID
             IER      [I]     Error code
 
                         Error code. Use EZERR to check for errors.
                         See also EZGET_ERROR_TEXT(IER,STRING)
 
                           0 --> OK
 
   ENTRY EZSET2 (ID,JSTART,JEND,JSTEP,IVAL,TYPE,NUMV,TOTAL,IER)
 
   Note:      For EZSET2 the values of arguments NUMV and TOTAL
              are not used. However, their values are altered
              by EZSET2 and have the same meaning as for EZGET2.
 
   Controls: None
 
   Created   7-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETA
.HEADER LEVEL 1 EZGETA
.LITERAL
   
   SUBROUTINE EZGETA (PARAM1,JSTART,JEND,JSTEP,IVAL,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get value(s) of variable PARAM1 from a
                         pre-selected RCP bank. Use EZPICK to select
                         an RCP bank.
                         EZGETA is the same as EZGET except that the array
                         indices are given explicitly, thereby avoiding
                         the string decoding done in EZGET. Use the
                         entry point EZSETA to set values. See also
                         EZGET1.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM1   [C*]    Name of parameter
             JSTART   [I]     First array index. If JSTART = 0
                              then the length of the array is
                              returned in IVAL.
             JEND     [I]     Last array index
             JSTEP    [I]     Index step
 
                              DO I = JSTART, JEND, JSTEP
 
   Outputs : IVAL(*)     Value(s) pertaining to name PARAM1.
             IER         Error code
 
                           0 --> OK
                          -1 --> Variable not found
                          -2 --> Bank not found
 
   Controls: None
 
   ENTRY EZSETA (PARAM1,JSTART,JEND,JSTEP,IVAL,IER)
 
   Created   6-APR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETC
.HEADER LEVEL 1 EZGETC
.LITERAL
   
   SUBROUTINE EZGETC (PARAM,ISTART,NCHAR,STRING,ERROR)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get Character string from array PARAM in
                         the currently selected RCP bank. Each
                         string is assumed to be begin at position
                         ISTART in the array and to be NCHAR
                         characters long. If NCHAR is ZERO then the
                         length of the string is assumed to be 32
                         characters.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM       Name of array parameter containing string
             ISTART      Starting position of string in array
             NCHAR       Number of characters to return
 
   Outputs : STRING      Returned string (256 characters maximum)
             ERROR       0 --- OK. See error codes for EZGET.
 
   Controls: None
 
   Created  11-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETC1
.HEADER LEVEL 1 EZGETC1
.LITERAL
   
   SUBROUTINE EZGETC1 (IARRAY,ITYPE,IPOINT,STRING,LENGTH)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Assuming a string begins at IARRAY(IPOINT)
   return it, and its length, in the variables STRING and LENGTH,
   respectively. Use EZGET_VALUE_TYPE to return the arrays IARRAY
   and ITYPE for the specified RCP parameter. IMPORTANT: Upon exit
   the pointer IPOINT is updated so that it points to the first word
   after the string. This routine is useful for decoding an RCP
   parameter, of mixed type, which contains character strings.
 
   
.END NOTE
.LITERAL
   Inputs  : IARRAY(*)        [I]     Array of values
             ITYPE(*)         [I]     Array of types
             IPOINT           [I]     Pointer to start of string in
                                      array IARRAY.
   Outputs : IPOINT           [I]     Pointer to word after string
             STRING           [C*]    Character string
             LENGTH           [I]     Length of character string
 
   Controls: None
 
   Created  12-DEC-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETC2
.HEADER LEVEL 1 EZGETC2
.LITERAL
   
   SUBROUTINE EZGETC2 (IARRAY,ITYPE,IPOINT,STRING,LENGTH)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Assuming a string begins at IARRAY(IPOINT)
   return it, and its length, in the variables STRING and LENGTH,
   respectively. Use EZGET_VALUE_TYPE to return the arrays IARRAY
   and ITYPE for the specified RCP parameter. IMPORTANT: Upon exit
   the pointer IPOINT is updated so that it points to the first word
   after the string. This routine is useful for decoding an RCP
   parameter, of mixed type, which contains character strings.
 
   
.END NOTE
.LITERAL
   Inputs  : IARRAY(*)        [I]     Array of values
             ITYPE(*)         [I]     Array of types (in upper word)
             IPOINT           [I]     Pointer to start of string in
                                      array IARRAY.
   Outputs : IPOINT           [I]     Pointer to word after string
             STRING           [C*]    Character string
             LENGTH           [I]     Length of character string
 
   Controls: None
 
   Created  12-DEC-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETI
.HEADER LEVEL 1 EZGETI
.LITERAL
   
   SUBROUTINE EZGETI (PARAM1,ID,IER)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get Index associated with parameter PARAM1.
                         The index ID can then be used with EZGET1 and
                         EZSET1 for fast access to parameters.
                         IMPORTANT: Parameter names MUST be given in
                         upper case.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM1      Name of parameter (CHARACTER string)
 
   Outputs : ID          Index associated with parameter PARAM1.
             IER         Error code. See EZGET_ERROR_TEXT.
 
                           0 --> OK
   Controls: None
 
   Created  21-APR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETN
.HEADER LEVEL 1 EZGETN
.LITERAL
   
   SUBROUTINE EZGETN (ID,NAME,N)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return Name of parameter with index ID.
 
   
.END NOTE
.LITERAL
   Inputs  : ID          Identifier index
 
   Outputs : NAME        Name of parameter (32-chars. max)
             N           Number of characters in name
 
                           Error codes. Use EZERR to check for errors.
                           0 --> OK
                           See also EZGET_ERROR_TEXT.
 
   Controls: None
 
   Created  13-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETNAME
.HEADER LEVEL 1 EZGETNAME
.LITERAL
   
   SUBROUTINE EZGETNAME (LADDR,BKNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Given the address LADDR of an RCP bank
   return the (long) name of that bank.
 
   
.END NOTE
.LITERAL
   Inputs  : LADDR    [I]     Address of RCP bank
   Outputs : BKNAME   [C*]    Name of RCP bank (Maximum of 32 chars.)
                              Use EZERR(IER) to check for errors.
                              See also EZGET_ERROR_TEXT.
   Controls: None
 
   Created  10-MAY-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETS
.HEADER LEVEL 1 EZGETS
.LITERAL
   
   SUBROUTINE EZGETS (PARAM,IDX,STRING,LENGTH,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get the IDX'th character string in the
                         array PARAM from the currently selected
                         RCP bank. NOTE: EZGETS works on both mixed
                         and string arrays.
 
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM       Name of array parameter containing string.
             IDX         Index of string. 1--first string, 2--second etc.
   Outputs : STRING      character string.
             LENGTH      String length.
             IER         Error code. 0--> OK.
   Controls: None
 
   Created  12-APR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGETT
.HEADER LEVEL 1 EZGETT
.LITERAL
   
   SUBROUTINE EZGETT (ID,NAME,N,TYPE,SIZE)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return Name, type and size of parameter with
                         specified parameter ID.
 
   
.END NOTE
.LITERAL
   Inputs  : ID   [I]    Identifier index
 
   Outputs : NAME [C*]   Name of parameter (32-chars. max)
             N    [I]    Number of characters in name
 
             TYPE [I]    Type of identifier. For an array type
                         it will be the type of the FIRST element
                         in the array. Use the value of SIZE to
                         identify an array (SIZE > 1).
             SIZE [I]    Number of values/identifier
 
                           Error codes. Use EZERR to check for errors.
                           0 --> OK
                           See also EZGET_ERROR_TEXT.
 
   Controls: None
 
   Created  13-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET_NEXT_NAME
.HEADER LEVEL 1 EZGET_NEXT_NAME
.LITERAL
   
   SUBROUTINE EZGET_NEXT_NAME (PARAM,NEXT)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return next parameter in RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : None
 
   Outputs : PARAM    [C*]    Parameter name
   Controls: NEXT     [I]     Pointer to next name (Set to 1 initially)
 
   Created   6-JUN-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET_NEXT_VALUE_TYPE
.HEADER LEVEL 1 EZGET_NEXT_VALUE_TYPE
.LITERAL
   
   SUBROUTINE EZGET_NEXT_VALUE_TYPE(PARAM,VAL,CVAL,TYPE,LVAL,IER,PTR)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return the next value and its type in array
   PARAM. Set PTR to 1 to get FIRST value. PTR will be updated upon
   exit.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM    [C*]    Name of parameter (32-characters maximum).
 
   Outputs : VAL              Value; can be returned as INTEGER, REAL
                              or LOGICAL. Use equivalences to convert
                              between INTEGER, REAL and LOGICAL.
 
             CVAL     [C*]    Character value.
 
             TYPE     [I]     Value type.
 
                              Type            Type id
 
                              INTEGER         1
                              REAL            2
                              REAL (E-format) 3
                              LOGICAL         4
                              CHARACTER       10 + n (n=string length)
 
             LVAL     [I]     1 for INTEGER, REAL or LOGICAL; Length
                              of string for CHARACTER value.
 
             IER      [I]     Status code
                               0 --> OK
                               1 --> LAST value
 
   Controls: PTR      [I]     1 -- Return 1st value. Updated upon
                              exit.
 
   Created  29-MAY-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET_SIZE
.HEADER LEVEL 1 EZGET_SIZE
.LITERAL
   
   SUBROUTINE EZGET_SIZE (PARAM,NVAL,IER)
   
   Author(s) : Harrison B. Prosper, Chip Stewart
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return the array size in full words (32 bits)
                         for identifier PARAM from a pre-selected
                         RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM   [C*]    Name of parameter (CHARACTER string)
 
   Outputs : NVAL            Value(s) pertaining to name ``PARAM''.
 
             IER      [I]     Error code
 
                               0 --> OK
                              -1 --> Variable not found
                              -2 --> Bank not found
 
   Controls: None
   Calls:    EZGETA
   Created 2-MAR-1992
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGET_VALUE_TYPE
.HEADER LEVEL 1 EZGET_VALUE_TYPE
.LITERAL
   
   SUBROUTINE EZGET_VALUE_TYPE (PARAM,VAL,TYPE,NVAL,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return values associated with identifier
   PARAM in array VAL(*). For each value return the type in array
   TYPE(*). Use EZSET_VALUE_TYPE to set the values and types.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM    [C*]    Name of parameter (32-characters maximum).
 
   Outputs : VAL(*)           Values; can be returned as INTEGER, REAL
                              or LOGICAL. If the values are of mixed
                              type use equivalences between INTEGER,
                              REAL and LOGICAL to get the correct
                              data conversion and use DHTOC (or UHTOC)
                              to convert to characters.
 
             TYPE(*)  [I]     Value type.
 
                              Type            Type id
 
                              INTEGER         1
                              REAL            2
                              REAL (E-format) 3
                              LOGICAL         4
                              CHARACTER       10 + n (n=string length)
 
             NVAL     [I]     Number of values returned
 
             IER      [I]     Status code
                               0 --> OK
                               See EZGET_ERROR_TEXT(IER,STRING)
   Controls:
 
   Created   9-NOV-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGNXT
.HEADER LEVEL 1 EZGNXT
.LITERAL
   
   SUBROUTINE EZGNXT (PREFIX,NID,ID)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return the ID of the next parameter whose
                         name begins with the given prefix. Set the
                         (variable) NID = 1 to get the first
                         parameter (in alphabetical order). Upon
                         exit EZGNXT increments NID by 1 so that
                         on subsequent calls the next parameter ID
                         will be returned. Use EZGETN to get the
                         name of the parameter with index ID.
 
   
.END NOTE
.LITERAL
   Inputs  : PREFIX   [C*]    Parameter name prefix.
             NID      [I]     1 ---> Get 1st parameter
                              2 ---> Get 2nd parameter etc.
 
   Outputs : ID       [I]     Parameter ID; 0 --- Parameter not found
                              or no more parameters with given prefix.
 
   Controls: None
 
                               Error code
 
                               0 --> OK
                               See EZERR and EZGET_ERROR_TEXT.
 
   Created  13-SEP-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGREM
.HEADER LEVEL 1 EZGREM
.LITERAL
   
   SUBROUTINE EZGREM (PARAM1,REMARK,LREM)
   
   Author(s) : Harrison B. prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get REMark associated with parameter PARAM1
                         from selected RCP bank. Use EZPICK to select
                         an RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM1      Name of parameter (CHARACTER string)
 
   Outputs : REMARK      String containing comment
             LREM        Length of comment
                         Error code. Use EZERR to check for errors.
 
                           0 --> OK
                          -1 --> Variable not found
                          -2 --> Bank not found
 
   ENTRY EZSREM (PARAM1,REMARK,LREM)
 
   Controls: None
 
   Created   7-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZGSET
.HEADER LEVEL 1 EZGSET
.LITERAL
   
   SUBROUTINE EZGSET (CHAR1,IVAL,IDX)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Access value(s) of variable CHAR1 in given
                         RCP bank. This calls EZGET or EZSET
                         and bombs if the return code from either of
                         these routines is non-zero.
 
   
.END NOTE
.LITERAL
   Inputs  : CHAR1       Name of datum or data (CHARACTER string)
 
   Outputs : IVAL(*)     Value(s) pertaining to name ``CHAR1''.
 
 
   Controls: IDX         1 --> GET value(s), -1 ---> SET value
 
 
   Created  27-NOV-1987
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZHDRC
.HEADER LEVEL 1 EZHDRC
.LITERAL
   
   FUNCTION EZHDRC (BANK1,OPTION1)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return textual RCP header information.
 
   
.END NOTE
.LITERAL
   Inputs  : BANK1       Name of RCP bank.
             OPTION1     Name of datum required
 
                         'VERSION'          Program version number
                         'TIMESTAMP'        Creation date and time
 
   Outputs : None
 
                         Error code:
                         0 --- OK
                         See EZERR and EZGET_ERROR_TEXT.
   Controls: None
 
   Created   9-JAN-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZHDRI
.HEADER LEVEL 1 EZHDRI
.LITERAL
   
   FUNCTION EZHDRI (BANK1,OPTION1)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return numerical RCP header information.
 
   
.END NOTE
.LITERAL
   Inputs  : BANK1       Name of RCP bank.
             OPTION1     Name of datum required
 
                         'IDENTIFIERS'      Number of Identifiers
                         'VALUES'           Number of values
                         'MAX_IDENTIFIERS'  Maximum number of Ids
                         'MAX_VALUES'       Maximum number of values
                         'WORDS/RECORD'     Number of words/record
                         'WORDS/BANK'       Total size of RCP bank
 
   Outputs : None
 
                         Error code:
                         0 --- OK
                         See EZERR and EZGET_ERROR_TEXT
   Controls: None
 
   Created   3-OCT-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZIN
.HEADER LEVEL 1 EZIN
.LITERAL
   
   SUBROUTINE EZIN (LUNIN,BKNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Fetch an RCP bank from unit LUNIN and give
                         it the name in BKNAME, if BKNAME is NOT blank;
                         otherwise use the name in the header part of
                         the RCP bank. If this bank is at the head of
                         a chain of RCP banks then ALL RCP banks
                         within the chain will be declared automatically
                         to the EZ routines.
 
   
.END NOTE
.LITERAL
   Inputs  : LUNIN       Logical unit of input stream
             BKNAME      ' ' or name to give to Fetched bank plus
                         the OPTIONAL qualifier /DROP.
                         If /DROP qualifier is used the old rcp-bank
                         is dropped and replaced with the new rcp-bank.
                         If a name is NOT given then name in the
                         header of the RCP-bank is used.
   Outputs : None
   Controls: None
 
   Created  21-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZINIT
.HEADER LEVEL 1 EZINIT
.LITERAL
   
   SUBROUTINE EZINIT
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Declare ALL RCP banks in /ZEBSTP/ to the
                         EZ routines. This routine would normally
                         be called after ZEBRA banks have been read
                         into /ZEBSTP/. Any RCP banks amongst the
                         banks read in would be automatically declared
                         to the EZ package. The store /ZEBSTP/ is
                         searched sequentially using LZFIDH for RCP
                         banks. Upon finding an RCP bank EZNAME
                         is called with the name obtained from the
                         header section of the RCP bank. NOTE: If you
                         know explicitly where the RCP banks are in
                         /ZEBSTP/ it is clearly quicker to call EZNAME
                         directly.
 
   
.END NOTE
.LITERAL
   Inputs  : None
   Outputs : None
   Controls: NOne
 
   Created  14-SEP-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZLOC
.HEADER LEVEL 1 EZLOC
.LITERAL
   
   SUBROUTINE EZLOC (BANK1,LP)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return address of RCP bank BANK1. By default
                         the RCP bank which hangs below STPH (via SCPH)
                         is called SCPH. Use EZRNAM to rename bank if needed.
 
   
.END NOTE
.LITERAL
   Inputs  : BANK1       Name of RCP bank.
 
   Outputs : LP          Address of RCP bank (INTEGER).
                            LP > 0 Bank exists
                            LP = 0 Bank does not exist
 
   Created  13-MAY-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZMAKE
.HEADER LEVEL 1 EZMAKE
.LITERAL
   
   SUBROUTINE EZMAKE (LUN,RECSIZ,BKNAME,NBANKS)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Read an RCP text file containing one or more
                         _\START ... _\STOP blocks and direct each block
                         to a different RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN         Logical unit number of input file
             RECSIZ      Record size in 32-bit words (1-->20)
                         If RECSIZ=0 then 20 is assumed (full line).
   Outputs : BKNAME(*)   Name as given in \START commands
             NBANKS      Number of banks created
 
   Controls: None
 
   Created   9-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZMERGE_BANKS
.HEADER LEVEL 1 EZMERGE_BANKS
.LITERAL
   
   SUBROUTINE EZMERGE_BANKS(BANK1,BANK2,BANKOUT,IER)
   
   Author(s) : Lupe Howell
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Merges two given RCP banks into another RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : BANK1   [C*]: First RCP bank 
             BANK2   [C*]: Second RCP bank
 
   Outputs : BANKOUT [C*]: Output RCP bank
 
   Controls: IER      [I]: If 0 Okay
 
   Created  30-OCT-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZMERGE_PARAMS
.HEADER LEVEL 1 EZMERGE_PARAMS
.LITERAL
   
   SUBROUTINE EZMERGE_PARAMS(BANKNAME,PARAM,PAREC,ELEMENTS,IER)
   
   Author(s) : Lupe Howell
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Merge the element(s) of the given parameter
   into the same parameter found in BANKNAME.
   If the given parameter and the one in the bank have a single element
   merge the two values into an array if their values are not different.
 
   
.END NOTE
.LITERAL
   Inputs  : BANKNAME   [C*]: Name of bank to do merge
             PARAM      [C*]: name of the parameter to merge
             PAREC      [I ]: Maximum number of records
             ELEMENTS[C*(*)]: Record(s) tha belong to the parameter
 
   Outputs : IER        [I ]: 0 If OK
 
   Created  21-NOV-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZMOVE
.HEADER LEVEL 1 EZMOVE
.LITERAL
   
   SUBROUTINE EZMOVE (BKNAME,LSUP,IZLINK)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Move RCP bank BKNAME from the current address
                         and hang a Converted RCP (CRCP) bank
                            beneath the bank whose
                         address is given in LSUP. The link bias is
                         assumed to be -IZLINK. This routine checks
                         to see if link -IZLINK is already occupied
                         and signals an error if it is. NOTE: The CRCP
                         bank is an ASCII bank and is therefore 
                         transportable. If you wish to move the RCP bank
                         as is use EZSHUNT.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME      Name of RCP bank to be moved
             LSUP        Address of supporting bank
             IZLINK      Link from which bank is to be hung
 
   Outputs : NONE        Use EZERR to return error code
                         0 ---  OK
                         See also EZGET_ERROR_TEXT
   Controls: None
 
   Created  23-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZMRCP
.HEADER LEVEL 1 EZMRCP
.LITERAL
   
   SUBROUTINE EZMRCP(LBANK,IER)
   
   Author(s) : Marcel Demarteau
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Copy an RCP bank with link LBANK from the run
                         division in ZEBCOM to RCP.
 
   
.END NOTE
.LITERAL
   Inputs  : LBANK : Supporting link of bank to be copied to STP
   Outputs : IER   : 0=ok, -1=not successfull
 
   Created  20-JUN-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZNAME
.HEADER LEVEL 1 EZNAME
.LITERAL
   
   SUBROUTINE EZNAME (BKNAME,LSUPP,IZLINK)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   

 
      Declare an RCP bank to the RCP package. If the RCP bank is part
      of a tree of banks then LSUPP should be the address of the support
      bank and IZLINK the link from which the RCP bank hangs. If the
      RCP bank is a stand-alone bank then IZLINK MUST be set to zero
      and LSUPP is then taken to be the address of the RCP bank.
      If BKNAME is ' ' then the RCP bank will be declared with the name
      given in the header, otherwise it is given the name in BKNAME.
      If the bank is actually a CRCP (ASCII) bank then it is converted
      automatically to a stand-alone RCP bank.
 
                         IMPORTANT: This routine should be
                         called to declare an RCP bank to
                         the RCP package, otherwise the bank
                         will be inaccessible.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME      Name to assign to bank (up to 32 chars.)
             LSUPP       Address of RCP support bank if IZLINK > zero;
                         otherwise it is the address of the RCP bank
                         itself.
 
   Outputs : LSUPP       Changed only if IZLINK = 0. Then it will be
                         address of the new stand-alone RCP bank.
 
                         Error codes
                         0 --- OK
                         See EZERR and EZGET_ERROR_TEXT.
   Controls: IZLINK
 
   Created   4-OCT-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZOUT
.HEADER LEVEL 1 EZOUT
.LITERAL
   
   SUBROUTINE EZOUT (LUNOUT,BKNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Save named RCP bank to disk.
                         Use EZIN to fetch it back into memory.
 
   
.END NOTE
.LITERAL
   Inputs  : LUNOUT      Unit number of output stream
             BKNAME      Name of structure to be saved
   Outputs : None
   Controls: None
 
   Created  20-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZPAR
.HEADER LEVEL 1 EZPAR
.LITERAL
   
   SUBROUTINE EZPAR (IN,OPTION,PARAM,NPAR)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return parameter names in an RCP TEXT file
                         on disk.
 
   
.END NOTE
.LITERAL
   Inputs  : IN          Logical Unit number of input data stream
             OPTION      'ALL'       Return ALL parameter names
                         'ARRAY'     Return ALL array names
                         'anything'  Return ALL non-array names
   Outputs : PARAM(*)    Array of names (character)
             NPAR        Number of parameters
 
   Created 13-OCT-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZPICK
.HEADER LEVEL 1 EZPICK
.LITERAL
   
   SUBROUTINE EZPICK (BKNAME)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Select specified RCP bank so that
                         subsequent calls to the EZxxxx routines will
                         refer to this bank. EZPICK calls can be
                         nested to a maximum depth of 10.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME      Bank name. Up to 32 characters.
 
   Outputs : NONE        Use EZERR to return error code
                         0 --- OK
                         See also EZGET_ERROR_TEXT
   Controls: None
 
   ENTRY EZRSET
 
   Purpose and Methods : Re-select previous RCP bank
 
   Inputs  : None
   Outputs : None
   Controls: None
 
   Created  23-SEP-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZPICK_NOMSG
.HEADER LEVEL 1 EZPICK_NOMSG
.LITERAL
   
   SUBROUTINE EZPICK_NOMSG (BKNAME,IER)
   
   Author(s) : James T. Linnemann
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Exactly the same as EZPICK, except that an error
                          code is returned instead of generating a call to
                          ERRMSG when the bank can't be found
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAME      Bank name. Up to 32 characters.
 
   Outputs : IER         Uses EZERROR to return error code
                         0 --- OK
                         See also EZGET_ERROR_TEXT
   Controls: None
 
   Created  7-APR-1992
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZPRINT
.HEADER LEVEL 1 EZPRINT
.LITERAL
   
   SUBROUTINE EZPRINT (LUN,PARAM,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Print the RCP parameter PARAM to unit LUN. If
   LUN = 0 print using INTMSG. Use EZPICK to pick the bank prior to
   calling this routine.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN      [I]     Output unit number.
             PARAM    [C*]    Parameter name.
   Outputs : IER      [I]     0 --- OK.
   Controls: None
 
   Created  30-MAR-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZRDA
.HEADER LEVEL 1 EZRDA
.LITERAL
   
   SUBROUTINE EZRDA (RECORD)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Read a character array containing parameters
                         and save records and decoded values in the RCP
                         bank which hangs below STPH. The Character data
                         is ordered to allow the use of a binary search
                         to retrieve data from the bank. The RCP bank
                         hanging below STPH (via SCPH) is given the name
                         SCPH by default. It can be renamed with EZRNAM.
                         The RCP bank will be automatically expanded to
                         accomodate new entries. IMPORTANT: The last
                         entry in the array MUST contain the command
                         _\STOP.
 
   
.END NOTE
.LITERAL
   Inputs  : RECORD(*)        Character array
   Outputs : None
   Controls: None
                         Error codes. Use EZERR to check for code.
                         0 --- OK
                         1 --- Bank has been expanded at least once
                         2 --- Maximum bank size reached.
                        -4 --- FATAL ERROR. IZSCPH link already occupied
 
   Created  10-JAN-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZRDF
.HEADER LEVEL 1 EZRDF
.LITERAL
   
   SUBROUTINE EZRDF (LUN)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Read an RCP file containing parameters and
                         save records and decoded values in the SRCP
                         bank which hangs below STPH. 
                        The SRCP bank
                         hanging below STPH (via SCPH) is given the name
                         SCPH by default. It can be renamed with EZRNAM.
                         The RCP bank will be automatically expanded to
                         accomodate new entries.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN         Logical Unit number of input data stream
   Outputs : None
 
                         Error codes. Use EZERR to check for code.
                         0 --- OK
                         1 --- Bank has been expanded at least once
                         2 --- Maximum bank size reached.
                        -4 --- FATAL ERROR. IZSCPH link already occupied
 
   Created  26-NOV-1987
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZREAD
.HEADER LEVEL 1 EZREAD
.LITERAL
   
   SUBROUTINE EZREAD (LUN,BKNAME,WRDREC,LSUPP,IZLINK)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   

 
      Read an RCP file containing parameters and save records and
      decoded values in an RCP bank. The records are ordered to allow
      the use of a binary search to retrieve data from the bank. The
      RCP bank is assigned the name given in BKNAME. The name can be
      changed with EZRNAM. The file should be opened and closed
      externally. Note: INRCP is easier to use.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN      [I]     Logical unit of input stream
             BKNAME   [C*]    Name to give to RCP bank
             WRDREC   [I]     Number of words/record (=identifier+rem.)
             LSUPP    [I]     Address of support bank if > 0.
             IZLINK   [I]     Link from which to hang bank.
 
   Outputs : None
 
                         Error codes. Use EZERR to check for code.
                         0 --- OK
                         1 --- Bank has been expanded at least once
                        -4 --- FATAL ERROR. IZLINK link already occupied
                        -5 --- Maximum bank size reached.
 
      NOTE 1: The RCP bank is created stand-alone if LSUPP is
              zero; otherwise LSUPP will be taken as the address of
              the supporting bank from which the RCP bank is to be
              hung. IZLINK specifies the link.
 
      NOTE 2: The RCP bank will be automatically expanded to accomodate
              new entries. Maximum number of records per bank is given by
              MAXIDS (2000). A record corresponds either to a parameter
              IDENTIFIER (perhaps with a COMMENT), a BLANK line, or to
              a COMMENT line. Arrays specified by an array block
 
                      \ARRAY array-name [! comment]
                              :
                      \END
 
              allow for the input of parameter identifiers associated
              with more than one value. The absolute total number of
              values which can be stored in an RCP bank is determined
              by MAXVAL (65535). Arrays can consist of a mixture of
              values of different type.
 
      NOTE 3: If the command \SIZE is placed in the FIRST line of the file
              the number following it will be used to allocate the initial
              number of place holders for values. The second number, if
              present, will be used to allocate the initial number of
              place holders for records (identifiers + comment lines).
              If the \SIZE command is not used then the following defaults
              are assumed:
 
                      DEFVAL = 4000   Number of values
                      DEFIDS =  200   Number of records
 
   Created  26-NOV-1987
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZRNAM
.HEADER LEVEL 1 EZRNAM
.LITERAL
   
   SUBROUTINE EZRNAM (BKNAM1,BKNAM2)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Rename RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : BKNAM1      Old name. Up to 32 characters.
             BKNAM2      New name
   Outputs : None
                         Use EZERR to check and return error code
                         0 --- OK
                         See also EZGET_ERROR_TEXT
   Controls: None
 
   Created   3-OCT-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZSETC
.HEADER LEVEL 1 EZSETC
.LITERAL
   
   SUBROUTINE EZSETC (PARAM,ISTART,NCHAR,STRING,ERROR)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Store Character string in array PARAM in
                         the currently selected RCP bank. The
                         string is assumed to be begin at position
                         ISTART in the array and to be NCHAR
                         characters long. If NCHAR is ZERO then the
                         length of the string is assumed to be 32
                         characters.
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM       Name of array parameter containing string
             ISTART      Starting position of string in array
             NCHAR       Number of characters in string
             STRING      String to store (256 characters maximum).
 
   Outputs : ERROR       0 --- OK. See error codes for EZSET.
 
 
   Controls: None
 
   Created  11-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZSETS
.HEADER LEVEL 1 EZSETS
.LITERAL
   
   SUBROUTINE EZSETS (PARAM,IDX,STRING,LENGTH,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Set the IDX'th character string in the array
                         PARAM of the currently selected RCP bank.
                         NOTE: EZSETS works on both mixed and string
                         arrays.
 
 
   
.END NOTE
.LITERAL
   Inputs  : PARAM       Name of array parameter to receive string.
             IDX         Index of string. 1--first string, 2--second etc.
             STRING      Character string.
             LENGTH      Length of string
   Outputs : IER         Error code. 0--> OK.
 
   Controls: None
 
   Created  12-APR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZSHUNT
.HEADER LEVEL 1 EZSHUNT
.LITERAL
   
   SUBROUTINE EZSHUNT(BKNAME,LSUP,IZLINK)
   
   Author(s) : Chip Stewart
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
            Same as EZMOVE but WITHOUT conversion to an ASCII bank.
   
.END NOTE
   
.TEST PAGE 20 !MODULE=EZSIZE
.HEADER LEVEL 1 EZSIZE
.LITERAL
   
   SUBROUTINE EZSIZE (LUN,NUMVAL,NUMREC)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Read an RCP file containing parameters and
                         return the number of records (identifiers
                         +comment lines+blank lines) and values
                         within file. The file must be opened
                         externally.
 
   
.END NOTE
.LITERAL
   Inputs  : LUN         Unit number of input stream
 
   Outputs : NUMVAL        Number of values
             NUMREC        Number of records (identifiers + comments)
 
   Created 16-NOV-1988
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZTELL
.HEADER LEVEL 1 EZTELL
.LITERAL
   
   SUBROUTINE EZTELL (BKNAME,NN)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Return name of currently selected RCP bank.
 
   
.END NOTE
.LITERAL
   Inputs  : None
 
   Outputs : BKNAME      Bank name. Up to 32 characters.
             NN          Number of characters in name
   Controls: None
 
   Created   9-MAR-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_COPY_ARRAY
.HEADER LEVEL 1 EZ_COPY_ARRAY
.LITERAL
   
   SUBROUTINE EZ_COPY_ARRAY(RCPIN,RCPOUT,ARNAME,ARRAY,LARRAY,IER)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         COPY A CHARACTER ARRAY OF NAME
   ARNAME FROM RCPFILE RCPIN  TO RCPFILE RCPOUT
 
   
.END NOTE
.LITERAL
   Inputs  : RCPIN = name of RCP input file
             RCPOUT = name of RCP output file
             ARNAME = name of array
   Outputs : ARRAY = contents of array
             LARRAY = length of array
             IER is non zero on error
   Controls:
 
   Created   5-APR-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_FILE_OPEN
.HEADER LEVEL 1 EZ_FILE_OPEN
.LITERAL
   
   SUBROUTINE EZ_FILE_OPEN(GTUNIT_ID,RCP_NAME,CHIO,UNIT,
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         OPENS a file name given in RCP_FILE.
 
   
.END NOTE
.LITERAL
   Inputs  : GTUNIT_ID  = ID for GT_UNIT
             RCP_NAME   = RCP name containing file name to be opened
                          as a counted character string
             CHOPT = character option   for D0OPEN
 
           'I' input  (VAX status OLD, READONLY)
           'O' output (VAX status NEW)
           'A' append (this option may not be available on all machines)
           'F' formatted
           'U' unformatted
           combinations allowed but some are illegal (i.e. 'UF')
           defaults 'I' and 'F' (i.e. ' ' equivalent to 'IF' or 'FI')
   Outputs : UNIT = Unit number of opened file
             FILENAME = name of opened file (obtained from RCP)
             IER  = Error code.
   Controls:
 
   Created   9-NOV-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_FILE_OPEN1
.HEADER LEVEL 1 EZ_FILE_OPEN1
.LITERAL
   
   SUBROUTINE EZ_FILE_OPEN1(GTUNIT_ID,RCP_NAME,CHIO,CHAR,
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         OPENS a file name given in RCP_FILE
 
   
.END NOTE
.LITERAL
   Inputs  : GTUNIT_ID  = ID for GT_UNIT
             RCP_NAME   = RCP name containing file name to be opened
                          as a counted character string
             CHOPT = character option   for D0OPEN
 
           'I' input  (VAX status OLD, READONLY)
           'O' output (VAX status NEW)
           'A' append (this option may not be available on all machines)
           'F' formatted
           'U' unformatted
           combinations allowed but some are illegal (i.e. 'UF')
           defaults 'I' and 'F' (i.e. ' ' equivalent to 'IF' or 'FI')
 
             CHAR = CHARACTER STRING TO APPEND TO FILE NAME IN RCP
 
   Outputs : UNIT = Unit number of opened file
             FILENAME = name of opened file (obtained from RCP)
             IER  = Error code.
   Controls:
 
   Created   9-NOV-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_GET_ARRAY
.HEADER LEVEL 1 EZ_GET_ARRAY
.LITERAL
   
   SUBROUTINE EZ_GET_ARRAY (ARRAY_NAME,PARAM_NAME,NPARAM,
   
   Author(s) : Lupe Howell, Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         For given array and list of parameters within
   array return the VALUE, TYPE and REMARK. The array is assumed to have
   the following structure:
 
   \ARRAY array-name
      'Param-name'    value   'Remark'
              :       :       :
   \END
 
   Note: Value can be of type INTEGER, REAL, LOGICAL or CHARACTER
   (enclosed within single quotes).
 
   Note:  To get ALL the parameters within the array set PARAM_NAME(1)
          to a blank.
 
   
.END NOTE
.LITERAL
   Inputs  : ARRAY_NAME       [C*]    Name of RCP array
             PARAM_NAME(*)    [C*]    Parameter name or key-word (or ' ')
             NPARAM           [I]     Number of parameters required
 
   Outputs : PARAM_NAME(*)    [C*]    Parameter names
             NPARAM           [I]     Number of parameters within an array
             IVAL(*)                  REAL, INTEGER, LOGICAL values
             CVAL(*)          [C*]    CHARACTER values
             TYPE(*)          [I]     RCP value types
             REMARK(*)        [C*]    Associated remarks
             IER              [I]     Error code; 0 -- OK
   Controls: None
 
   Created  27-MAR-1990
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_GET_CHARS
.HEADER LEVEL 1 EZ_GET_CHARS
.LITERAL
   
   SUBROUTINE EZ_GET_CHARS(NAME,NCHR,CHR,IER)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Get the first NCHR contiguous set of
                         character strings from the parameter NAME in
                         the currently selected RCP bank. EZ_GET_CHARS
                         works off both pure string array parameters and
                         arrays of mixed type. The maximum array size is
                         8000 32-bit words.
 
   
.END NOTE
.LITERAL
   Inputs  : NAME     Name of array of strings in RCP bank.
 
   Outputs : NCHR    Number of character strings
             CHR(*)  Character strings
             IER      0 --- OK
 
   Controls: None
 
   Created   2-NOV-1989
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_GET_STRINGS
.HEADER LEVEL 1 EZ_GET_STRINGS
.LITERAL
   
   SUBROUTINE EZ_GET_STRINGS
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Starting with the ISTRING'th character string
   return up to MAXSTR character strings from the array parameter NAME in
   the currently selected RCP bank. The strings do NOT have to be
   contiguous within the array.
 
   
.END NOTE
.LITERAL
   Inputs  : NAME     [C*]    Name of parameter array in RCP bank.
             ISTRING  [I]     Ordinal position of first string to return.
 
   Outputs : MAXSTR   [I]     Maximum number of strings to return.
                              0 - return all strings from istring on.
             NUMSTR   [I]     Number of strings returned.
             LENSTR(*)[I]     Array of string lengths.
             STRING(*)[C*]    Array of strings
             IER      [I]     0 --- OK
 
   Controls: None
 
   Created   3-JUN-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_RENAME_PARAM
.HEADER LEVEL 1 EZ_RENAME_PARAM
.LITERAL
   
   SUBROUTINE EZ_RENAME_PARAM(OLD_NAME,NEW_NAME,IER)
   
   Author(s) : LUPE HOWELL, Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Assign a new name to an existing RCP
   parameter.
 
   
.END NOTE
.LITERAL
   Inputs  : OLD_NAME [C*]    Old parameter name
   Outputs : NEW_NAME [C*]    New parameter name
             IER      [I]     0 - OK
   Controls:
 
   Created  31-MAY-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_REPLACE_ARRAY
.HEADER LEVEL 1 EZ_REPLACE_ARRAY
.LITERAL
   
   SUBROUTINE EZ_REPLACE_ARRAY(RCP_NAME,NEW_ARRAY,LINES,IER)
   
   Author(s) : Rajendran Raja
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         REPLACE AN EXISTING RCP ARRAY
   BY AN ARRAY .
 
   
.END NOTE
.LITERAL
   Inputs  : RCP_NAME = NAME OF RCP ARRAY
             NEW_ARRAY = NEW ARRAY VALUES AS THOUGH THEY ARE IN A
             ASCII RCP FILE
             LINES = NUMBER OF LINES TAKEN BY THE NEW_ARRAY
             IN THE RCP FILE
   Outputs : IER = NON ZERO ON ERROR
   Controls:
 
   Created  25-FEB-1991
.END LITERAL
   
.TEST PAGE 20 !MODULE=EZ_SETUP_COMPACK
.HEADER LEVEL 1 EZ_SETUP_COMPACK
.LITERAL
   
   SUBROUTINE EZ_SETUP_COMPACK (RCP_FILE,IER)
   
   Author(s) : Harrison B. Prosper
.END LITERAL
.LITERAL
   
 
.END LITERAL
   
.NOTE Purpose and Methods
   
                         Setup COMPACK via an RCP file. See the note
   D0$RCP_UTIL:EZ_SETUP_COMPACK.DOC.
 
   
.END NOTE
.LITERAL
   Inputs  : RCP_FILE [C*]    Name of RCP-file
   Outputs : IER      [I]     0 --- Ok.
   Controls:
 
   Created  29-MAY-1990
.END LITERAL
   
