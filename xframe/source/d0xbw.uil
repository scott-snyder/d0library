module d0x
    names = case_sensitive

object
!{u
    d0x_main: XmMainWindow 
        {
        arguments
            {
            XmNx = 54;
            XmNy = 60;
            XmNborderWidth = 1;
            XmNwidth = 663;
            XmNheight = 262;
            };
        controls
            {
            XmMenuBar 
                {
                arguments
                    {
                    XmNmenuHelpWidget = XmCascadeButton help_main_button;
                    XmNlabelString = 
                    compound_string(" D0X");
                    };
                controls
                    {
                    XmCascadeButton filescasc;
                    XmCascadeButton casctools;
                    XmCascadeButton help_main_button;
                    XmCascadeButton controlcasc;
                    };
                };
            XmForm bulletin_main;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                main_init(0);
                set_curtop(0);
                };
            };
        };
    help_main_button: XmCascadeButton 
        {
        arguments
            {
            XmNx = 336;
            XmNy = 18;
            XmNlabelString = 
            compound_string("HELP Menus");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNmnemonic = keysym("H");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 25;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 74;
                            XmNy = 241;
                            XmNlabelString = 
                            compound_string("Version 3");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmPushButton help_overview;
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 10;
                            XmNy = 130;
                            XmNwidth = 16;
                            XmNheight = 16;
                            };
                        };
                    XmPushButton help_files_button;
                    XmPushButton help_output;
                    XmPushButton help_d0_button;
                    XmPushButton d0help;
                    XmPushButton helpzebra;
                    XmPushButton help_control_button;
                    XmPushButton hsearch;
                    XmPushButton d0xuserhelp;
                    };
                };
            };
        callbacks
            {
            };
        };
    fzrz_file_button: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Data File");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                specify_file_type(0);
                };
            };
        };
    stp_file_button: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 11;
            XmNlabelString = 
            compound_string("STP File");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                specify_file_type(1);
                };
            };
        };
    verify_button: XmPushButtonGadget 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Verify Store  ");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                zebra_proc(1);
                };
            };
        };
    next_button: XmPushButton 
        {
        arguments
            {
            XmNx = 786;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Next",separate=true) &
                compound_string("Event");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNleftAttachment = XmATTACH_NONE;
            XmNleftOffset = 786;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 22;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 14;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                };
            };
        };
    scan_button: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 39;
            XmNlabelString = 
            compound_string("All");
            XmNaccelerator = 
            "Ctrl<Key>A";
            XmNacceleratorText = 
            compound_string("^A");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(1);
                };
            };
        };
    skip_button: XmPushButton 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 58;
            XmNlabelString = 
            compound_string("Skip...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(2);
                };
            };
        };
    halt_button: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 58;
            XmNlabelString = 
            compound_string("HALT");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNalignment = XmALIGNMENT_CENTER;
            XmNaccelerator = 
            "Ctrl<Key>K";
            XmNacceleratorText = 
            compound_string("^K");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                interrupt(0);
                };
            };
        };
    xdbank_button: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Navigate");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNacceleratorText = 
            compound_string("^N");
            XmNaccelerator = 
            "Ctrl<Key>N";
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                man_navc(0);
                man_navt(0);
                d0util_proc(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    xdbank_shell: XmFormDialog 
        {
        arguments
            {
            XmNx = 5;
            XmNy = nav_y+656;
            XmNwidth = 800;
            XmNheight = 350;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNautoUnmanage = false;
            XmNdialogTitle = 
            compound_string("Event Tree Window");
            XmNdefaultPosition = false;
            };
        controls
            {
            XmScrolledWindow xdbank_scroll_map;
            XmRowColumn navtreerc;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(16);
                };
            };
        };
    xdbank_close_button: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNwidth = 85;
            XmNheight = 45;
            XmNx = 10;
            XmNy = 10;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                um_tree(0);
                um_navc(0);
                };
            };
        };
    xdbank_scroll: XmScrolledWindow 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNy = 1;
            XmNx = 0;
            XmNheight = 400;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 5;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmRowColumn navcrc;
            XmNtopOffset = 11;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmScrolledWindow xdbank_scroll_data;
            XmNrightOffset = 11;
            };
        controls
            {
            XmText xdbank_text_top;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(55);
                };
            };
        };
    xdbank_text_top: XmText 
        {
        arguments
            {
            XmNheight = 1000;
            XmNcolumns = 132;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(8);
                };
            };
        };
    ezbank_button: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 3;
            XmNlabelString = 
            compound_string("EZBANK");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(3);
                };
            };
        };
    xdbank_scroll_data: XmScrolledWindow 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNy = -1;
            XmNx = -1;
            XmNwidth = 200;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 11;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 6;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmRowColumn navcrc;
            XmNleftOffset = 10;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            };
        controls
            {
            XmText xdbank_text_bottom;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(35);
                };
            };
        };
    xdbank_help_button: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNheight = 41;
            XmNx = 11;
            XmNy = 35;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(5);
                };
            };
        };
    xdbank_scroll_map: XmScrolledWindow 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNleftOffset = 10;
            XmNtopOffset = 5;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 0;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 5;
            XmNscrollBarDisplayPolicy = XmAUTOMATIC;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNtopWidget = XmRowColumn navtreerc;
            };
        controls
            {
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(34);
                };
            };
        };
    VUITaaaac: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Set D0$ZEBLST to:");
            XmNx = 5;
            XmNy = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        };
    xdbank_text_zeblst: XmTextField 
        {
        arguments
            {
            XmNvalue = 
            "D0$ZEBLST:";
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 59;
            XmNy = 5;
            XmNwidth = 238;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(11);
                };
            XmNactivateCallback = procedures
                {
                zeblst_proc(0);
                };
            };
        };
    polab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Navigate to Pointer+:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNx = 0;
            XmNy = 0;
            };
        };
    xdbank_text_navigate: XmTextField 
        {
        arguments
            {
            XmNcolumns = 3;
            XmNheight = 47;
            XmNvalue = 
            "  0";
            XmNwidth = 48;
            XmNmaxLength = 3;
            XmNx = 0;
            XmNy = 7;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(13);
                };
            XmNactivateCallback = procedures
                {
                again_proc(0);
                };
            };
        };
    auto_button: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Auto");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                format_proc(0);
                };
            };
        };
    int_button: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Int");
            XmNwidth = 63;
            XmNheight = 31;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                format_proc(1);
                };
            };
        };
    float_button: XmPushButton 
        {
        arguments
            {
            XmNx = 34;
            XmNy = 55;
            XmNlabelString = 
            compound_string("Float");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                format_proc(2);
                };
            };
        };
    hex_button: XmPushButton 
        {
        arguments
            {
            XmNx = 32;
            XmNy = 67;
            XmNlabelString = 
            compound_string("Hex");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                format_proc(3);
                };
            };
        };
    xdbank_text_chain: XmTextField 
        {
        arguments
            {
            XmNcolumns = 3;
            XmNvalue = 
            "  1";
            XmNmaxLength = 3;
            XmNx = 16;
            XmNy = 12;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(12);
                };
            XmNactivateCallback = procedures
                {
                select_proc(0);
                };
            };
        };
    setcaph_button: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Set_Caph");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(7);
                };
            };
        };
    navup: XmArrowButton 
        {
        arguments
            {
            XmNheight = 22;
            XmNwidth = 23;
            XmNx = 3;
            XmNy = 7;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                navigate_proc(1);
                };
            };
        };
    bulletin_main: XmForm 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 21;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            };
        controls
            {
            XmScrolledWindow main_;
            XmScrolledWindow scf;
            XmPushButton next_button;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(17);
                };
            };
        };
    main_: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 60;
            XmNwidth = 664;
            XmNheight = 125;
            XmNborderWidth = 1;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomOffset = 17;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightOffset = 20;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 16;
            XmNbottomWidget = XmScrolledWindow scf;
            XmNrightWidget = XmPushButton next_button;
            };
        controls
            {
            XmText main_text;
            };
        };
    main_text: XmText 
        {
        arguments
            {
            XmNwidth = 1000;
            XmNheight = 500;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNcursorPositionVisible = false;
            XmNwordWrap = true;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(18);
                set_curtop(0);
                };
            };
        };
    navigate_text: XmText 
        {
        arguments
            {
            XmNcolumns = 30;
            XmNx = -1;
            XmNy = 0;
            XmNwidth = 461;
            XmNheight = 47;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(19);
                };
            };
        };
    zeb_enable: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Enabled");
            XmNx = 57;
            XmNy = 17;
            XmNset = true;
            XmNhighlightThickness = 0;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                zeblst_proc(1);
                };
            };
        };
    zebstp_button: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 4;
            XmNlabelString = 
            compound_string("ZEBSTP");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                store_type(1);
                };
            };
        };
    zebcom_button: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 3;
            XmNlabelString = 
            compound_string("ZEBCOM");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNshadowThickness = 2;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                store_type(0);
                };
            };
        };
    geant_button: XmPushButton 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 15;
            XmNlabelString = 
            compound_string("GEANT");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                store_type(2);
                };
            };
        };
    zebwrk_button: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 16;
            XmNlabelString = 
            compound_string("ZEBWRK");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                store_type(3);
                };
            };
        };
    fz_label: XmLabel 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("NO FZ File Open ");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNwidth = 1000;
            XmNrecomputeSize = false;
            XmNalignment = XmALIGNMENT_BEGINNING;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(20);
                };
            };
        };
    l1_button: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 7;
            XmNlabelString = 
            compound_string("L1 Trigger...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                search_type(3);
                };
            };
        };
    l2_button: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 8;
            XmNlabelString = 
            compound_string("L2 Trigger...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                search_type(4);
                };
            };
        };
    help_d0_button: XmPushButton 
        {
        arguments
            {
            XmNx = 27;
            XmNy = 48;
            XmNlabelString = 
            compound_string("D0X Tools");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(4);
                };
            };
        };
    help_control_button: XmPushButton 
        {
        arguments
            {
            XmNx = 27;
            XmNy = 48;
            XmNlabelString = 
            compound_string("Control");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(2);
                };
            };
        };
    help_files_button: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 26;
            XmNlabelString = 
            compound_string("Files (input)");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(1);
                };
            };
        };
    help_overview: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Overview");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(0);
                };
            };
        };
    sellab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Select Chain #:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNx = 7;
            XmNy = 8;
            };
        };
    banklab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Bank:");
            XmNx = 6;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNy = 5;
            };
        };
    xdbank_bank_2: XmTextField 
        {
        arguments
            {
            XmNcolumns = 5;
            XmNvalue = 
            "HEAD";
            XmNx = 6;
            XmNy = 5;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(23);
                };
            XmNactivateCallback = procedures
                {
                d0util_proc(-1);
                };
            };
        };
    raw_dump: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 1;
            XmNlabelString = 
            compound_string("Raw Data Browser");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNaccelerator = 
            "Ctrl<Key>R";
            XmNacceleratorText = 
            compound_string("^R");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                man_raw(0);
                rawcall(1);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    raw_form: XmFormDialog 
        {
        arguments
            {
            XmNx = 88;
            XmNy = 64;
            XmNwidth = 786;
            XmNheight = 758;
            XmNborderWidth = 1;
            XmNdialogTitle = 
            compound_string("Raw Data Bank Browser");
            XmNautoUnmanage = false;
            XmNresizePolicy = XmRESIZE_NONE;
            };
        controls
            {
            XmScrolledWindow raw_scroll;
            XmLabel crate_label;
            XmLabel 
                {
                arguments
                    {
                    XmNlabelString = 
                    compound_string("Status: OK");
                    XmNleftAttachment = XmATTACH_FORM;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNleftOffset = 220;
                    XmNtopOffset = 13;
                    XmNx = 105;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                callbacks
                    {
                    MrmNcreateCallback = procedures
                        {
                        save_text_tag(31);
                        };
                    };
                };
            XmTextField numrow_text;
            XmLabel VUITaaaaa;
            XmScrolledWindow scroll_trailer;
            XmScrolledWindow scroll_header;
            XmScrolledWindow raw_scroll_crates;
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNleftAttachment = XmATTACH_FORM;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNleftOffset = 8;
                    XmNtopOffset = 7;
                    XmNorientation = XmHORIZONTAL;
                    XmNnumColumns = 4;
                    XmNpacking = XmPACK_COLUMN;
                    };
                controls
                    {
                    XmPushButton return_raw;
                    XmPushButton help_raw;
                    XmPushButton reraw;
                    XmPushButton nextraw;
                    XmPushButton print_raw;
                    XmPushButton next_crate;
                    XmPushButton mdcd;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(117);
                };
            };
        };
    return_raw: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNy = 4;
            XmNx = 5;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                unman_raw(0);
                };
            };
        };
    hex_to_dec: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Hex-->Dec");
            XmNx = 5;
            XmNy = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                decodeit(0);
                };
            };
        };
    dec_to_hex: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Dec-->Hex");
            XmNx = 27;
            XmNy = 35;
            XmNheight = 29;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                decodeit(1);
                };
            };
        };
    decode_text: XmText 
        {
        arguments
            {
            XmNcolumns = 16;
            XmNx = 50;
            XmNy = 1;
            XmNwidth = 122;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(24);
                };
            };
        };
    raw_scroll: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 217;
            XmNtopOffset = 69;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 0;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAUTOMATIC;
            };
        controls
            {
            XmText raw_text;
            };
        };
    raw_text: XmText 
        {
        arguments
            {
            XmNheight = 5000;
            XmNcolumns = 132;
            XmNfontList = font_table(font('FIXED'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(25);
                };
            };
        };
    raw_header: XmText 
        {
        arguments
            {
            XmNheight = 500;
            XmNcolumns = 8;
            XmNfontList = font_table(font('FIXED'));
            XmNx = 11;
            XmNy = 7;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(26);
                };
            };
        };
    raw_trailer: XmText 
        {
        arguments
            {
            XmNheight = 200;
            XmNcolumns = 8;
            XmNfontList = font_table(font('FIXED'));
            XmNx = 7;
            XmNy = 9;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(27);
                };
            };
        };
    crate_label: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("This Crate Number is ");
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 220;
            XmNtopOffset = 37;
            XmNbottomAttachment = XmATTACH_NONE;
            XmNheight = 21;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmLabel VUITaaaaa;
            XmNrightOffset = 37;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(28);
                };
            };
        };
    numrow_text: XmTextField 
        {
        arguments
            {
            XmNcolumns = 5;
            XmNleftAttachment = XmATTACH_NONE;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 465;
            XmNtopOffset = 18;
            XmNx = 465;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 15;
            XmNy = 163;
            XmNheight = 35;
            XmNvalue = 
            "9";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(32);
                };
            XmNactivateCallback = procedures
                {
                rawcall(0);
                };
            };
        };
    scroll_header: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 111;
            XmNheight = 229;
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 0;
            XmNtopOffset = 197;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNy = 446;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightOffset = 0;
            XmNrightWidget = XmScrolledWindow raw_scroll_crates;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 121;
            };
        controls
            {
            XmText raw_header;
            };
        };
    scroll_trailer: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 110;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNleftOffset = 1;
            XmNtopOffset = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightOffset = 0;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 0;
            XmNrightWidget = XmScrolledWindow raw_scroll_crates;
            XmNy = 467;
            XmNtopWidget = XmScrolledWindow scroll_header;
            };
        controls
            {
            XmText raw_trailer;
            };
        };
    raw_scroll_crates: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 100;
            XmNtopOffset = 197;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 0;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmScrolledWindow raw_scroll;
            XmNrightOffset = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            };
        controls
            {
            XmText crates_text;
            };
        };
    crates_text: XmText 
        {
        arguments
            {
            XmNheight = 3000;
            XmNcolumns = 11;
            XmNfontList = font_table(font('FIXED'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(33);
                };
            XmNactivateCallback = procedures
                {
                rawcall(2);
                };
            };
        };
    help_raw: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNy = 3;
            XmNx = 24;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(6);
                };
            };
        };
    xdbank_print: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Unformatted");
            XmNshadowThickness = 4;
            XmNx = 3;
            XmNy = 3;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                printit(0);
                };
            };
        };
    print_raw: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("PRINT");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNy = 3;
            XmNx = 46;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                printit(1);
                };
            };
        };
    next_crate: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Next Crate");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 22;
            XmNy = 65;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                rawcall(3);
                };
            };
        };
    go_navigate: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("GO");
            XmNx = 44;
            XmNy = 11;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                again_proc(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    nav_control: XmFormDialog 
        {
        arguments
            {
            XmNx = nav_x;
            XmNy = nav_y;
            XmNwidth = nav_x+860;
            XmNheight = nav_y+580;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("Navigator Controls");
            };
        controls
            {
            XmScrolledWindow xdbank_scroll_data;
            XmRowColumn navcrc;
            XmScrolledWindow xdbank_scroll;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(114);
                };
            };
        };
    navdown: XmArrowButton 
        {
        arguments
            {
            XmNarrowDirection = XmARROW_DOWN;
            XmNwidth = 23;
            XmNx = 6;
            XmNy = 10;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                navigate_proc(-1);
                };
            };
        };
    xdbank_text_bottom: XmText 
        {
        arguments
            {
            XmNwidth = 550;
            XmNheight = 750;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(9);
                };
            };
        };
    ptree: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 0;
            XmNlabelString = 
            compound_string("Partial");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                zeblst_proc(4);
                };
            };
        };
    nav_crc: XmRowColumn 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 5;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            XmNisHomogeneous = false;
            };
        controls
            {
            XmPushButton xdbank_close_button;
            XmPushButton nextnav;
            XmOptionMenu navcdt;
            XmOptionMenu 
                {
                arguments
                    {
                    XmNx = 194;
                    XmNy = 17;
                    XmNborderWidth = 0;
                    XmNlabelString = 
                    compound_string("Print");
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 142;
                            XmNy = 19;
                            XmNborderWidth = 1;
                            };
                        controls
                            {
                            XmPushButton xdbank_print;
                            XmPushButton navcprx;
                            };
                        };
                    };
                };
            XmPushButton xdbank_help_button;
            };
        };
    physicsbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Physics Window");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNaccelerator = 
            "Ctrl<Key>P";
            XmNacceleratorText = 
            compound_string("^P");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphys(0);
                cphysics(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    physics_bull: XmFormDialog 
        {
        arguments
            {
            XmNx = 48;
            XmNy = 170;
            XmNwidth = 708;
            XmNheight = 889;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Physics");
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            XmNdefaultButton = XmPushButton rephys;
            };
        controls
            {
            XmScrolledWindow physics_scroll;
            XmText anglelab;
            XmText vertlab;
            XmRowColumn VUITaaaab;
            XmRowColumn VUITaaabn;
            XmRowColumn VUITaaaag;
            XmPushButton rephys;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 90;
                    XmNy = 30;
                    XmNlabelString = 
                    compound_string("Physics Objects Found:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNtopOffset = 96;
                    XmNleftAttachment = XmATTACH_WIDGET;
                    XmNleftWidget = XmPushButton rephys;
                    XmNleftOffset = 6;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(36);
                };
            };
        };
    nomorep: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 5;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                unmanphys(0);
                umpmc(0);
                unmandisp(0);
                cphysics(24);
                cphysics(26);
                };
            };
        };
    physics_scroll: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 142;
            XmNwidth = 615;
            XmNheight = 384;
            XmNborderWidth = 1;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 20;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = 5;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 200;
            XmNtopWidget = XmPushButton rephys;
            };
        controls
            {
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(37);
                };
            };
        };
    massbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 13;
            XmNlabelString = 
            compound_string("ADD 4-vectors");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(1);
                };
            };
        };
    jet5butt: XmPushButton 
        {
        arguments
            {
            XmNx = 36;
            XmNy = 22;
            XmNlabelString = 
            compound_string("Cone .5");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                jetsel(1);
                };
            };
        };
    jet3butt: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Cone .3");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                jetsel(0);
                };
            };
        };
    jet7butt: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 37;
            XmNlabelString = 
            compound_string("Cone .7");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                jetsel(2);
                };
            };
        };
    jetnnbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 40;
            XmNy = 82;
            XmNlabelString = 
            compound_string("NN");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                jetsel(3);
                };
            };
        };
    seljlab: XmLabel 
        {
        arguments
            {
            XmNx = 21;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Jet Algorithm:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNheight = 14;
            };
        };
    dotbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 57;
            XmNlabelString = 
            compound_string("Calculate Angles");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(2);
                };
            };
        };
    anglelab: XmText 
        {
        arguments
            {
            XmNx = 290;
            XmNy = 84;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 0;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmText vertlab;
            XmNtopOffset = -4;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 290;
            XmNresizeWidth = true;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(38);
                };
            };
        };
    dispbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Event Display");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mandisp(0);
                cphysics(27);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    disp_bull: XmFormDialog 
        {
        arguments
            {
            XmNx = 708;
            XmNy = 17;
            XmNwidth = 488;
            XmNheight = 815;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNautoUnmanage = false;
            XmNdialogTitle = 
            compound_string("Event Display");
            XmNdefaultPosition = false;
            };
        controls
            {
            XmDrawingArea drawitxy;
            XmDrawingArea drawityz;
            XmLabel VUITaaaan;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 20;
                    XmNy = 463;
                    XmNlabelString = 
                    compound_string("3-D   (P weighting):");
                    XmNbottomAttachment = XmATTACH_WIDGET;
                    XmNbottomWidget = XmDrawingArea drawityz;
                    XmNbottomOffset = 2;
                    XmNleftAttachment = XmATTACH_FORM;
                    XmNleftOffset = 20;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 20;
                    XmNy = 238;
                    XmNlabelString = 
                    compound_string("LEGO:");
                    XmNleftAttachment = XmATTACH_FORM;
                    XmNleftOffset = 20;
                    XmNbottomAttachment = XmATTACH_WIDGET;
                    XmNbottomOffset = 2;
                    XmNbottomWidget = XmDrawingArea drawitlego;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmDrawingArea drawitlego;
            XmRowColumn disprc;
            XmRowColumn VUITaaaal;
            };
        };
    drawitxy: XmDrawingArea 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNwidth = 200;
            XmNheight = 180;
            XmNx = 20;
            XmNy = 37;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 20;
            XmNrightAttachment = XmATTACH_NONE;
            XmNrightOffset = 266;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel VUITaaaan;
            XmNtopOffset = 2;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(39);
                };
            XmNexposeCallback = procedures
                {
                cphysics(9);
                };
            };
        };
    retdisp: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 7;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                unmandisp(0);
                cphysics(26);
                };
            };
        };
    drawityz: XmDrawingArea 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNwidth = 440;
            XmNheight = 179;
            XmNx = 20;
            XmNy = 542;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 20;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomOffset = 11;
            XmNrightAttachment = XmATTACH_NONE;
            XmNrightOffset = 26;
            XmNbottomWidget = XmRowColumn disprc;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(40);
                };
            XmNexposeCallback = procedures
                {
                cphysics(7);
                };
            };
        };
    delbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 39;
            XmNy = 17;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(4);
                };
            };
        };
    pnut1: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 3;
            XmNlabelString = 
            compound_string("(1)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                jetsel(4);
                };
            };
        };
    pnut2: XmPushButton 
        {
        arguments
            {
            XmNx = 34;
            XmNy = 7;
            XmNlabelString = 
            compound_string("(2)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                jetsel(5);
                };
            };
        };
    pnut3: XmPushButton 
        {
        arguments
            {
            XmNx = 21;
            XmNy = 20;
            XmNlabelString = 
            compound_string("(3)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                jetsel(6);
                };
            };
        };
    selrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 121;
            XmNy = 50;
            XmNborderWidth = 1;
            XmNwidth = 29;
            XmNheight = 25;
            XmNnumColumns = 2;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_COLUMN;
            };
        controls
            {
            XmToggleButton toget;
            XmToggleButton togeta;
            XmToggleButton togphi;
            XmToggleButton togm;
            XmToggleButton togmt;
            XmToggleButton togemf;
            XmToggleButton togrjet;
            XmToggleButton toge;
            XmToggleButton togpx;
            XmToggleButton Py;
            XmToggleButton togpz;
            XmToggleButton sfbutt;
            XmToggleButton togpt;
            XmToggleButton togtheta;
            };
        };
    toget: XmToggleButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Et");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(0);
                };
            };
        };
    togeta: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Eta");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(1);
                };
            };
        };
    togphi: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Phi");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(2);
                };
            };
        };
    togemf: XmToggleButton 
        {
        arguments
            {
            XmNx = 45;
            XmNy = 31;
            XmNlabelString = 
            compound_string("Emf");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = false;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(3);
                };
            };
        };
    togrjet: XmToggleButton 
        {
        arguments
            {
            XmNx = 19;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Rjet");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = false;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(4);
                };
            };
        };
    togm: XmToggleButton 
        {
        arguments
            {
            XmNx = 113;
            XmNy = 31;
            XmNlabelString = 
            compound_string("Mass");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(5);
                };
            };
        };
    togmt: XmToggleButton 
        {
        arguments
            {
            XmNx = 89;
            XmNy = 23;
            XmNlabelString = 
            compound_string("Mt");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(6);
                };
            };
        };
    togtheta: XmToggleButton 
        {
        arguments
            {
            XmNx = 164;
            XmNy = 26;
            XmNlabelString = 
            compound_string("Theta");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(7);
                };
            };
        };
    toge: XmToggleButton 
        {
        arguments
            {
            XmNx = 112;
            XmNy = 27;
            XmNlabelString = 
            compound_string("E");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(8);
                };
            };
        };
    togpx: XmToggleButton 
        {
        arguments
            {
            XmNx = 226;
            XmNy = 27;
            XmNlabelString = 
            compound_string("Px");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(9);
                };
            };
        };
    Py: XmToggleButton 
        {
        arguments
            {
            XmNx = 212;
            XmNy = 22;
            XmNlabelString = 
            compound_string("Py");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(10);
                };
            };
        };
    togpz: XmToggleButton 
        {
        arguments
            {
            XmNx = 276;
            XmNy = 28;
            XmNlabelString = 
            compound_string("Pz");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(11);
                };
            };
        };
    rephys: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 5;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = 13;
            XmNtopWidget = XmRowColumn VUITaaaag;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(0);
                };
            };
        };
    crc: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNwidth = 141;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 27;
                    XmNy = 130;
                    XmNlabelString = 
                    compound_string("Controls");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmPushButton dispbutt;
            XmPushButton nextevbutt;
            XmPushButton printphys;
            XmPushButton mcbutt;
            };
        };
    nextevbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 21;
            XmNlabelString = 
            compound_string("Next Event");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                cphysics(0);
                cphysics(18);
                cphysics(7);
                cphysics(8);
                cphysics(9);
                };
            };
        };
    selrc2: XmRowColumn 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 5;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 8;
                    XmNy = 30;
                    XmNlabelString = 
                    compound_string("From Selections...");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmPushButton massbutt;
            XmPushButton delbutt;
            XmPushButton dotbutt;
            XmPushButton scalebutt;
            XmPushButton wmass;
            };
        };
    vertlab: XmText 
        {
        arguments
            {
            XmNx = 290;
            XmNy = 105;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 58;
            XmNshadowThickness = 0;
            XmNvalue = 
            "Primary Vertices:";
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 290;
            XmNresizeWidth = true;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmRowColumn VUITaaaab;
            XmNrightOffset = 28;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(42);
                };
            };
        };
    drawitlego: XmDrawingArea 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNwidth = 440;
            XmNheight = 180;
            XmNx = 20;
            XmNy = 265;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 20;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = 46;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 26;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomOffset = 43;
            XmNbottomWidget = XmDrawingArea drawityz;
            XmNtopWidget = XmDrawingArea drawitxy;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(43);
                };
            XmNexposeCallback = procedures
                {
                cphysics(8);
                };
            };
        };
    phiup: XmArrowButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 5;
            XmNwidth = 25;
            XmNheight = 25;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                rotatephi(2);
                };
            XmNdisarmCallback = procedures
                {
                rotatephi(2);
                };
            };
        };
    phidown: XmArrowButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 2;
            XmNwidth = 25;
            XmNheight = 25;
            XmNarrowDirection = XmARROW_DOWN;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                rotatephi(-2);
                };
            XmNdisarmCallback = procedures
                {
                rotatephi(-2);
                };
            };
        };
    phi0lab: XmLabel 
        {
        arguments
            {
            XmNx = 32;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Z axis (by 0)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(44);
                };
            };
        };
    nextnav: XmPushButton 
        {
        arguments
            {
            XmNx = 93;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Next Event");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                d0util_proc(0);
                };
            };
        };
    togpt: XmToggleButton 
        {
        arguments
            {
            XmNx = 230;
            XmNy = 28;
            XmNlabelString = 
            compound_string("Pt");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 2;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(12);
                };
            };
        };
    refdis: XmPushButton 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(9);
                cphysics(8);
                cphysics(7);
                };
            };
        };
    helpphys: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 6;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphyshelp(0);
                allinfo(0);
                };
            };
        };
    helpdisp: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 30;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphyshelp(0);
                allinfo(1);
                };
            };
        };
    disprc: XmRowColumn 
        {
        arguments
            {
            XmNx = 193;
            XmNy = 734;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_COLUMN;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 28;
            };
        controls
            {
            XmPushButton refdis;
            XmPushButton helpdisp;
            XmPushButton retdisp;
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    physicshelp: XmFormDialog 
        {
        arguments
            {
            XmNx = 660;
            XmNy = 26;
            XmNwidth = 569;
            XmNheight = 346;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Physics Help");
            };
        controls
            {
            XmScrolledWindow helpscroll;
            XmPushButton nomorehelp;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(48);
                };
            };
        };
    helpscroll: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 13;
            XmNwidth = 433;
            XmNheight = 271;
            XmNborderWidth = 1;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 60;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 13;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 13;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 35;
            };
        controls
            {
            XmText phys_help_text;
            };
        };
    phys_help_text: XmText 
        {
        arguments
            {
            XmNheight = 1000;
            XmNcolumns = 120;
            XmNfontList = font_table(font('FIXED'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(45);
                };
            };
        };
    nomorehelp: XmPushButton 
        {
        arguments
            {
            XmNx = 382;
            XmNy = 299;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 14;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 35;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umphyshelp(0);
                };
            };
        };
    rotlab: XmLabel 
        {
        arguments
            {
            XmNx = 0;
            XmNy = -1;
            XmNlabelString = 
            compound_string("Euler rotation:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            };
        };
    thetaup: XmArrowButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 6;
            XmNwidth = 25;
            XmNheight = 25;
            };
        callbacks
            {
            XmNdisarmCallback = procedures
                {
                rotatetheta(2);
                };
            XmNarmCallback = procedures
                {
                rotatetheta(2);
                };
            };
        };
    thetadown: XmArrowButton 
        {
        arguments
            {
            XmNx = 34;
            XmNy = 4;
            XmNwidth = 25;
            XmNheight = 25;
            XmNarrowDirection = XmARROW_DOWN;
            };
        callbacks
            {
            XmNdisarmCallback = procedures
                {
                rotatetheta(-2);
                };
            XmNarmCallback = procedures
                {
                rotatetheta(-2);
                };
            };
        };
    theta0lab: XmLabel 
        {
        arguments
            {
            XmNx = 21;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Y\' Axis (by 0)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(46);
                };
            };
        };
    zerophi: XmPushButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(13);
                };
            };
        };
    zerotheta: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(12);
                };
            };
        };
    psi0lab: XmLabel 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Z\' Axis (by 0)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(47);
                };
            };
        };
    zeropsi: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(14);
                };
            };
        };
    psiup: XmArrowButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNwidth = 25;
            XmNheight = 25;
            };
        callbacks
            {
            XmNdisarmCallback = procedures
                {
                rotatepsi(2);
                };
            XmNarmCallback = procedures
                {
                rotatepsi(2);
                };
            };
        };
    psidown: XmArrowButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 5;
            XmNwidth = 25;
            XmNheight = 25;
            XmNarrowDirection = XmARROW_DOWN;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                rotatepsi(-2);
                };
            XmNdisarmCallback = procedures
                {
                rotatepsi(-2);
                };
            };
        };
    mccorr: XmToggleButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 6;
            XmNlabelString = 
            compound_string("JET_ET_MCCORR (MC)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(1);
                };
            };
        };
    ecorrrc: XmRadioBox 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 10;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            };
        controls
            {
            XmToggleButton mccorr;
            XmToggleButton jetcal;
            XmToggleButton ecortogn;
            };
        };
    printphys: XmPushButton 
        {
        arguments
            {
            XmNx = 40;
            XmNy = 33;
            XmNlabelString = 
            compound_string("Print List");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(17);
                };
            };
        };
    mcbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 37;
            XmNy = 62;
            XmNlabelString = 
            compound_string("Look at ISAJ/Q");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manpmc(0);
                cphysics(25);
                cphysics(18);
                };
            };
        };
    help_output: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 87;
            XmNlabelString = 
            compound_string("Files (output)");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(3);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    output_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 49;
            XmNy = 316;
            XmNwidth = 542;
            XmNheight = 300;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Output (Files) Window");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            };
        controls
            {
            XmTextField outtext;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 17;
                    XmNy = 200;
                    XmNlabelString = 
                    compound_string("Enter filename below:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 21;
                    XmNy = 18;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = -1;
                            XmNy = 1;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmPushButton nomoout;
                            XmRadioBox outbrowse;
                            };
                        };
                    XmRowColumn rcoutt;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 408;
                    XmNy = 30;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel ocount;
                    XmPushButton creset;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(137);
                };
            };
        };
    outtext: XmTextField 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 235;
            XmNheight = 45;
            XmNcolumns = 72;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-120-*-*-*-*-ISO8859-1'));
            XmNwidth = 518;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(49);
                };
            XmNactivateCallback = procedures
                {
                out_event(2);
                };
            };
        };
    outbrowse: XmRadioBox 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNborderWidth = 2;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            };
        controls
            {
            XmToggleButton oopenb;
            XmToggleButton oclosb;
            };
        };
    oopenb: XmToggleButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Open");
            XmNwidth = 91;
            XmNshadowThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                out_event(2);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(91);
                };
            };
        };
    oclosb: XmToggleButton 
        {
        arguments
            {
            XmNx = 43;
            XmNy = 13;
            XmNlabelString = 
            compound_string("Close");
            XmNshadowThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                out_event(3);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(92);
                };
            };
        };
    singlebutt: XmPushButton 
        {
        arguments
            {
            XmNx = 28;
            XmNy = 121;
            XmNlabelString = 
            compound_string("Write This Event");
            XmNalignment = XmALIGNMENT_CENTER;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(4);
                };
            };
        };
    allbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 19;
            XmNlabelString = 
            compound_string("All Events");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(5);
                };
            };
        };
    listbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 23;
            XmNy = 29;
            XmNlabelString = 
            compound_string("From List...");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(9);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    list_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 435;
            XmNy = 248;
            XmNwidth = 423;
            XmNheight = 230;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            XmNdialogTitle = 
            compound_string("Bank List");
            };
        controls
            {
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 260;
                    XmNy = 188;
                    XmNlabelString = 
                    compound_string("Cancel");
                    XmNshadowThickness = 4;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umlist(0);
                        out_event(7);
                        };
                    };
                };
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 31;
                    XmNy = 188;
                    XmNlabelString = 
                    compound_string("OK");
                    XmNshadowThickness = 4;
                    XmNwidth = 54;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umlist(0);
                        out_event(6);
                        };
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 21;
                    XmNy = 19;
                    XmNlabelString = 
                    compound_string("Enter list of banks in the format:  ",separate=true) &
                        compound_string("bnk1/bnk2/bnk3/");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText 
                {
                arguments
                    {
                    XmNx = 21;
                    XmNy = 59;
                    XmNwidth = 307;
                    XmNheight = 120;
                    XmNfontList = font_table(font('FIXED'));
                    XmNeditMode = XmMULTI_LINE_EDIT;
                    };
                callbacks
                    {
                    MrmNcreateCallback = procedures
                        {
                        save_text_tag(50);
                        };
                    };
                };
            XmRadioBox 
                {
                arguments
                    {
                    XmNx = 335;
                    XmNy = 85;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    };
                controls
                    {
                    XmToggleButton keeptog;
                    XmToggleButton droptog;
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 338;
                    XmNy = 41;
                    XmNlabelString = 
                    compound_string("Keep or ",separate=true) &
                        compound_string("Drop?");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            };
        callbacks
            {
            };
        };
    ftree: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Full");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                zeblst_proc(2);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    em_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 528;
            XmNy = 44;
            XmNwidth = 640;
            XmNheight = 680;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("PELC/PPHO Candidates");
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            XmNdefaultButton = XmPushButton repelc;
            };
        controls
            {
            XmDrawingArea drawemlong;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 250;
                    XmNy = 640;
                    XmNlabelString = 
                    compound_string("EM1");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 312;
                    XmNy = 640;
                    XmNlabelString = 
                    compound_string("EM2");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 374;
                    XmNy = 640;
                    XmNlabelString = 
                    compound_string("EM3");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 436;
                    XmNy = 640;
                    XmNlabelString = 
                    compound_string("EM4");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 498;
                    XmNy = 640;
                    XmNlabelString = 
                    compound_string("FH1");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 225;
                    XmNy = 402;
                    XmNlabelString = 
                    compound_string("Fractional Longitudinal Development:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 17;
                    XmNy = 9;
                    XmNlabelString = 
                    compound_string("PELC/PPHO Quantities:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 460;
                    XmNy = 22;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton repelc;
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 8;
                            XmNy = 3;
                            XmNlabelString = 
                            compound_string("DISMISS");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                            XmNshadowThickness = 4;
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                umem(0);
                                };
                            };
                        };
                    };
                };
            XmScrolledWindow 
                {
                arguments
                    {
                    XmNx = 9;
                    XmNy = 42;
                    XmNwidth = 182;
                    XmNheight = 619;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmText emlist;
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 207;
                    XmNy = 65;
                    XmNlabelString = 
                    compound_string("CLEANEM Summary:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmScrolledWindow 
                {
                arguments
                    {
                    XmNx = 207;
                    XmNy = 91;
                    XmNwidth = 414;
                    XmNheight = 302;
                    XmNborderWidth = 1;
                    XmNscrollBarDisplayPolicy = XmAS_NEEDED;
                    XmNscrollingPolicy = XmAUTOMATIC;
                    };
                controls
                    {
                    XmText cleanemtext;
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 226;
                    XmNy = 16;
                    XmNlabelString = 
                    compound_string("Please SELECT object in Main",separate=true) &
                        compound_string("List to make active here");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    jet_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 557;
            XmNy = 58;
            XmNwidth = 580;
            XmNheight = 596;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("JETS Candidates");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 34;
                    XmNy = 17;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel jclab;
                    XmRadioBox ecorrrc;
                    XmLabel qcdjlab;
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 145;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmOptionMenu 
                                {
                                arguments
                                    {
                                    XmNx = 15;
                                    XmNy = 8;
                                    XmNborderWidth = 0;
                                    XmNlabelString = 
                                    compound_string("Correct:");
                                    XmNmenuHistory = XmPushButton medcor;
                                    };
                                controls
                                    {
                                    XmPulldownMenu 
                                        {
                                        arguments
                                            {
                                            XmNx = 137;
                                            XmNy = 21;
                                            XmNborderWidth = 1;
                                            };
                                        controls
                                            {
                                            XmPushButton lowcor;
                                            XmPushButton medcor;
                                            XmPushButton highcor;
                                            };
                                        };
                                    };
                                };
                            XmToggleButton conecor;
                            XmToggleButton UnderLyingEv;
                            XmToggleButton zspcor;
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 12;
                            XmNy = 287;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmLabel seljlab;
                    XmOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 72;
                            XmNy = 261;
                            XmNborderWidth = 0;
                            XmNlabelString = 
                            compound_string("Select:");
                            XmNmenuHistory = XmPushButton jet5butt;
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 30;
                                    XmNy = 3;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton jet3butt;
                                    XmPushButton jet5butt;
                                    XmPushButton jet7butt;
                                    XmPushButton ktbutt;
                                    XmPushButton jetnnbutt;
                                    };
                                };
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 32;
                            XmNy = 301;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 19;
                            XmNy = 126;
                            XmNlabelString = 
                            compound_string("Remove PELC/PPHO",separate=true) &
                                compound_string("Candidates:");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmRadioBox jnepy;
                    };
                };
            XmScrolledWindow 
                {
                arguments
                    {
                    XmNx = 291;
                    XmNy = 76;
                    XmNwidth = 255;
                    XmNheight = 475;
                    XmNborderWidth = 1;
                    XmNscrollBarDisplayPolicy = XmAS_NEEDED;
                    XmNscrollingPolicy = XmAUTOMATIC;
                    };
                controls
                    {
                    XmText jettext;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 376;
                    XmNy = 16;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton refreshjets;
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 6;
                            XmNy = 4;
                            XmNlabelString = 
                            compound_string("DISMISS");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                            XmNshadowThickness = 4;
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                umjetb(0);
                                };
                            };
                        };
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 37;
                    XmNy = 524;
                    XmNlabelString = 
                    compound_string("Please SELECT object in Main",separate=true) &
                        compound_string("List to make active here");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            };
        };
    ecortogn: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Disabled");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(0);
                };
            };
        };
    jclab: XmLabel 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 0;
            XmNlabelString = 
            compound_string("Jet Et Corrections:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    pnut_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 539;
            XmNy = 33;
            XmNwidth = 297;
            XmNheight = 442;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("PNUT Candidates");
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 36;
                    XmNy = 24;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 0;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNlabelString = 
                            compound_string("Use PNUT");
                            XmNmenuHistory = XmPushButton pnut2;
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 50;
                                    XmNy = 12;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton pnut1;
                                    XmPushButton pnut2;
                                    XmPushButton pnut3;
                                    XmPushButton pnut4;
                                    XmPushButton pnut5;
                                    };
                                };
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 123;
                            XmNlabelString = 
                            compound_string("Additional PNUT Quantities:");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmText pnuttext;
                    };
                };
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 184;
                    XmNy = 378;
                    XmNlabelString = 
                    compound_string("DISMISS");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    XmNshadowThickness = 4;
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umpb(0);
                        };
                    };
                };
            };
        };
    pnutbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 49;
            XmNlabelString = 
            compound_string("MET");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manpb(0);
                cphysics(15);
                };
            };
        };
    embutt: XmPushButton 
        {
        arguments
            {
            XmNx = 41;
            XmNy = 16;
            XmNlabelString = 
            compound_string("ELE");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manem(0);
                };
            };
        };
    jtbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 9;
            XmNlabelString = 
            compound_string("JET");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manjetb(0);
                cphysics(32);
                };
            };
        };
    pmbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 100;
            XmNlabelString = 
            compound_string("MUON");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manpmuo(0);
                cphysics(16);
                };
            };
        };
    jnepy: XmRadioBox 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 123;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            };
        controls
            {
            XmToggleButton VUITaaaae;
            XmToggleButton VUITaaaai;
            };
        };
    VUITaaaae: XmToggleButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Enabled");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(3);
                };
            };
        };
    VUITaaaai: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Disabled");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(2);
                };
            };
        };
    emlist: XmText 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 4;
            XmNwidth = 183;
            XmNheight = 636;
            XmNcolumns = 1;
            XmNfontList = font_table(font('FIXED'));
            XmNeditMode = XmMULTI_LINE_EDIT;
            XmNpendingDelete = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(51);
                };
            };
        };
    drawemlong: XmDrawingArea 
        {
        arguments
            {
            XmNx = 225;
            XmNy = 426;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNwidth = 330;
            XmNheight = 206;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(52);
                };
            XmNexposeCallback = procedures
                {
                cphysics(6);
                };
            };
        };
    scalebutt: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 66;
            XmNlabelString = 
            compound_string("Apply Scale Factor");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(5);
                };
            };
        };
    pscale: XmScale 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 5;
            XmNborderWidth = 1;
            XmNwidth = 150;
            XmNdecimalPoints = 2;
            XmNmaximum = 200;
            XmNminimum = 0;
            XmNshowValue = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNvalue = 100;
            XmNscaleMultiple = 1;
            XmNtitleString = 
            compound_string("Energy Scale");
            XmNorientation = XmHORIZONTAL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(53);
                };
            };
        };
    sfbutt: XmToggleButton 
        {
        arguments
            {
            XmNx = 333;
            XmNy = 27;
            XmNlabelString = 
            compound_string("Scale");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(13);
                };
            };
        };
    thresh: XmScale 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNborderWidth = 1;
            XmNwidth = 150;
            XmNdecimalPoints = 0;
            XmNmaximum = 200;
            XmNminimum = 0;
            XmNshowValue = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNvalue = 0;
            XmNscaleMultiple = 1;
            XmNtitleString = 
            compound_string("Et Threshold");
            XmNorientation = XmHORIZONTAL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(54);
                };
            XmNvalueChangedCallback = procedures
                {
                cphysics(3);
                };
            };
        };
    wmass: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 93;
            XmNlabelString = 
            compound_string("W Mass Constrain");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(10);
                };
            };
        };
    scup: XmArrowButton 
        {
        arguments
            {
            XmNheight = 23;
            XmNx = 3;
            XmNy = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                treesize(1);
                };
            };
        };
    scdown: XmArrowButton 
        {
        arguments
            {
            XmNarrowDirection = XmARROW_DOWN;
            XmNy = 2;
            XmNheight = 23;
            XmNx = 1;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                treesize(-1);
                };
            };
        };
    scuplab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Bigger");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 0;
            XmNy = 0;
            };
        };
    keeptog: XmToggleButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Keep");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                out_event(10);
                };
            };
        };
    droptog: XmToggleButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Drop");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                out_event(11);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    pmuo_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 574;
            XmNy = 29;
            XmNwidth = 339;
            XmNheight = 694;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("PMUO Candidates");
            XmNautoUnmanage = false;
            XmNdefaultButton = XmPushButton repmuo;
            XmNdefaultPosition = false;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 21;
                    XmNy = 13;
                    XmNlabelString = 
                    compound_string("Additional PMUO Quantities:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText pmuolist;
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 217;
                    XmNy = 556;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmPushButton repmuo;
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 4;
                            XmNlabelString = 
                            compound_string("DISMISS");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                            XmNshadowThickness = 4;
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                umpmuo(0);
                                };
                            };
                        };
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 75;
                    XmNy = 645;
                    XmNlabelString = 
                    compound_string("Please SELECT object in Main",separate=true) &
                        compound_string("List to make active here");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            };
        };
    pmuolist: XmText 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 42;
            XmNwidth = 183;
            XmNheight = 593;
            XmNcolumns = 1;
            XmNfontList = font_table(font('FIXED'));
            XmNeditMode = XmMULTI_LINE_EDIT;
            XmNpendingDelete = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(56);
                };
            };
        };
    char_button: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 97;
            XmNlabelString = 
            compound_string("Char");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                format_proc(4);
                };
            };
        };
    jetcal: XmToggleButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 34;
            XmNlabelString = 
            compound_string("QCD_JET_CORR(DATA)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(4);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    colbull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 48;
            XmNy = 28;
            XmNwidth = 618;
            XmNheight = 128;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Columns to Display");
            XmNdefaultPosition = false;
            };
        controls
            {
            XmRowColumn selrc;
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 528;
                    XmNy = 13;
                    XmNlabelString = 
                    compound_string("Dismiss");
                    XmNshadowThickness = 4;
                    XmNfontList = font_table(font('-*-HELVETICA-*-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umcol(0);
                        };
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 19;
                    XmNy = 12;
                    XmNlabelString = 
                    compound_string("Display",separate=true) &
                        compound_string("Angles in:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRadioBox radiodeg;
            };
        };
    radiodeg: XmRadioBox 
        {
        arguments
            {
            XmNx = 19;
            XmNy = 50;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNisHomogeneous = false;
            };
        controls
            {
            XmToggleButton dorad;
            XmToggleButton dodeg;
            };
        };
    dorad: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Radians");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                cphysics(20);
                };
            };
        };
    dodeg: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Degrees");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                cphysics(19);
                };
            };
        };
    docol: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Select Columns");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mancol(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    querybull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 64;
            XmNy = 50;
            XmNwidth = 740;
            XmNheight = 568;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNautoUnmanage = false;
            XmNdialogTitle = 
            compound_string("Histogram Editor");
            XmNdefaultPosition = false;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 34;
                    XmNy = 35;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRowColumn rcaaa;
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = -1;
                            XmNy = 0;
                            XmNborderWidth = 1;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmRowColumn rcaab;
                            XmRowColumn rcfff;
                            XmRowColumn xrc;
                            XmRowColumn 
                                {
                                arguments
                                    {
                                    XmNx = 0;
                                    XmNy = 0;
                                    XmNborderWidth = 0;
                                    XmNwidth = 25;
                                    XmNheight = 25;
                                    };
                                controls
                                    {
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    offset: XmScale 
        {
        arguments
            {
            XmNx = 27;
            XmNy = 42;
            XmNborderWidth = 0;
            XmNheight = 106;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshowValue = true;
            XmNscaleMultiple = 1;
            XmNminimum = -10;
            XmNmaximum = 100;
            XmNvalue = 0;
            XmNorientation = XmHORIZONTAL;
            XmNtitleString = 
            compound_string("At Offset:");
            };
        controls
            {
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(59);
                };
            };
        };
    imareal: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Real");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(10);
                };
            };
        };
    eq: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 29;
            XmNlabelString = 
            compound_string("=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(22);
                };
            };
        };
    define: XmText 
        {
        arguments
            {
            XmNx = 29;
            XmNy = 12;
            XmNheight = 45;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNwidth = 123;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(57);
                };
            };
        };
    thevalue: XmText 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 5;
            XmNheight = 45;
            XmNcolumns = 10;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(58);
                };
            };
        };
    imaint: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 20;
            XmNlabelString = 
            compound_string("Integer");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(11);
                };
            };
        };
    imahex: XmPushButton 
        {
        arguments
            {
            XmNx = 53;
            XmNy = 36;
            XmNlabelString = 
            compound_string("Hex");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(12);
                };
            };
        };
    imatf: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 35;
            XmNlabelString = 
            compound_string("Boolean");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(13);
                };
            };
        };
    imachar: XmPushButton 
        {
        arguments
            {
            XmNx = 21;
            XmNy = 52;
            XmNlabelString = 
            compound_string("Char*4");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(14);
                };
            };
        };
    lt: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 7;
            XmNlabelString = 
            compound_string("<");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(20);
                };
            };
        };
    le: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 11;
            XmNlabelString = 
            compound_string("<=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(21);
                };
            };
        };
    gt: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 71;
            XmNlabelString = 
            compound_string(">");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(24);
                };
            };
        };
    ge: XmPushButton 
        {
        arguments
            {
            XmNx = 26;
            XmNy = 111;
            XmNlabelString = 
            compound_string(">=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(23);
                };
            };
        };
    tr: XmPushButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 128;
            XmNlabelString = 
            compound_string("True");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(25);
                };
            };
        };
    fa: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 124;
            XmNlabelString = 
            compound_string("False");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(26);
                };
            };
        };
    okq: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umqsub(0);
                };
            };
        };
    implement: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Add");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(0);
                };
            };
        };
    doqr: XmPushButton 
        {
        arguments
            {
            XmNx = 34;
            XmNy = 24;
            XmNlabelString = 
            compound_string("Histogram/Query Editor");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            XmNaccelerator = 
            "Ctrl<Key>H";
            XmNacceleratorText = 
            compound_string("^H");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manq(0);
                };
            };
        };
    bankopt: XmOptionMenu 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 7;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNlabelString = 
            compound_string("Using Bank:");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 152;
                    XmNy = 165;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton pelcopt;
                    XmPushButton pphoopt;
                    XmPushButton hmteopt;
                    XmPushButton jetsopt;
                    XmPushButton pnutopt;
                    XmPushButton pmuoopt;
                    XmPushButton ptauopt;
                    XmPushButton vertopt;
                    XmPushButton headopt;
                    XmPushButton xxxxopt;
                    };
                };
            };
        };
    pelcopt: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 5;
            XmNlabelString = 
            compound_string("PELC");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(0);
                };
            };
        };
    pphoopt: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 10;
            XmNlabelString = 
            compound_string("PPHO");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(1);
                };
            };
        };
    jetsopt: XmPushButton 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 35;
            XmNlabelString = 
            compound_string("JETS");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(2);
                };
            };
        };
    pnutopt: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 39;
            XmNlabelString = 
            compound_string("PNUT");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(3);
                };
            };
        };
    pmuoopt: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 13;
            XmNlabelString = 
            compound_string("PMUO");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(4);
                };
            };
        };
    vertopt: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 49;
            XmNlabelString = 
            compound_string("VERT");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(5);
                };
            };
        };
    dataopt: XmOptionMenu 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 16;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNlabelString = 
            compound_string("Data Type:");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 132;
                    XmNy = 15;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton imareal;
                    XmPushButton imaint;
                    XmPushButton imahex;
                    XmPushButton imatf;
                    XmPushButton imachar;
                    };
                };
            };
        };
    listobj: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 0;
            XmNwidth = 260;
            XmNheight = 245;
            XmNborderWidth = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            };
        controls
            {
            XmList req1list;
            };
        };
    req1list: XmList 
        {
        arguments
            {
            XmNwidth = 318;
            XmNheight = 500;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNvisibleItemCount = 100;
            XmNlistSizePolicy = XmCONSTANT;
            XmNy = -1;
            XmNselectionPolicy = XmMULTIPLE_SELECT;
            };
        callbacks
            {
            XmNdefaultActionCallback = procedures
                {
                doquery(10);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(60);
                };
            };
        };
    resetlist: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(1);
                };
            };
        };
    reqopt: XmOptionMenu 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 8;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNlabelString = 
            compound_string("Is:");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 182;
                    XmNy = 11;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton gt;
                    XmPushButton ge;
                    XmPushButton eq;
                    XmPushButton le;
                    XmPushButton lt;
                    XmPushButton ne;
                    XmPushButton tr;
                    XmPushButton fa;
                    };
                };
            };
        };
    reqscroll: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNwidth = 350;
            XmNheight = 245;
            XmNborderWidth = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            };
        controls
            {
            XmList reqlists;
            };
        };
    reqlists: XmList 
        {
        arguments
            {
            XmNwidth = 500;
            XmNheight = 500;
            XmNfontList = font_table(font('-*-TIMES-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNvisibleItemCount = 100;
            XmNlistSizePolicy = XmCONSTANT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(62);
                };
            };
        };
    resetreq: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(12);
                };
            };
        };
    deldef: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(2);
                };
            };
        };
    delreq: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(13);
                };
            };
        };
    savereq: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Save to...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(20);
                };
            };
        };
    readreq: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Read in...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(21);
                };
            };
        };
    impreq: XmToggleButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Implement");
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                doquery(30);
                };
            };
        };
    canreq: XmToggleButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Cancel");
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                doquery(31);
                };
            };
        };
    helpq: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 2;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                doquery(15);
                };
            };
        };
    headopt: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 147;
            XmNlabelString = 
            compound_string("HEAD");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(6);
                };
            };
        };
    addreq: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Add");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(11);
                };
            };
        };
    VUITaaabm: XmOptionMenu 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 8;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNlabelString = 
            compound_string("#");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 182;
                    XmNy = 11;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton isgt;
                    XmPushButton isge;
                    XmPushButton iseq;
                    XmPushButton isle;
                    XmPushButton islt;
                    XmPushButton isne;
                    XmPushButton istrue;
                    XmPushButton isfalse;
                    };
                };
            };
        };
    isgt: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 71;
            XmNlabelString = 
            compound_string(">");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(34);
                };
            };
        };
    isge: XmPushButton 
        {
        arguments
            {
            XmNx = 26;
            XmNy = 111;
            XmNlabelString = 
            compound_string(">=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(33);
                };
            };
        };
    iseq: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 29;
            XmNlabelString = 
            compound_string("=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(32);
                };
            };
        };
    isle: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 11;
            XmNlabelString = 
            compound_string("<=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(31);
                };
            };
        };
    islt: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 7;
            XmNlabelString = 
            compound_string("<");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(30);
                };
            };
        };
    istrue: XmPushButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 128;
            XmNlabelString = 
            compound_string("True");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(35);
                };
            };
        };
    isfalse: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 124;
            XmNlabelString = 
            compound_string("False");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(36);
                };
            };
        };
    reqvalue: XmText 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 5;
            XmNheight = 45;
            XmNcolumns = 10;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(63);
                };
            };
        };
    reqtext: XmText 
        {
        arguments
            {
            XmNx = 45;
            XmNy = 20;
            XmNheight = 40;
            XmNcolumns = 20;
            XmNfontList = font_table(font('-*-HELVETICA-*-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNvalue = 
            "None";
            XmNwidth = 322;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(61);
                };
            };
        };
    lookit: XmPushButton 
        {
        arguments
            {
            XmNx = 138;
            XmNy = 8;
            XmNlabelString = 
            compound_string("(.ZEB)");
            XmNshadowThickness = 1;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manzq(0);
                doquery(14);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    reqzeb: XmFormDialog 
        {
        arguments
            {
            XmNx = 494;
            XmNy = 285;
            XmNwidth = 484;
            XmNheight = 545;
            XmNborderWidth = 1;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("Bank.ZEB Window");
            XmNautoUnmanage = false;
            XmNdefaultButton = XmPushButton retzebq;
            };
        controls
            {
            XmScrolledWindow VUITaaaaq;
            XmPushButton retzebq;
            };
        };
    VUITaaaaq: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 25;
            XmNborderWidth = 1;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNy = 43;
            XmNheight = 258;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 0;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 0;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 2;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 70;
            };
        controls
            {
            XmText reqzebt;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(55);
                };
            };
        };
    reqzebt: XmText 
        {
        arguments
            {
            XmNheight = 1000;
            XmNcolumns = 132;
            XmNfontList = font_table(font('FIXED'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(64);
                };
            };
        };
    retzebq: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 36;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 1;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNleftOffset = 375;
            XmNtopOffset = 21;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umzq(0);
                };
            };
        };
    isne: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 115;
            XmNlabelString = 
            compound_string("!=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(37);
                };
            };
        };
    ne: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 114;
            XmNlabelString = 
            compound_string("!=");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(27);
                };
            };
        };
    positive: XmToggleButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 12;
            XmNlabelString = 
            compound_string("Postive");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(42);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(65);
                };
            };
        };
    negative: XmToggleButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Negative");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(43);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(66);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    qhelp: XmFormDialog 
        {
        arguments
            {
            XmNx = 301;
            XmNy = 13;
            XmNwidth = 678;
            XmNheight = 346;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("D0X Help");
            };
        controls
            {
            XmScrolledWindow VUITaaabc;
            XmPushButton VUITaaabd;
            };
        callbacks
            {
            };
        };
    VUITaaabc: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 13;
            XmNwidth = 433;
            XmNheight = 271;
            XmNborderWidth = 1;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 60;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 13;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 13;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 35;
            };
        controls
            {
            XmText VUITaaabb;
            };
        };
    VUITaaabb: XmText 
        {
        arguments
            {
            XmNheight = 1000;
            XmNcolumns = 120;
            XmNfontList = font_table(font('FIXED'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(67);
                };
            };
        };
    VUITaaabd: XmPushButton 
        {
        arguments
            {
            XmNx = 382;
            XmNy = 299;
            XmNlabelString = 
            compound_string("Dismiss");
            XmNshadowThickness = 4;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 14;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 35;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umqh(0);
                };
            };
        };
    doand: XmToggleButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 12;
            XmNlabelString = 
            compound_string("AND");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(40);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(68);
                };
            };
        };
    door: XmToggleButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 8;
            XmNlabelString = 
            compound_string("OR");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(41);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(69);
                };
            };
        };
    fquery: XmPushButton 
        {
        arguments
            {
            XmNx = 30;
            XmNy = 34;
            XmNlabelString = 
            compound_string("From Query");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(20);
                };
            };
        };
    reqstop: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Stop");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(44);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(82);
                };
            };
        };
    norstop: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Continue");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(45);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(83);
                };
            };
        };
    VUITaaabn: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftOffset = 13;
            XmNtopOffset = 550;
            XmNorientation = XmHORIZONTAL;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNy = 550;
            };
        controls
            {
            XmRowColumn selrc2;
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 541;
                    XmNy = 2;
                    XmNwidth = 10;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 56;
                            XmNy = 146;
                            XmNlabelString = 
                            compound_string("More on Objects...");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 6;
                            XmNy = 6;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNentryAlignment = XmALIGNMENT_CENTER;
                            XmNnumColumns = 2;
                            XmNorientation = XmVERTICAL;
                            XmNpacking = XmPACK_COLUMN;
                            };
                        controls
                            {
                            XmPushButton embutt;
                            XmPushButton pmbutt;
                            XmPushButton jtbutt;
                            XmPushButton gambutt;
                            XmPushButton ptaubutt;
                            XmPushButton pnutbutt;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNborderWidth = 0;
                            XmNorientation = XmHORIZONTAL;
                            XmNx = 0;
                            XmNy = 0;
                            };
                        controls
                            {
                            XmPushButton obenable;
                            };
                        };
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 372;
                    XmNy = 30;
                    XmNwidth = 10;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    };
                };
            XmRowColumn crc;
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 521;
                    XmNy = 1;
                    XmNwidth = 10;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNorientation = XmVERTICAL;
                    XmNx = 0;
                    XmNwidth = 65;
                    XmNy = 1;
                    };
                controls
                    {
                    XmScale pscale;
                    XmScale thresh;
                    };
                };
            };
        };
    rcdef: XmRowColumn 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 10;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 4;
                    XmNlabelString = 
                    compound_string("Define:");
                    };
                };
            XmText define;
            };
        };
    rcbuild: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 18;
                    XmNy = 52;
                    XmNlabelString = 
                    compound_string("Build Definition:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn rcdef;
            XmRowColumn rcobj;
            XmOptionMenu dataopt;
            XmScale offset;
            };
        };
    rcobj: XmRowColumn 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 44;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmOptionMenu bankopt;
            XmPushButton lookit;
            };
        };
    rcvalt: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmOptionMenu reqopt;
            XmText thevalue;
            };
        };
    rcreq: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmPushButton implement;
            XmPushButton deldef;
            XmPushButton resetlist;
            };
        };
    histon: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Create");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manhist(0);
                d0xhist(0);
                };
            };
        };
    histoff: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 30;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(1);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    bullhist: XmFormDialog 
        {
        arguments
            {
            XmNx = 526;
            XmNy = 90;
            XmNwidth = 461;
            XmNheight = 416;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Histogram Builder");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            XmNdefaultButton = XmPushButton acchist;
            XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
            };
        controls
            {
            XmRowColumn histobrc;
            XmRowColumn histbwhat;
            XmRowColumn hirc;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(79);
                };
            };
        };
    rethist: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 5;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umhist(0);
                };
            };
        };
    acchist: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNlabelString = 
            compound_string("Accept");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(3);
                umhist(0);
                };
            };
        };
    vhist: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 60;
            XmNlabelString = 
            compound_string("View");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manhform(0);
                d0xhist(50);
                d0xhist(2);
                };
            };
        };
    xhwhat: XmText 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 0;
            XmNheight = 45;
            XmNcolumns = 15;
            XmNwidth = 281;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNeditable = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(72);
                };
            };
        };
    xhtitle: XmText 
        {
        arguments
            {
            XmNx = 90;
            XmNy = 8;
            XmNheight = 25;
            XmNcolumns = 32;
            XmNeditable = false;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(74);
                };
            };
        };
    xhid: XmText 
        {
        arguments
            {
            XmNx = 90;
            XmNy = 8;
            XmNheight = 25;
            XmNcolumns = 29;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(73);
                };
            };
        };
    xhnbin: XmText 
        {
        arguments
            {
            XmNx = 90;
            XmNy = 8;
            XmNheight = 25;
            XmNcolumns = 29;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(75);
                };
            };
        };
    xhbinl: XmText 
        {
        arguments
            {
            XmNx = 90;
            XmNy = 8;
            XmNheight = 25;
            XmNcolumns = 26;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(76);
                };
            };
        };
    xhbinh: XmText 
        {
        arguments
            {
            XmNx = 90;
            XmNy = 8;
            XmNheight = 25;
            XmNcolumns = 25;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(77);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    histform: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 622;
            XmNy = 38;
            XmNwidth = 870;
            XmNheight = 529;
            XmNborderWidth = 1;
            XmNdialogTitle = 
            compound_string("D0X Query Histogram");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            XmNdefaultButton = XmPushButton hupd;
            XmNresizePolicy = XmRESIZE_NONE;
            };
        controls
            {
            XmDrawingArea hdraw;
            XmRowColumn historc;
            };
        };
    retfhist: XmPushButton 
        {
        arguments
            {
            XmNx = 34;
            XmNy = 7;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNwidth = 75;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umhform(0);
                };
            };
        };
    hdraw: XmDrawingArea 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNy = 20;
            XmNx = 20;
            XmNwidth = 560;
            XmNheight = 485;
            };
        controls
            {
            };
        callbacks
            {
            XmNexposeCallback = procedures
                {
                chdraw(0);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(80);
                };
            };
        };
    refh: XmPushButton 
        {
        arguments
            {
            XmNx = 92;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                chdraw(0);
                };
            };
        };
    hirc: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 25;
            XmNtopOffset = 16;
            XmNorientation = XmHORIZONTAL;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 22;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 6;
                    XmNy = 3;
                    XmNlabelString = 
                    compound_string("Histogram this:");
                    };
                };
            XmText xhwhat;
            };
        };
    histobrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 83;
            XmNborderWidth = 1;
            XmNwidth = 25;
            XmNheight = 25;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmRowColumn hirc;
            XmNtopOffset = 20;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 18;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 20;
            };
        controls
            {
            XmRowColumn hidrc;
            XmRowColumn htitrc;
            XmRowColumn hbinrc;
            XmRowColumn hed1rc;
            XmRowColumn hed2rc;
            XmRowColumn histbfrc;
            };
        };
    mhist: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 97;
            XmNlabelString = 
            compound_string("Modify");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manhist(0);
                d0xhist(4);
                };
            };
        };
    hsave: XmPushButton 
        {
        arguments
            {
            XmNx = 153;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Save All");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(5);
                };
            };
        };
    scdef: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNwidth = 391;
            XmNheight = 245;
            XmNborderWidth = 0;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            };
        controls
            {
            XmList deflist;
            };
        };
    deflist: XmList 
        {
        arguments
            {
            XmNwidth = 418;
            XmNheight = 501;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNvisibleItemCount = 100;
            XmNlistSizePolicy = XmCONSTANT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(81);
                };
            };
        };
    hcl: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 90;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(6);
                };
            };
        };
    pbad2: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 21;
            XmNlabelString = 
            compound_string("Add");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(5);
                };
            };
        };
    pbd2: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 27;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(6);
                };
            };
        };
    pbr2: XmPushButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                doquery(7);
                };
            };
        };
    rcaaa: XmRowColumn 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 4;
            XmNborderWidth = 1;
            XmNwidth = 25;
            XmNheight = 25;
            XmNnumColumns = 2;
            XmNorientation = XmVERTICAL;
            };
        controls
            {
            XmRowColumn rcbuild;
            XmScrolledWindow scdef;
            XmRowColumn rcreq;
            };
        };
    rcaab: XmRowColumn 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 4;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 20;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 6;
                    XmNy = 6;
                    XmNlabelString = 
                    compound_string("Histogram Controls:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 58;
                    XmNy = 14;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    XmNorientation = XmHORIZONTAL;
                    XmNadjustLast = false;
                    XmNnumColumns = 2;
                    XmNpacking = XmPACK_COLUMN;
                    };
                controls
                    {
                    XmPushButton histon;
                    XmPushButton histoff;
                    XmPushButton hcl;
                    XmPushButton mhist;
                    XmPushButton vhist;
                    XmPushButton vsuper;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 7;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 5;
                    };
                };
            };
        };
    rcbbb: XmRowColumn 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = false;
            };
        controls
            {
            XmRowColumn rcbbc;
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn rcbbe;
            };
        };
    rcbbc: XmRowColumn 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 4;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 7;
                    XmNy = 6;
                    XmNlabelString = 
                    compound_string("Requirements on Definitions:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn rcvalt;
            XmScrolledWindow listobj;
            XmRowColumn rcbbd;
            };
        };
    rcbbd: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmPushButton pbad2;
            XmPushButton pbd2;
            XmPushButton pbr2;
            };
        };
    rcbbe: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 9;
                    XmNy = 7;
                    XmNlabelString = 
                    compound_string("Requirements on Banks:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn rcbbf;
            XmScrolledWindow reqscroll;
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 72;
                    XmNy = 8;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton addreq;
                    XmPushButton delreq;
                    XmPushButton resetreq;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 17;
                            XmNy = 8;
                            XmNlabelString = 
                            compound_string("");
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 69;
                            XmNy = 9;
                            XmNlabelString = 
                            compound_string("");
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 102;
                            XmNy = 16;
                            XmNlabelString = 
                            compound_string("");
                            };
                        };
                    };
                };
            };
        };
    rcbbf: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmOptionMenu VUITaaabm;
            XmText reqvalue;
            };
        };
    radioq: XmRadioBox 
        {
        arguments
            {
            XmNx = 521;
            XmNy = 10;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = false;
            };
        controls
            {
            XmToggleButton impreq;
            XmToggleButton canreq;
            };
        };
    rcccc: XmRowColumn 
        {
        arguments
            {
            XmNx = -1;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmRadioBox radioq;
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 619;
                    XmNy = 13;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 2;
                    XmNy = 6;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 5;
                            XmNy = 6;
                            XmNlabelString = 
                            compound_string("Passes if:");
                            };
                        };
                    XmRadioBox 
                        {
                        arguments
                            {
                            XmNx = 15;
                            XmNy = 8;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNborderWidth = 0;
                            XmNisHomogeneous = false;
                            };
                        controls
                            {
                            XmToggleButton positive;
                            XmToggleButton negative;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = 2;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 2;
                            XmNlabelString = 
                            compound_string("Combine as:");
                            };
                        };
                    XmRadioBox 
                        {
                        arguments
                            {
                            XmNx = 16;
                            XmNy = 10;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNborderWidth = 0;
                            XmNisHomogeneous = false;
                            };
                        controls
                            {
                            XmToggleButton doand;
                            XmToggleButton door;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 1;
                            XmNlabelString = 
                            compound_string("If passes:");
                            };
                        };
                    XmRadioBox 
                        {
                        arguments
                            {
                            XmNx = 6;
                            XmNy = 7;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNborderWidth = 0;
                            XmNisHomogeneous = false;
                            };
                        controls
                            {
                            XmToggleButton reqstop;
                            XmToggleButton norstop;
                            };
                        };
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 580;
                    XmNy = 26;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNorientation = XmVERTICAL;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 393;
                    XmNy = 30;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmVERTICAL;
                    };
                controls
                    {
                    XmPushButton savereq;
                    XmPushButton readreq;
                    };
                };
            };
        };
    hdoerr: XmToggleButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Errors");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(60);
                chdraw(0);
                };
            };
        };
    hnoerr: XmToggleButton 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNlabelString = 
            compound_string("No Errors");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(61);
                chdraw(0);
                };
            };
        };
    hdolin: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Linear");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(64);
                chdraw(0);
                };
            };
        };
    hdolog: XmToggleButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Log");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(65);
                chdraw(0);
                };
            };
        };
    hdohist: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Histogram");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(62);
                chdraw(0);
                };
            };
        };
    hdopoints: XmToggleButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Points");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(63);
                chdraw(0);
                };
            };
        };
    VUITaaaax: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNy = 2;
            XmNheight = 71;
            XmNx = 4;
            };
        controls
            {
            XmRadioBox 
                {
                arguments
                    {
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    XmNx = 1;
                    XmNy = 3;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmToggleButton hdoerr;
                    XmToggleButton hnoerr;
                    };
                };
            XmRadioBox 
                {
                arguments
                    {
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    XmNx = 0;
                    XmNy = 1;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmToggleButton hdohist;
                    XmToggleButton hdopoints;
                    };
                };
            XmRadioBox 
                {
                arguments
                    {
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    XmNx = 0;
                    XmNy = 1;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmToggleButton hdolin;
                    XmToggleButton hdolog;
                    };
                };
            };
        };
    hupd: XmPushButton 
        {
        arguments
            {
            XmNx = 67;
            XmNy = 25;
            XmNlabelString = 
            compound_string("Update");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(2);
                };
            };
        };
    rcfff: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = -1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 20;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 6;
                    XmNy = 6;
                    XmNlabelString = 
                    compound_string("Tuple Controls:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 87;
                    XmNy = 12;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    XmNorientation = XmHORIZONTAL;
                    XmNnumColumns = 1;
                    XmNpacking = XmPACK_COLUMN;
                    };
                controls
                    {
                    XmPushButton VUITaaaaz;
                    XmPushButton VUITaaaba;
                    XmPushButton VUITaaabe;
                    XmPushButton VUITaaabf;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 36;
                    XmNy = 8;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 5;
                    };
                };
            };
        };
    VUITaaaaz: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Create");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mantup(0);
                d0xhist(10);
                };
            };
        };
    VUITaaaba: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Delete");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(11);
                };
            };
        };
    VUITaaabe: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 90;
            XmNlabelString = 
            compound_string("Reset");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(12);
                };
            };
        };
    VUITaaabf: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 57;
            XmNlabelString = 
            compound_string("View");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manhform(0);
                mankunz(0);
                d0xhist(51);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    kunzb: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 1326;
            XmNy = 38;
            XmNwidth = 214;
            XmNheight = 411;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Dynamic Histogramming");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            XmNdefaultButton = XmPushButton initkunz;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 12;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 3;
                            XmNy = 4;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 27;
                                    XmNy = 40;
                                    XmNlabelString = 
                                    compound_string("Low Edge 1st Bin");
                                    };
                                };
                            XmText low1text;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 2;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 27;
                                    XmNy = 40;
                                    XmNlabelString = 
                                    compound_string("Upper Edge Last Bin");
                                    };
                                };
                            XmText hightext;
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 3;
                            XmNy = 249;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 5;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 1;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 27;
                                    XmNy = 40;
                                    XmNlabelString = 
                                    compound_string("Number of Bins");
                                    };
                                };
                            XmText numtext;
                            XmScale numscale;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 0;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            };
                        controls
                            {
                            XmPushButton initkunz;
                            XmPushButton retkunz;
                            };
                        };
                    };
                };
            };
        };
    numscale: XmScale 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 3;
            XmNborderWidth = 0;
            XmNmaximum = 1000;
            XmNminimum = 0;
            XmNorientation = XmHORIZONTAL;
            XmNshowValue = true;
            XmNscaleMultiple = 1;
            XmNtitleString = 
            compound_string("#Bins");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(89);
                };
            XmNvalueChangedCallback = procedures
                {
                d0xhist(14);
                };
            };
        };
    retkunz: XmPushButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 8;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNwidth = 75;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umkunzb(0);
                };
            };
        };
    numtext: XmText 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 6;
            XmNcolumns = 7;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(88);
                };
            };
        };
    hightext: XmText 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 6;
            XmNcolumns = 7;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(86);
                };
            };
        };
    low1text: XmText 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 6;
            XmNcolumns = 7;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(84);
                };
            };
        };
    initkunz: XmPushButton 
        {
        arguments
            {
            XmNx = 39;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Apply");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(13);
                };
            };
        };
    ocount: XmLabel 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Count: 0");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(90);
                };
            };
        };
    repelc: XmPushButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Refresh");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(6);
                };
            };
        };
    repmuo: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Refresh");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-120-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(16);
                };
            };
        };
    rcf: XmRowColumn 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 11;
            XmNborderWidth = 0;
            XmNwidth = 500;
            };
        controls
            {
            XmLabel fz_label;
            XmLabel stplab;
            };
        };
    scf: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 64;
            XmNwidth = 443;
            XmNheight = 78;
            XmNborderWidth = 1;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNtopAttachment = XmATTACH_NONE;
            XmNtopOffset = 17;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightOffset = 20;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 20;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNrightWidget = XmPushButton next_button;
            };
        controls
            {
            XmRowColumn rcf;
            };
        };
    stplab: XmLabel 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNlabelString = 
            compound_string("NO STP File Open");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNwidth = 1000;
            XmNrecomputeSize = false;
            XmNalignment = XmALIGNMENT_BEGINNING;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(21);
                };
            };
        };
    nomoout: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 3;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-*-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umout(0);
                };
            };
        };
    rcoutt: XmRowColumn 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 5;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmVERTICAL;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            };
        controls
            {
            XmOptionMenu 
                {
                arguments
                    {
                    XmNx = 2;
                    XmNy = 5;
                    XmNborderWidth = 0;
                    XmNlabelString = 
                    compound_string("Type:");
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 91;
                            XmNy = 18;
                            XmNborderWidth = 1;
                            XmNradioBehavior = true;
                            };
                        controls
                            {
                            XmToggleButton 
                                {
                                arguments
                                    {
                                    XmNx = 5;
                                    XmNy = 4;
                                    XmNlabelString = 
                                    compound_string("Exchange");
                                    XmNshadowThickness = 0;
                                    XmNset = true;
                                    };
                                callbacks
                                    {
                                    XmNvalueChangedCallback = procedures
                                        {
                                        out_event(0);
                                        };
                                    };
                                };
                            XmToggleButton 
                                {
                                arguments
                                    {
                                    XmNx = 10;
                                    XmNy = 19;
                                    XmNlabelString = 
                                    compound_string("Native");
                                    XmNset = false;
                                    };
                                callbacks
                                    {
                                    XmNvalueChangedCallback = procedures
                                        {
                                        out_event(1);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            XmOptionMenu 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNlabelString = 
                    compound_string("Mode:");
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 134;
                            XmNy = 14;
                            XmNborderWidth = 1;
                            };
                        controls
                            {
                            XmPushButton oreset;
                            XmPushButton allbutt;
                            XmPushButton fquery;
                            XmPushButton listbutt;
                            XmPushButton ouser;
                            XmPushButton outnth;
                            };
                        };
                    };
                };
            XmOptionMenu 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNlabelString = 
                    compound_string("Bank List:");
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 203;
                            XmNy = 13;
                            XmNborderWidth = 1;
                            XmNradioBehavior = true;
                            };
                        controls
                            {
                            XmToggleButton 
                                {
                                arguments
                                    {
                                    XmNx = 2;
                                    XmNy = 5;
                                    XmNlabelString = 
                                    compound_string("All Banks");
                                    XmNshadowThickness = 0;
                                    XmNset = true;
                                    };
                                callbacks
                                    {
                                    XmNvalueChangedCallback = procedures
                                        {
                                        out_event(7);
                                        };
                                    };
                                };
                            XmToggleButton 
                                {
                                arguments
                                    {
                                    XmNx = 5;
                                    XmNy = 6;
                                    XmNlabelString = 
                                    compound_string("From List...");
                                    XmNshadowThickness = 0;
                                    };
                                callbacks
                                    {
                                    XmNvalueChangedCallback = procedures
                                        {
                                        manlist(0);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            XmPushButton singlebutt;
            };
        };
    VUITaaaag: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopOffset = 18;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_COLUMN;
            XmNx = 15;
            XmNwidth = 130;
            };
        controls
            {
            XmPushButton docol;
            };
        };
    hbef: XmPushButton 
        {
        arguments
            {
            XmNx = 33;
            XmNy = 12;
            XmNlabelString = 
            compound_string("Before");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(20);
                };
            };
        };
    haft: XmPushButton 
        {
        arguments
            {
            XmNx = 28;
            XmNy = 7;
            XmNlabelString = 
            compound_string("After");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(21);
                };
            };
        };
    VUITaaaah: XmPushButton 
        {
        arguments
            {
            XmNx = 33;
            XmNy = 12;
            XmNlabelString = 
            compound_string("Before");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(30);
                };
            };
        };
    VUITaaaap: XmPushButton 
        {
        arguments
            {
            XmNx = 28;
            XmNy = 7;
            XmNlabelString = 
            compound_string("After");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(31);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    tupbull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 497;
            XmNy = 372;
            XmNwidth = 252;
            XmNheight = 225;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("Tuple Builder");
            XmNdefaultButton = XmPushButton acctup;
            XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 167;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton acctup;
                    XmPushButton distup;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 21;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 5;
                            XmNy = 6;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 3;
                                    XmNy = 8;
                                    XmNlabelString = 
                                    compound_string("ID:");
                                    };
                                };
                            XmText 
                                {
                                arguments
                                    {
                                    XmNx = 8;
                                    XmNy = 6;
                                    XmNcolumns = 10;
                                    XmNeditable = false;
                                    XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-100-*-*-*-*-ISO8859-1'));
                                    };
                                callbacks
                                    {
                                    MrmNcreateCallback = procedures
                                        {
                                        save_text_tag(93);
                                        };
                                    };
                                };
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = -1;
                            XmNy = 0;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            XmNpacking = XmPACK_TIGHT;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 8;
                                    XmNy = 5;
                                    XmNlabelString = 
                                    compound_string("Fill");
                                    };
                                };
                            XmRowColumn 
                                {
                                arguments
                                    {
                                    XmNx = 14;
                                    XmNy = 6;
                                    XmNborderWidth = 0;
                                    XmNwidth = 25;
                                    XmNheight = 75;
                                    };
                                controls
                                    {
                                    XmPushButton VUITaaaah;
                                    XmPushButton VUITaaaap;
                                    };
                                };
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 2;
                                    XmNy = 1;
                                    XmNlabelString = 
                                    compound_string("Cuts");
                                    };
                                };
                            };
                        };
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(94);
                };
            };
        };
    distup: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 4;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umtup(0);
                };
            };
        };
    acctup: XmPushButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNlabelString = 
            compound_string("Accept");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(22);
                umtup(0);
                };
            };
        };
    tgaus: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Gaussian");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(7);
                };
            };
        };
    texp: XmToggleButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Exponential");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(8);
                };
            };
        };
    tpoly: XmToggleButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 17;
            XmNlabelString = 
            compound_string("Polynomial");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(9);
                };
            };
        };
    historc: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNx = 601;
            XmNadjustLast = false;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNy = 20;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 2;
                    XmNy = 314;
                    XmNlabelString = 
                    compound_string("Plot Controls:");
                    };
                };
            XmRowColumn VUITaaaax;
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 42;
                    XmNy = 562;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNorientation = XmVERTICAL;
                    XmNadjustLast = false;
                    XmNx = 5;
                    XmNnumColumns = 2;
                    XmNy = 80;
                    XmNwidth = 95;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNborderWidth = 0;
                            XmNy = 3;
                            XmNx = 3;
                            };
                        controls
                            {
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 381;
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 47;
                            XmNy = 4;
                            XmNlabelString = 
                            compound_string("      Fit to:");
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 170;
                            XmNy = 7;
                            XmNlabelString = 
                            compound_string("         ");
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 125;
                            XmNy = 14;
                            XmNlabelString = 
                            compound_string("After Fit:");
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 58;
                    XmNy = 476;
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox fradio;
                    XmRadioBox oradio;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 27;
                    XmNy = 249;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 350;
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox 
                        {
                        arguments
                            {
                            XmNx = 37;
                            XmNy = 5;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNborderWidth = 0;
                            XmNisHomogeneous = false;
                            };
                        controls
                            {
                            XmToggleButton settimerbut;
                            XmToggleButton cantimerbut;
                            };
                        };
                    XmScale updatetimer;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 3;
                    XmNy = 331;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 4;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 73;
                    XmNy = 246;
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton refh;
                    XmPushButton retfhist;
                    XmPushButton hupd;
                    };
                };
            };
        };
    overlay: XmToggleButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Overlay");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(80);
                };
            };
        };
    nooverlay: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 8;
            XmNlabelString = 
            compound_string("No Overlay");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                squery(81);
                };
            };
        };
    oradio: XmRadioBox 
        {
        arguments
            {
            XmNx = 47;
            XmNy = 17;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = false;
            };
        controls
            {
            XmToggleButton overlay;
            XmToggleButton nooverlay;
            };
        };
    fradio: XmRadioBox 
        {
        arguments
            {
            XmNx = 82;
            XmNy = 17;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = false;
            };
        controls
            {
            XmToggleButton tgaus;
            XmToggleButton texp;
            XmToggleButton tpoly;
            };
        };
    pnuttext: XmText 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 14;
            XmNwidth = 183;
            XmNheight = 277;
            XmNcolumns = 1;
            XmNfontList = font_table(font('FIXED'));
            XmNeditMode = XmMULTI_LINE_EDIT;
            XmNpendingDelete = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(95);
                };
            };
        };
    xrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 20;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 6;
                    XmNy = 6;
                    XmNlabelString = 
                    compound_string("HBOOK4 Controls:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 87;
                    XmNy = 12;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 0;
                    XmNisHomogeneous = false;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton VUITaaaat;
                    XmPushButton hsave;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 10;
                    XmNwidth = 16;
                    XmNheight = 16;
                    XmNshadowThickness = 5;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 14;
                    XmNy = 70;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton VUITaaaay;
                    XmPushButton VUITaaabh;
                    XmPushButton popbankq;
                    };
                };
            };
        };
    VUITaaaat: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 90;
            XmNlabelString = 
            compound_string("Reset All");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xhist(16);
                };
            };
        };
    vsuper: XmPushButton 
        {
        arguments
            {
            XmNx = 242;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Overlay");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 3;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manhform(0);
                d0xhist(17);
                };
            };
        };
    ktbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 19;
            XmNy = 52;
            XmNlabelString = 
            compound_string("Kt");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                jetsel(7);
                };
            };
        };
    prxxxxsc: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 3;
            XmNlabelString = 
            compound_string("To Screen");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(2);
                };
            };
        };
    VUITaaaau: XmPushButton 
        {
        arguments
            {
            XmNx = 42;
            XmNy = 47;
            XmNlabelString = 
            compound_string("Check FORM...");
            XmNalignment = XmALIGNMENT_CENTER;
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(4);
                };
            };
        };
    srun: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Run...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                search_type(0);
                };
            };
        };
    sev: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Event...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                search_type(1);
                };
            };
        };
    sbank: XmPushButton 
        {
        arguments
            {
            XmNx = 24;
            XmNy = 35;
            XmNlabelString = 
            compound_string("Bank...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                search_type(2);
                };
            };
        };
    htitlab: XmLabel 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Histogram Title:");
            };
        };
    hidlab: XmLabel 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Histogram ID:");
            };
        };
    hnbinlab: XmLabel 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Number of bins:");
            };
        };
    hed1lab: XmLabel 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Lower edge 1st bin:");
            };
        };
    hed2lab: XmLabel 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Upper edge last bin:");
            };
        };
    hidrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel hidlab;
            XmText xhtitle;
            };
        };
    htitrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 8;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel htitlab;
            XmText xhid;
            };
        };
    hbinrc: XmRowColumn 
        {
        arguments
            {
            XmNx = -1;
            XmNy = -1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_TIGHT;
            };
        controls
            {
            XmLabel hnbinlab;
            XmText xhnbin;
            };
        };
    hed1rc: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel hed1lab;
            XmText xhbinl;
            };
        };
    hed2rc: XmRowColumn 
        {
        arguments
            {
            XmNx = 1;
            XmNy = -1;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel hed2lab;
            XmText xhbinh;
            };
        };
    histbwhat: XmRowColumn 
        {
        arguments
            {
            XmNx = 284;
            XmNy = 403;
            XmNborderWidth = 1;
            XmNwidth = 25;
            XmNheight = 25;
            XmNorientation = XmHORIZONTAL;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmRowColumn histobrc;
            XmNtopOffset = 19;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 20;
            };
        controls
            {
            XmPushButton acchist;
            XmPushButton rethist;
            };
        };
    histbfrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 0;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 75;
            XmNnumColumns = 2;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 32;
                    XmNy = 16;
                    XmNlabelString = 
                    compound_string("Fill");
                    };
                };
            XmPushButton hbef;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 74;
                    XmNy = 2;
                    XmNlabelString = 
                    compound_string("or");
                    };
                };
            XmPushButton haft;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 88;
                    XmNy = 2;
                    XmNlabelString = 
                    compound_string("cuts.");
                    };
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    physmc: XmFormDialog 
        {
        arguments
            {
            XmNx = 802;
            XmNy = 217;
            XmNwidth = 747;
            XmNheight = 717;
            XmNborderWidth = 1;
            XmNdialogTitle = 
            compound_string("Monte Carlo ISAJ/ISAQ");
            XmNautoUnmanage = false;
            XmNresizePolicy = XmRESIZE_GROW;
            };
        controls
            {
            XmScrolledWindow mcscroll;
            XmRowColumn VUITaaaav;
            XmLabel mcanglelab;
            XmRowColumn VUITaaabi;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(116);
                };
            };
        };
    dispmc: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 3;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNwidth = 78;
            XmNheight = 32;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umpmc(0);
                cphysics(24);
                };
            };
        };
    togisaj: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 5;
            XmNlabelString = 
            compound_string("ISAJ");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                cphysics(22);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(98);
                };
            };
        };
    togisaq: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 9;
            XmNlabelString = 
            compound_string("ISAQ");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                cphysics(21);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(99);
                save_text_tag(99);
                };
            };
        };
    mcscroll: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 632;
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNtopOffset = 43;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 15;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomOffset = 10;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNbottomWidget = XmRowColumn VUITaaaav;
            };
        controls
            {
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(97);
                };
            };
        };
    VUITaaaan: XmLabel 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 10;
            XmNlabelString = 
            compound_string("XY Plane   (ET weighting):");
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 20;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 10;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        };
    refpmc: XmPushButton 
        {
        arguments
            {
            XmNx = 71;
            XmNy = 1;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(18);
                };
            };
        };
    mcprint: XmPushButton 
        {
        arguments
            {
            XmNx = 35;
            XmNy = 15;
            XmNlabelString = 
            compound_string("Print List");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(23);
                };
            };
        };
    VUITaaaas: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNy = 1;
            XmNx = 1;
            XmNorientation = XmHORIZONTAL;
            XmNnumColumns = 2;
            XmNpacking = XmPACK_COLUMN;
            XmNadjustLast = false;
            };
        controls
            {
            XmPushButton refpmc;
            XmPushButton mcprint;
            XmPushButton mchelpb;
            XmPushButton dispmc;
            };
        };
    mchelpb: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 1;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphyshelp(0);
                allinfo(2);
                };
            };
        };
    VUITaaaav: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_NONE;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftOffset = 56;
            XmNtopOffset = 534;
            XmNorientation = XmHORIZONTAL;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 15;
            XmNx = 56;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 15;
            XmNy = 534;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNheight = 65;
                    XmNy = 2;
                    XmNx = 1;
                    XmNorientation = XmVERTICAL;
                    };
                controls
                    {
                    XmToggleButton togisaj;
                    XmToggleButton togisaq;
                    XmToggleButton doisal;
                    };
                };
            XmRowColumn VUITaaaas;
            };
        };
    bexit: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Exit");
            XmNaccelerator = 
            "Ctrl<Key>Z";
            XmNacceleratorText = 
            compound_string("^Z");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                quitting(0);
                };
            };
        };
    bopen: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Open Data File...");
            XmNacceleratorText = 
            compound_string("^O");
            XmNaccelerator = 
            "Ctrl<Key>O";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                file_open(2);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    decodebull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 549;
            XmNwidth = 391;
            XmNheight = 190;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Decode Hex<==>Decimal");
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNx = 15;
                    XmNy = 15;
                    };
                controls
                    {
                    XmText decode_text;
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNborderWidth = 0;
                            XmNy = 6;
                            XmNx = 39;
                            };
                        controls
                            {
                            XmPushButton hex_to_dec;
                            XmPushButton dec_to_hex;
                            };
                        };
                    };
                };
            XmPushButton disdec;
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 152;
                    XmNy = 15;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 4;
                            XmNy = 6;
                            XmNborderWidth = 1;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            };
                        controls
                            {
                            XmPushButton andbutton;
                            XmPushButton orbutton;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 1;
                            XmNborderWidth = 1;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 3;
                                    XmNy = 4;
                                    XmNlabelString = 
                                    compound_string("With:");
                                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                                    };
                                };
                            XmText andortext;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = -1;
                            XmNborderWidth = 1;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmHORIZONTAL;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 8;
                                    XmNy = 6;
                                    XmNlabelString = 
                                    compound_string("Result:");
                                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                                    };
                                };
                            XmText andorresult;
                            };
                        };
                    };
                };
            };
        };
    disdec: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNy = 141;
            XmNx = 23;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umdec(0);
                umdec(0);
                };
            };
        };
    mdcd: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Decode...");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 10;
            XmNy = 84;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mandec(3);
                };
            };
        };
    VUITaaaaj: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNx = 1;
            XmNorientation = XmHORIZONTAL;
            XmNy = 1;
            };
        controls
            {
            XmToggleButton zeb_enable;
            XmLabel VUITaaaac;
            XmTextField xdbank_text_zeblst;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 553;
                    XmNy = 26;
                    XmNlabelString = 
                    compound_string("            ");
                    };
                };
            XmPushButton hexdecnav;
            };
        };
    VUITaaabg: XmLabel 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Read:");
            XmNmarginLeft = 0;
            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        };
    next2: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Next");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                };
            };
        };
    filescasc: XmCascadeButton 
        {
        arguments
            {
            XmNx = 167;
            XmNy = 5;
            XmNlabelString = 
            compound_string("File");
            XmNmnemonic = keysym("F");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 30;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 16;
                            XmNy = 21;
                            XmNlabelString = 
                            compound_string("I/O:");
                            XmNfontList = font_table(font('-*-HELVETICA-*-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmPushButton bopen;
                    XmPushButton dod0dad;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 25;
                            XmNy = 189;
                            XmNlabelString = 
                            compound_string("   ");
                            };
                        };
                    XmPushButton outbutt;
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 12;
                            XmNy = 126;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 43;
                            XmNy = 107;
                            XmNlabelString = 
                            compound_string("Attributes:");
                            XmNfontList = font_table(font('-*-HELVETICA-MEDIUM-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmCascadeButton zdestcasc;
                    XmCascadeButton 
                        {
                        arguments
                            {
                            XmNx = 42;
                            XmNy = 154;
                            XmNlabelString = 
                            compound_string("Mode: EXCHANGE");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 42;
                                    XmNy = 10;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton 
                                        {
                                        arguments
                                            {
                                            XmNx = 2;
                                            XmNy = 3;
                                            XmNlabelString = 
                                            compound_string("Exchange");
                                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                                            XmNhighlightThickness = 0;
                                            };
                                        callbacks
                                            {
                                            XmNactivateCallback = procedures
                                                {
                                                mode_proc(0);
                                                };
                                            };
                                        };
                                    XmPushButton 
                                        {
                                        arguments
                                            {
                                            XmNx = 21;
                                            XmNy = 14;
                                            XmNlabelString = 
                                            compound_string("Native");
                                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                                            XmNhighlightThickness = 0;
                                            };
                                        callbacks
                                            {
                                            XmNactivateCallback = procedures
                                                {
                                                mode_proc(1);
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        callbacks
                            {
                            MrmNcreateCallback = procedures
                                {
                                save_text_tag(101);
                                };
                            };
                        };
                    XmCascadeButton 
                        {
                        arguments
                            {
                            XmNx = 10;
                            XmNy = 66;
                            XmNlabelString = 
                            compound_string("File type: FZ");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 173;
                                    XmNy = 22;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton fzrz_file_button;
                                    XmPushButton stp_file_button;
                                    };
                                };
                            };
                        callbacks
                            {
                            MrmNcreateCallback = procedures
                                {
                                save_text_tag(102);
                                };
                            };
                        };
                    XmCascadeButton 
                        {
                        arguments
                            {
                            XmNx = 19;
                            XmNy = 293;
                            XmNlabelString = 
                            compound_string("Disk/Tape: DISK");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 49;
                                    XmNy = 9;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton 
                                        {
                                        arguments
                                            {
                                            XmNx = 4;
                                            XmNy = 5;
                                            XmNlabelString = 
                                            compound_string("Disk");
                                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                                            XmNhighlightThickness = 0;
                                            };
                                        callbacks
                                            {
                                            XmNactivateCallback = procedures
                                                {
                                                store_type(4);
                                                };
                                            };
                                        };
                                    XmPushButton 
                                        {
                                        arguments
                                            {
                                            XmNx = 2;
                                            XmNy = 1;
                                            XmNlabelString = 
                                            compound_string("Tape");
                                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                                            XmNhighlightThickness = 0;
                                            };
                                        callbacks
                                            {
                                            XmNactivateCallback = procedures
                                                {
                                                store_type(5);
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        callbacks
                            {
                            MrmNcreateCallback = procedures
                                {
                                save_text_tag(123);
                                };
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 31;
                            XmNy = 139;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmPushButton bexit;
                    };
                };
            };
        };
    controlcasc: XmCascadeButton 
        {
        arguments
            {
            XmNx = 301;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Control");
            XmNmnemonic = keysym("C");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 30;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 55;
                            XmNy = 157;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmLabel VUITaaabg;
                    XmPushButton next2;
                    XmPushButton scan_button;
                    XmPushButton skip_button;
                    XmPushButton halt_button;
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 58;
                            XmNy = 134;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmCascadeButton 
                        {
                        arguments
                            {
                            XmNx = 47;
                            XmNy = 118;
                            XmNlabelString = 
                            compound_string("Search by");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        controls
                            {
                            XmPulldownMenu 
                                {
                                arguments
                                    {
                                    XmNx = 41;
                                    XmNy = 11;
                                    XmNborderWidth = 1;
                                    };
                                controls
                                    {
                                    XmPushButton srun;
                                    XmPushButton sev;
                                    XmPushButton l1_button;
                                    XmPushButton l2_button;
                                    XmPushButton sbank;
                                    };
                                };
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 35;
                            XmNy = 159;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmPushButton packbutton;
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 116;
                            XmNy = 210;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 73;
                            XmNy = 149;
                            XmNlabelString = 
                            compound_string("D0XUser Menu...");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                mand0x(0);
                                };
                            };
                        };
                    };
                };
            };
        };
    zdestcasc: XmCascadeButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 178;
            XmNlabelString = 
            compound_string("Destination: ZEBCOM");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 42;
                    XmNy = 10;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton zebcom_button;
                    XmPushButton zebstp_button;
                    XmPushButton geant_button;
                    XmPushButton zebwrk_button;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(100);
                };
            };
        };
    d0xuserevent: XmPushButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 2;
            XmNlabelString = 
            compound_string("Event...");
            XmNaccelerator = 
            "Ctrl<Key>C";
            XmNacceleratorText = 
            compound_string("^C");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(3);
                };
            };
        };
    outbutt: XmPushButton 
        {
        arguments
            {
            XmNx = 19;
            XmNy = 50;
            XmNlabelString = 
            compound_string("Output...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manout(2);
                };
            };
        };
    hsearch: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 111;
            XmNlabelString = 
            compound_string("Searching");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(7);
                };
            };
        };
    d0help: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 114;
            XmNlabelString = 
            compound_string("D0 Tools");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(8);
                };
            };
        };
    helpzebra: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 160;
            XmNlabelString = 
            compound_string("ZEBRA Tools");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(9);
                };
            };
        };
    oreset: XmPushButton 
        {
        arguments
            {
            XmNx = 41;
            XmNy = 27;
            XmNlabelString = 
            compound_string("DISABLED/RESET");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(12);
                };
            };
        };
    ouser: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 39;
            XmNlabelString = 
            compound_string("From D0XUSER");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(8);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    d0xuserbull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = -1;
            XmNy = 370;
            XmNwidth = 568;
            XmNheight = 223;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("D0XUSER Controls");
            };
        controls
            {
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 403;
                    XmNy = 176;
                    XmNlabelString = 
                    compound_string("DISMISS");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    XmNshadowThickness = 4;
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umd0x(0);
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 24;
                    XmNy = 19;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 2;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 87;
                                    XmNy = 88;
                                    XmNlabelString = 
                                    compound_string("D0XUSER Routine:");
                                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                                    };
                                };
                            XmRadioBox 
                                {
                                arguments
                                    {
                                    XmNx = 7;
                                    XmNy = 4;
                                    XmNwidth = 25;
                                    XmNheight = 25;
                                    XmNborderWidth = 0;
                                    XmNisHomogeneous = false;
                                    XmNorientation = XmHORIZONTAL;
                                    };
                                controls
                                    {
                                    XmToggleButton ed0xuser;
                                    XmToggleButton dd0xuser;
                                    };
                                };
                            XmSeparator 
                                {
                                arguments
                                    {
                                    XmNx = 32;
                                    XmNy = 101;
                                    XmNwidth = 16;
                                    XmNheight = 16;
                                    };
                                };
                            XmText 
                                {
                                arguments
                                    {
                                    XmNx = -1;
                                    XmNy = 0;
                                    XmNwidth = 200;
                                    XmNheight = 58;
                                    XmNcolumns = 1;
                                    XmNfontList = font_table(font('FIXED'));
                                    XmNeditMode = XmMULTI_LINE_EDIT;
                                    XmNpendingDelete = false;
                                    };
                                callbacks
                                    {
                                    MrmNcreateCallback = procedures
                                        {
                                        save_text_tag(104);
                                        };
                                    };
                                };
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = -1;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNentryAlignment = XmALIGNMENT_CENTER;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 44;
                                    XmNy = 72;
                                    XmNlabelString = 
                                    compound_string("Statistics:");
                                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                                    };
                                };
                            XmPushButton calcstat;
                            XmPushButton clrstat;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 348;
                    XmNy = 24;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 2;
                            XmNlabelString = 
                            compound_string("Call D0XUSER Entry:");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 11;
                            XmNy = 12;
                            XmNborderWidth = 1;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNnumColumns = 2;
                            XmNpacking = XmPACK_COLUMN;
                            };
                        controls
                            {
                            XmPushButton d0xuserevent;
                            XmPushButton d0xusertalk;
                            XmPushButton d0xuserinit;
                            XmPushButton d0xuserfini;
                            };
                        };
                    };
                };
            };
        };
    ed0xuser: XmToggleButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Enabled");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(4);
                control_proc(4);
                };
            };
        };
    dd0xuser: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Disabled");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(5);
                };
            };
        };
    calcstat: XmPushButton 
        {
        arguments
            {
            XmNx = 36;
            XmNy = 23;
            XmNlabelString = 
            compound_string("Calculate");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(7);
                };
            };
        };
    clrstat: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 37;
            XmNlabelString = 
            compound_string("Clear");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(6);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    querysubbull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 152;
            XmNy = 66;
            XmNwidth = 723;
            XmNheight = 717;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("Query/Bank(s)");
            XmNautoUnmanage = true;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 23;
                    XmNy = 30;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmRowColumn rcbbb;
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 0;
                            XmNwidth = 16;
                            XmNheight = 16;
                            XmNorientation = XmHORIZONTAL;
                            XmNshadowThickness = 4;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 1;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNnumColumns = 2;
                            };
                        controls
                            {
                            XmRowColumn 
                                {
                                arguments
                                    {
                                    XmNx = 2;
                                    XmNy = 7;
                                    XmNborderWidth = 0;
                                    XmNwidth = 25;
                                    XmNheight = 25;
                                    XmNorientation = XmHORIZONTAL;
                                    };
                                controls
                                    {
                                    XmLabel 
                                        {
                                        arguments
                                            {
                                            XmNx = 35;
                                            XmNy = 13;
                                            XmNlabelString = 
                                            compound_string("Current Status:");
                                            };
                                        };
                                    XmText reqtext;
                                    };
                                };
                            XmSeparator 
                                {
                                arguments
                                    {
                                    XmNx = 0;
                                    XmNy = 1;
                                    XmNwidth = 16;
                                    XmNheight = 16;
                                    XmNorientation = XmHORIZONTAL;
                                    XmNshadowThickness = 4;
                                    };
                                };
                            XmRowColumn rcccc;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 532;
                    XmNy = 637;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton helpq;
                    XmPushButton okq;
                    };
                };
            };
        };
    VUITaaaay: XmPushButton 
        {
        arguments
            {
            XmNx = 115;
            XmNy = 10;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                doquery(15);
                };
            };
        };
    VUITaaabh: XmPushButton 
        {
        arguments
            {
            XmNx = 181;
            XmNy = 6;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umq(0);
                };
            };
        };
    popbankq: XmPushButton 
        {
        arguments
            {
            XmNx = 123;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Bank Query");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqsub(0);
                };
            };
        };
    casctools: XmCascadeButton 
        {
        arguments
            {
            XmNx = 522;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Tools");
            XmNmnemonic = keysym("T");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 36;
                    XmNy = 21;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmCascadeButton d0xtools;
                    XmCascadeButton d0tools;
                    XmCascadeButton zebtools;
                    };
                };
            };
        };
    reraw: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 97;
            XmNy = 80;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                rawcall(1);
                };
            };
        };
    d0xuserinit: XmPushButton 
        {
        arguments
            {
            XmNx = 32;
            XmNy = 13;
            XmNlabelString = 
            compound_string("Init...");
            XmNaccelerator = 
            "Ctrl<Key>C";
            XmNacceleratorText = 
            compound_string("^C");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(8);
                };
            };
        };
    d0xusertalk: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 19;
            XmNlabelString = 
            compound_string("Talk...");
            XmNaccelerator = 
            "Ctrl<Key>C";
            XmNacceleratorText = 
            compound_string("^C");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(10);
                };
            };
        };
    d0xuserfini: XmPushButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 49;
            XmNlabelString = 
            compound_string("Finish...");
            XmNaccelerator = 
            "Ctrl<Key>C";
            XmNacceleratorText = 
            compound_string("^C");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(9);
                };
            };
        };
    d0xuserhelp: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 122;
            XmNlabelString = 
            compound_string("D0XUser");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(10);
                };
            };
        };
    doisal: XmToggleButton 
        {
        arguments
            {
            XmNx = 12;
            XmNy = 11;
            XmNlabelString = 
            compound_string("ISAL");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                cphysics(28);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(98);
                };
            };
        };
    mcanglelab: XmLabel 
        {
        arguments
            {
            XmNx = 290;
            XmNy = 598;
            XmNlabelString = 
            compound_string("");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNtopOffset = 10;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 17;
            XmNleftAttachment = XmATTACH_FORM;
            XmNbottomAttachment = XmATTACH_NONE;
            XmNleftWidget = XmRowColumn VUITaaabi;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(105);
                };
            };
        };
    VUITaaabi: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftOffset = 10;
            XmNtopOffset = 587;
            XmNrightAttachment = XmATTACH_NONE;
            XmNrightOffset = 639;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 29;
            XmNwidth = 16;
            XmNy = 587;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 4;
                    XmNy = 3;
                    XmNlabelString = 
                    compound_string("Calculate From ",separate=true) &
                        compound_string("MC/Data Selection:");
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNx = 25;
                    XmNy = 13;
                    };
                controls
                    {
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 3;
                            XmNy = 3;
                            XmNlabelString = 
                            compound_string("Space Angle");
                            XmNshadowThickness = 4;
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                cphysics(29);
                                };
                            };
                        };
                    };
                };
            };
        };
    conecor: XmToggleButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 6;
            XmNlabelString = 
            compound_string("ConeCorr");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(5);
                };
            };
        };
    UnderLyingEv: XmToggleButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 3;
            XmNlabelString = 
            compound_string("UnderLyingEvent");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(6);
                };
            };
        };
    zspcor: XmToggleButton 
        {
        arguments
            {
            XmNx = 26;
            XmNy = 7;
            XmNlabelString = 
            compound_string("ZeroSuppress");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                eselcor(7);
                };
            };
        };
    lowcor: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Low");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                eselcor(8);
                };
            };
        };
    medcor: XmPushButton 
        {
        arguments
            {
            XmNx = 30;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Medium");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                eselcor(9);
                };
            };
        };
    highcor: XmPushButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 21;
            XmNlabelString = 
            compound_string("High");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                eselcor(10);
                };
            };
        };
    qcdjlab: XmLabel 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 232;
            XmNlabelString = 
            compound_string("Corrections to Apply:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNheight = 14;
            };
        };
    navcdt: XmOptionMenu 
        {
        arguments
            {
            XmNx = 265;
            XmNy = 29;
            XmNborderWidth = 0;
            XmNlabelString = 
            compound_string("Data as");
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 83;
                    XmNy = 15;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton auto_button;
                    XmPushButton int_button;
                    XmPushButton float_button;
                    XmPushButton hex_button;
                    XmPushButton char_button;
                    };
                };
            };
        };
    navcnavr: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNx = 0;
            XmNy = 0;
            };
        controls
            {
            XmLabel polab;
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    XmNx = 1;
                    XmNy = 3;
                    };
                controls
                    {
                    XmTextField xdbank_text_navigate;
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNborderWidth = 0;
                            XmNx = 4;
                            XmNy = 6;
                            };
                        controls
                            {
                            XmArrowButton navup;
                            XmArrowButton navdown;
                            };
                        };
                    XmPushButton go_navigate;
                    };
                };
            };
        };
    d0xtools: XmCascadeButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNlabelString = 
            compound_string("D0X Tools");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 50;
                    XmNy = 12;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton xdbank_button;
                    XmPushButton raw_dump;
                    XmPushButton physicsbutt;
                    XmPushButton doqr;
                    XmPushButton trackbutton;
                    XmPushButton CAEH;
                    };
                };
            };
        };
    d0tools: XmCascadeButton 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 8;
            XmNlabelString = 
            compound_string("D0 Tools");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 31;
                    XmNy = 14;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton ezbank_button;
                    XmPushButton setcaph_button;
                    XmCascadeButton prcasc;
                    };
                };
            };
        };
    zebtools: XmCascadeButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 4;
            XmNlabelString = 
            compound_string("Zebra Tools");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 69;
                    XmNy = 12;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 1;
                            XmNlabelString = 
                            compound_string("Show Bank Chain");
                            XmNmarginLeft = 5;
                            XmNshadowThickness = 4;
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                zebra_proc(0);
                                };
                            };
                        };
                    XmPushButtonGadget verify_button;
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 39;
                            XmNy = 33;
                            XmNlabelString = 
                            compound_string("Set Path (RECO)");
                            XmNmarginLeft = 5;
                            XmNshadowThickness = 4;
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                zebra_proc(3);
                                };
                            MrmNcreateCallback = procedures
                                {
                                save_text_tag(103);
                                };
                            };
                        };
                    XmPushButton VUITaaaau;
                    };
                };
            };
        };
    navcrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 5;
            XmNborderWidth = 1;
            XmNwidth = 25;
            XmNheight = 25;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 5;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 4;
            };
        controls
            {
            XmRowColumn nav_crc;
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 12;
                            XmNy = 5;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNorientation = XmVERTICAL;
                            };
                        controls
                            {
                            XmLabel banklab;
                            XmTextField xdbank_bank_2;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 0;
                            XmNborderWidth = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            };
                        controls
                            {
                            XmLabel sellab;
                            XmTextField xdbank_text_chain;
                            };
                        };
                    XmRowColumn navcnavr;
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNx = 428;
                            XmNy = 33;
                            XmNborderWidth = 0;
                            };
                        controls
                            {
                            XmLabel 
                                {
                                arguments
                                    {
                                    XmNx = 59;
                                    XmNy = 69;
                                    XmNlabelString = 
                                    compound_string("     ");
                                    };
                                };
                            XmLabel navaddresslab;
                            XmLabel navchainlab;
                            };
                        };
                    };
                };
            XmText navigate_text;
            XmRowColumn VUITaaaaj;
            };
        };
    navtreehelp: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            XmNheight = 41;
            XmNx = 0;
            XmNy = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manqh(0);
                help_proc(11);
                };
            };
        };
    navtreerc: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopOffset = 5;
            XmNorientation = XmHORIZONTAL;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNx = 0;
                    XmNy = 1;
                    };
                controls
                    {
                    XmArrowButton scup;
                    XmArrowButton scdown;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNx = 2;
                    XmNy = 2;
                    };
                controls
                    {
                    XmLabel scuplab;
                    XmLabel scdownlab;
                    };
                };
            XmOptionMenu 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = 1;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 162;
                            XmNy = 26;
                            XmNborderWidth = 1;
                            XmNradioBehavior = true;
                            };
                        controls
                            {
                            XmPushButton ptree;
                            XmPushButton ftree;
                            };
                        };
                    };
                };
            XmPushButton navtreehelp;
            };
        };
    scdownlab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Smaller");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNy = 2;
            XmNx = 0;
            };
        };
    navcprx: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Formatted");
            XmNshadowThickness = 4;
            XmNx = 3;
            XmNy = 2;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                printit(2);
                };
            };
        };
    hmteopt: XmPushButton 
        {
        arguments
            {
            XmNx = 15;
            XmNy = 157;
            XmNlabelString = 
            compound_string("HMTE");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(7);
                };
            };
        };
    xxxxopt: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 180;
            XmNlabelString = 
            compound_string("GENERIC");
            XmNfontList = font_table(font('-*-HELVETICA-*-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(8);
                };
            };
        };
    prcasc: XmCascadeButton 
        {
        arguments
            {
            XmNx = 39;
            XmNy = 74;
            XmNlabelString = 
            compound_string("PRxxxx...");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 52;
                    XmNy = 12;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmCascadeButton byname;
                    XmCascadeButton byaddress;
                    };
                };
            };
        };
    prxxxxfi: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 13;
            XmNlabelString = 
            compound_string("To File");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(8);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    d0packages: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 381;
            XmNy = 14;
            XmNwidth = 250;
            XmNheight = 370;
            XmNborderWidth = 1;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("D0 Packages");
            };
        controls
            {
            XmRowColumn packrc;
            XmPushButton dispack;
            };
        };
    dispack: XmPushButton 
        {
        arguments
            {
            XmNx = 153;
            XmNy = 334;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-*-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umpack(0);
                };
            };
        };
    packbutton: XmPushButton 
        {
        arguments
            {
            XmNx = 33;
            XmNy = 141;
            XmNlabelString = 
            compound_string("D0 Offline Packages");
            XmNaccelerator = 
            "Ctrl<Key>D";
            XmNacceleratorText = 
            compound_string("^D");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manpack(0);
                };
            };
        };
    discleanem: XmToggleButton 
        {
        arguments
            {
            XmNx = 59;
            XmNy = 20;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(16);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(145);
                };
            };
        };
    encleanem: XmToggleButton 
        {
        arguments
            {
            XmNx = 8;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(15);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(144);
                };
            };
        };
    enudst: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 7;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(11);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(142);
                };
            };
        };
    disudst: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(12);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(143);
                };
            };
        };
    udstrc: XmRadioBox 
        {
        arguments
            {
            XmNx = 152;
            XmNy = 16;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = true;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = true;
            };
        controls
            {
            XmToggleButton enudst;
            XmToggleButton disudst;
            };
        };
    cleanemrc: XmRadioBox 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = false;
            XmNorientation = XmHORIZONTAL;
            XmNx = 10;
            XmNy = 2;
            };
        controls
            {
            XmToggleButton encleanem;
            XmToggleButton discleanem;
            };
        };
    cleanmurc: XmRadioBox 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 4;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = true;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = true;
            };
        controls
            {
            XmToggleButton encleanmu;
            XmToggleButton discleanmu;
            };
        };
    encleanmu: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 7;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(17);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(146);
                };
            };
        };
    discleanmu: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(18);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(147);
                };
            };
        };
    cafixrc: XmRadioBox 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 2;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = true;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = true;
            };
        controls
            {
            XmToggleButton encafix;
            XmToggleButton discafix;
            };
        };
    encafix: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 7;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(13);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(148);
                };
            };
        };
    discafix: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(14);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(149);
                };
            };
        };
    packrc: XmRowColumn 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 17;
            XmNborderWidth = 1;
            XmNnumColumns = 1;
            XmNorientation = XmVERTICAL;
            XmNpacking = XmPACK_TIGHT;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 0;
                    XmNlabelString = 
                    compound_string("PACKAGES RUN IN THIS ORDER:");
                    XmNwidth = 230;
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = 2;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox calorrc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 135;
                            XmNy = 11;
                            XmNlabelString = 
                            compound_string("CALOR (always)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            XmNwidth = 134;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = -1;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox cahitsrc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 131;
                            XmNy = 10;
                            XmNlabelString = 
                            compound_string("CAHITS     ");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            XmNwidth = 134;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 2;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox udstrc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 112;
                            XmNy = 14;
                            XmNlabelString = 
                            compound_string("UDST_TO_DST");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            XmNwidth = 134;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 2;
                    XmNy = 0;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox cleanemrc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 11;
                            XmNlabelString = 
                            compound_string("COMPUTE_EM_QUALITY");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            XmNwidth = 134;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 1;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox cleanmurc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 3;
                            XmNlabelString = 
                            compound_string("COMPUTE_MU_QUALITY");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            XmNwidth = 134;
                            };
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = -1;
                    XmNy = 1;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmRadioBox cafixrc;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 122;
                            XmNy = 8;
                            XmNlabelString = 
                            compound_string("CAFIX");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            };
                        };
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 21;
                    XmNy = 7;
                    XmNwidth = 16;
                    XmNheight = 16;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 6;
                    XmNy = 320;
                    XmNborderWidth = 0;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 96;
                            XmNy = 13;
                            XmNlabelString = 
                            compound_string("ALL OF THE ABOVE");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmPushButton allpackon;
                    XmPushButton allpackoff;
                    };
                };
            };
        };
    cleanemtext: XmText 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 4;
            XmNcolumns = 60;
            XmNfontList = font_table(font('FIXED'));
            XmNeditMode = XmMULTI_LINE_EDIT;
            XmNpendingDelete = false;
            XmNrows = 32;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(108);
                };
            };
        };
    navaddresslab: XmLabel 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 22;
            XmNlabelString = 
            compound_string("Address:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(109);
                };
            };
        };
    navchainlab: XmLabel 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 36;
            XmNlabelString = 
            compound_string("Chain Length:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-*-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(110);
                };
            };
        };
    d0dadrun: XmTextField 
        {
        arguments
            {
            XmNcolumns = 6;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 90;
            XmNy = 47;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(111);
                };
            };
        };
    d0dadevent: XmTextField 
        {
        arguments
            {
            XmNcolumns = 6;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 2;
            XmNy = 3;
            XmNwidth = 66;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(112);
                };
            };
        };
    d0dadrunlab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Run:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 9;
            XmNy = 8;
            };
        };
    d0dadevlab: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Event:       ");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 7;
            XmNy = 15;
            };
        };
    d0dadfetch: XmPushButton 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Fetch Event");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 1;
            XmNy = 2;
            XmNalignment = XmALIGNMENT_CENTER;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(50);
                };
            };
        };
    dod0dad: XmPushButton 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 80;
            XmNlabelString = 
            compound_string("D0DAD Catalog...");
            XmNacceleratorText = 
            compound_string("^B");
            XmNaccelerator = 
            "Ctrl<Key>B";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mand0dad(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    d0dadform: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 256;
            XmNwidth = 530;
            XmNheight = 342;
            XmNborderWidth = 1;
            XmNdefaultPosition = false;
            XmNdialogTitle = 
            compound_string("D0 Direct Access Data");
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNx = 199;
                    XmNy = 40;
                    };
                controls
                    {
                    XmRadioBox 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 0;
                            XmNwidth = 25;
                            XmNheight = 25;
                            XmNborderWidth = 0;
                            XmNisHomogeneous = false;
                            };
                        controls
                            {
                            XmToggleButton d0dadstbut;
                            XmToggleButton d0dadspbut;
                            };
                        };
                    XmSeparator 
                        {
                        arguments
                            {
                            XmNx = 2;
                            XmNy = 109;
                            XmNwidth = 16;
                            XmNheight = 16;
                            };
                        };
                    XmRowColumn 
                        {
                        arguments
                            {
                            XmNborderWidth = 0;
                            XmNnumColumns = 2;
                            XmNorientation = XmHORIZONTAL;
                            XmNpacking = XmPACK_COLUMN;
                            XmNx = 5;
                            XmNy = 3;
                            };
                        controls
                            {
                            XmLabel d0dadrunlab;
                            XmTextField d0dadrun;
                            XmLabel d0dadevlab;
                            XmTextField d0dadevent;
                            };
                        };
                    XmPushButton d0dadfetch;
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNlabelString = 
                    compound_string("Access via D0DADF files is via Main File menu");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    XmNx = 5;
                    XmNy = 6;
                    };
                };
            XmPushButton disd0dad;
            XmLabel 
                {
                arguments
                    {
                    XmNlabelString = 
                    compound_string("Access via Catalogs here:");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    XmNx = 5;
                    XmNy = 35;
                    };
                };
            XmScrolledWindow d0dadscr;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(115);
                };
            };
        };
    disd0dad: XmPushButton 
        {
        arguments
            {
            XmNx = 403;
            XmNy = 13;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-*-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umd0dad(0);
                };
            };
        };
    d0dadstbut: XmToggleButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Standard Catalog");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(52);
                };
            };
        };
    d0dadspbut: XmToggleButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Specify Catalog");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = false;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(51);
                };
            };
        };
    d0dadscr: XmScrolledWindow 
        {
        arguments
            {
            XmNx = 19;
            XmNy = 255;
            XmNwidth = 456;
            XmNheight = 63;
            XmNborderWidth = 1;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            };
        controls
            {
            XmText d0dadcattext;
            };
        };
    d0dadcattext: XmText 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 4;
            XmNheight = 25;
            XmNcolumns = 100;
            XmNfontList = font_table(font('FIXED'));
            XmNvalue = 
            "Using standard D0 run-dependent catalog...";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(113);
                };
            };
        };
    nextraw: XmPushButton 
        {
        arguments
            {
            XmNx = 41;
            XmNy = 40;
            XmNlabelString = 
            compound_string("Next Event");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                rawcall(1);
                };
            };
        };
    creset: XmPushButton 
        {
        arguments
            {
            XmNx = 11;
            XmNy = 9;
            XmNlabelString = 
            compound_string("Reset");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(13);
                };
            };
        };
    legophysics: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Physics");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(30);
                cphysics(8);
                };
            };
        };
    catdlego: XmPushButton 
        {
        arguments
            {
            XmNx = 37;
            XmNy = 11;
            XmNlabelString = 
            compound_string("CATD");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(31);
                cphysics(8);
                };
            };
        };
    jettext: XmText 
        {
        arguments
            {
            XmNwidth = 250;
            XmNpendingDelete = false;
            XmNfontList = font_table(font('FIXED'));
            XmNrows = 36;
            XmNheight = 600;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(118);
                };
            };
        };
    VUITaaaal: XmRowColumn 
        {
        arguments
            {
            XmNx = 244;
            XmNy = 50;
            XmNborderWidth = 1;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 34;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 10;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            };
        controls
            {
            XmLabel rotlab;
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 4;
                    XmNy = 2;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton zerophi;
                    XmArrowButton phiup;
                    XmArrowButton phidown;
                    XmLabel phi0lab;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = 1;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton zerotheta;
                    XmArrowButton thetaup;
                    XmArrowButton thetadown;
                    XmLabel theta0lab;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 1;
                    XmNy = 1;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton zeropsi;
                    XmArrowButton psiup;
                    XmArrowButton psidown;
                    XmLabel psi0lab;
                    };
                };
            XmSeparator 
                {
                arguments
                    {
                    XmNx = 0;
                    XmNy = -1;
                    XmNwidth = 16;
                    XmNheight = 16;
                    };
                };
            XmOptionMenu 
                {
                arguments
                    {
                    XmNborderWidth = 0;
                    XmNlabelString = 
                    compound_string("LEGO Type:");
                    XmNx = 1;
                    XmNy = -1;
                    };
                controls
                    {
                    XmPulldownMenu 
                        {
                        arguments
                            {
                            XmNx = 72;
                            XmNy = 14;
                            XmNborderWidth = 1;
                            };
                        controls
                            {
                            XmPushButton legophysics;
                            XmPushButton catdlego;
                            };
                        };
                    };
                };
            };
        };
    refreshjets: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 13;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(32);
                };
            };
        };
    pnut4: XmPushButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 53;
            XmNlabelString = 
            compound_string("(4)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                jetsel(8);
                };
            };
        };
    pnut5: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 95;
            XmNlabelString = 
            compound_string("(5)");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNhighlightThickness = 0;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                jetsel(9);
                };
            };
        };
    ptaubutt: XmPushButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 98;
            XmNlabelString = 
            compound_string("TAU");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manpt(0);
                cphysics(33);
                };
            };
        };
    gambutt: XmPushButton 
        {
        arguments
            {
            XmNx = 60;
            XmNy = 31;
            XmNlabelString = 
            compound_string("PHOTON");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manem(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    ptau_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 546;
            XmNy = 70;
            XmNwidth = 279;
            XmNheight = 530;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("PNUT Candidates");
            XmNdefaultPosition = false;
            XmNautoUnmanage = false;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 20;
                    XmNy = 53;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    };
                controls
                    {
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 123;
                            XmNlabelString = 
                            compound_string("Additional PTAU Quantities:");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmText ptautext;
                    };
                };
            XmLabel 
                {
                arguments
                    {
                    XmNx = 29;
                    XmNy = 13;
                    XmNlabelString = 
                    compound_string("Please SELECT object in Main",separate=true) &
                        compound_string("List to make active here");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 87;
                    XmNy = 460;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmPushButton retau;
                    XmPushButton 
                        {
                        arguments
                            {
                            XmNx = 35;
                            XmNy = 5;
                            XmNlabelString = 
                            compound_string("DISMISS");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                            XmNshadowThickness = 4;
                            };
                        callbacks
                            {
                            XmNactivateCallback = procedures
                                {
                                umpt(0);
                                };
                            };
                        };
                    };
                };
            };
        };
    ptautext: XmText 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 14;
            XmNwidth = 183;
            XmNheight = 367;
            XmNcolumns = 1;
            XmNfontList = font_table(font('FIXED'));
            XmNeditMode = XmMULTI_LINE_EDIT;
            XmNpendingDelete = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(119);
                };
            };
        };
    obenable: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Enable/Disable Objects");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manen(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    enable_bull: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNx = 450;
            XmNy = 345;
            XmNwidth = 267;
            XmNheight = 342;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Object Enabling");
            XmNdefaultPosition = false;
            };
        controls
            {
            XmPushButton 
                {
                arguments
                    {
                    XmNx = 153;
                    XmNy = 249;
                    XmNlabelString = 
                    compound_string("DISMISS");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
                    XmNshadowThickness = 4;
                    };
                callbacks
                    {
                    XmNactivateCallback = procedures
                        {
                        umen(0);
                        };
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 28;
                    XmNy = 27;
                    XmNborderWidth = 1;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNnumColumns = 2;
                    XmNorientation = XmVERTICAL;
                    XmNpacking = XmPACK_COLUMN;
                    };
                controls
                    {
                    XmToggleButton enele;
                    XmToggleButton engam;
                    XmToggleButton enmuon;
                    XmToggleButton enjet;
                    XmToggleButton entau;
                    XmToggleButton enmet;
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 68;
                            XmNy = 18;
                            XmNlabelString = 
                            compound_string("(PELC)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 32;
                            XmNy = 57;
                            XmNlabelString = 
                            compound_string("(PPHO)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 119;
                            XmNy = 98;
                            XmNlabelString = 
                            compound_string("(PMUO)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 36;
                            XmNy = 96;
                            XmNlabelString = 
                            compound_string("(JETS)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 71;
                            XmNy = 73;
                            XmNlabelString = 
                            compound_string("(PTAU)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    XmLabel 
                        {
                        arguments
                            {
                            XmNx = 116;
                            XmNy = 167;
                            XmNlabelString = 
                            compound_string("(PNUT)");
                            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
                            };
                        };
                    };
                };
            };
        };
    enele: XmToggleButton 
        {
        arguments
            {
            XmNx = 7;
            XmNy = 10;
            XmNlabelString = 
            compound_string("Electron");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(30);
                };
            };
        };
    engam: XmToggleButton 
        {
        arguments
            {
            XmNx = 38;
            XmNy = 27;
            XmNlabelString = 
            compound_string("Photon");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(31);
                };
            };
        };
    enmuon: XmToggleButton 
        {
        arguments
            {
            XmNx = 29;
            XmNy = 48;
            XmNlabelString = 
            compound_string("Muon");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(32);
                };
            };
        };
    enjet: XmToggleButton 
        {
        arguments
            {
            XmNx = 40;
            XmNy = 67;
            XmNlabelString = 
            compound_string("Jet");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(33);
                };
            };
        };
    entau: XmToggleButton 
        {
        arguments
            {
            XmNx = 25;
            XmNy = 86;
            XmNlabelString = 
            compound_string("Tau");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(34);
                };
            };
        };
    enmet: XmToggleButton 
        {
        arguments
            {
            XmNx = 61;
            XmNy = 114;
            XmNlabelString = 
            compound_string("Neutrino");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                selectcol(35);
                };
            };
        };
    retau: XmPushButton 
        {
        arguments
            {
            XmNx = 3;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                cphysics(33);
                };
            };
        };
    ptauopt: XmPushButton 
        {
        arguments
            {
            XmNx = 10;
            XmNy = 59;
            XmNlabelString = 
            compound_string("PTAU");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                squery(9);
                };
            };
        };
    settimerbut: XmToggleButton 
        {
        arguments
            {
            XmNx = 81;
            XmNy = 6;
            XmNlabelString = 
            compound_string("Set");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(60);
                };
            };
        };
    cantimerbut: XmToggleButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 5;
            XmNlabelString = 
            compound_string("Cancel");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xhist(61);
                };
            };
        };
    updatetimer: XmScale 
        {
        arguments
            {
            XmNx = 1;
            XmNy = 0;
            XmNborderWidth = 0;
            XmNorientation = XmHORIZONTAL;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNmaximum = 600;
            XmNminimum = 0;
            XmNscaleMultiple = 1;
            XmNshowValue = true;
            XmNtitleString = 
            compound_string("Seconds/update");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(120);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    track_bull: XmFormDialog 
        {
        arguments
            {
            XmNx = 46;
            XmNy = 55;
            XmNwidth = 666;
            XmNheight = 621;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Tracks");
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            XmNdefaultButton = XmPushButton VUITaaack;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 318;
                    XmNy = 27;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    XmNorientation = XmHORIZONTAL;
                    XmNrightAttachment = XmATTACH_FORM;
                    XmNrightOffset = 10;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNtopOffset = 11;
                    };
                controls
                    {
                    XmPushButton nexttrkev;
                    XmPushButton VUITaaack;
                    XmPushButton hexdec;
                    XmPushButton VUITaaabj;
                    XmPushButton VUITaaaaw;
                    };
                };
            XmScrolledWindow cdscroll;
            XmRadioBox 
                {
                arguments
                    {
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 1;
                    XmNisHomogeneous = false;
                    XmNleftAttachment = XmATTACH_FORM;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNleftOffset = 10;
                    XmNtopOffset = 10;
                    XmNorientation = XmHORIZONTAL;
                    };
                controls
                    {
                    XmToggleButton cdbutt;
                    XmToggleButton vtxbutt;
                    XmToggleButton fdcbutt;
                    };
                };
            XmText trackvariabs;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(126);
                };
            };
        };
    VUITaaaaw: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 5;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umtrk(0);
                };
            };
        };
    VUITaaabj: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 6;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphyshelp(0);
                allinfo(3);
                };
            };
        };
    VUITaaack: XmPushButton 
        {
        arguments
            {
            XmNx = 36;
            XmNy = 24;
            XmNlabelString = 
            compound_string("Refresh");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xtracks(10);
                };
            };
        };
    cdtext: XmText 
        {
        arguments
            {
            XmNheight = 518;
            XmNfontList = font_table(font('FIXED'));
            XmNx = 10;
            XmNy = 7;
            XmNwidth = 1500;
            XmNpendingDelete = false;
            XmNresizeHeight = false;
            XmNresizeWidth = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(121);
                };
            };
        };
    cdscroll: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 545;
            XmNheight = 200;
            XmNborderWidth = 1;
            XmNx = 10;
            XmNy = 90;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 10;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 60;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftOffset = 5;
            XmNleftWidget = XmText trackvariabs;
            };
        controls
            {
            XmText cdtext;
            };
        };
    cdbutt: XmToggleButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 9;
            XmNlabelString = 
            compound_string("CD");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xtracks(0);
                d0xtracks(10);
                };
            };
        };
    vtxbutt: XmToggleButton 
        {
        arguments
            {
            XmNx = 18;
            XmNy = 11;
            XmNlabelString = 
            compound_string("VTX");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xtracks(1);
                d0xtracks(10);
                };
            };
        };
    fdcbutt: XmToggleButton 
        {
        arguments
            {
            XmNx = 23;
            XmNy = 34;
            XmNlabelString = 
            compound_string("FCD");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xtracks(2);
                d0xtracks(10);
                };
            };
        };
    hexdec: XmPushButton 
        {
        arguments
            {
            XmNx = 80;
            XmNy = 11;
            XmNlabelString = 
            compound_string("Hex<=>Dec");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mandec(10);
                };
            };
        };
    nexttrkev: XmPushButton 
        {
        arguments
            {
            XmNx = 25;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Next Event");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                d0xtracks(10);
                };
            };
        };
    trackvariabs: XmText 
        {
        arguments
            {
            XmNheight = 25;
            XmNcolumns = 8;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopOffset = 63;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNfontList = font_table(font('FIXED'));
            XmNpendingDelete = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(122);
                };
            };
        };
    trackbutton: XmPushButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 103;
            XmNlabelString = 
            compound_string("Tracks");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            XmNaccelerator = 
            "Ctrl<Key>T";
            XmNacceleratorText = 
            compound_string("^T");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mantrk(0);
                d0xtracks(10);
                mantrk(0);
                };
            };
        };
    hexdecnav: XmPushButton 
        {
        arguments
            {
            XmNx = 543;
            XmNy = 7;
            XmNlabelString = 
            compound_string("Hex<=>Dec");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mandec(10);
                };
            };
        };
    VUITaaaaa: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Set #Words",separate=true) &
                compound_string("per Row:");
            XmNleftAttachment = XmATTACH_NONE;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 82;
            XmNtopOffset = 16;
            XmNx = 300;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmTextField numrow_text;
            XmNrightOffset = 6;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        };
    VUITaaaab: XmRowColumn 
        {
        arguments
            {
            XmNx = 569;
            XmNy = 20;
            XmNborderWidth = 0;
            XmNwidth = 25;
            XmNheight = 25;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 11;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 11;
            };
        controls
            {
            XmPushButton nomorep;
            XmPushButton helpphys;
            };
        };
    andbutton: XmPushButton 
        {
        arguments
            {
            XmNx = 4;
            XmNy = 4;
            XmNlabelString = 
            compound_string("AND");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                decodeit(2);
                };
            };
        };
    orbutton: XmPushButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 15;
            XmNlabelString = 
            compound_string("OR ");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                decodeit(3);
                };
            };
        };
    andortext: XmText 
        {
        arguments
            {
            XmNcolumns = 8;
            XmNx = 24;
            XmNy = 11;
            XmNwidth = 122;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(124);
                };
            };
        };
    andorresult: XmText 
        {
        arguments
            {
            XmNcolumns = 8;
            XmNx = 27;
            XmNy = 9;
            XmNwidth = 122;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(125);
                };
            };
        };
    CAEH: XmPushButton 
        {
        arguments
            {
            XmNx = 48;
            XmNy = 85;
            XmNlabelString = 
            compound_string("CAEH");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            XmNshadowThickness = 4;
            XmNaccelerator = 
            "Ctrl<Key>E";
            XmNacceleratorText = 
            compound_string("^E");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                mancal(0);
                };
            };
        };
!**VUIT_Manage false ***
!**VUIT_Manage false ***
!***VUIT_Manage false ***
    cal_bull: XmFormDialog 
        {
        arguments
            {
            XmNx = 52;
            XmNy = 89;
            XmNwidth = 831;
            XmNheight = 731;
            XmNborderWidth = 1;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("CAEH Bank");
            XmNautoUnmanage = false;
            XmNdefaultPosition = false;
            };
        controls
            {
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 318;
                    XmNy = 27;
                    XmNborderWidth = 0;
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    XmNorientation = XmVERTICAL;
                    XmNrightAttachment = XmATTACH_FORM;
                    XmNrightOffset = 10;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNtopOffset = 10;
                    };
                controls
                    {
                    XmPushButton VUITaaabo;
                    XmPushButton VUITaaaar;
                    XmPushButton VUITaaabp;
                    };
                };
            XmScrolledWindow VUITaaabr;
            XmRowColumn VUITaaabl;
            XmRowColumn VUITaaabs;
            XmRowColumn 
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    XmNleftAttachment = XmATTACH_WIDGET;
                    XmNtopAttachment = XmATTACH_FORM;
                    XmNleftOffset = 10;
                    XmNtopOffset = 10;
                    XmNleftWidget = XmRowColumn VUITaaabl;
                    XmNentryAlignment = XmALIGNMENT_CENTER;
                    };
                controls
                    {
                    XmPushButton cachdoit;
                    XmPushButton printcaeh;
                    XmPushButton caehdefs;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(128);
                };
            };
        };
    VUITaaaar: XmPushButton 
        {
        arguments
            {
            XmNx = 25;
            XmNy = 14;
            XmNlabelString = 
            compound_string("Next Event");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(0);
                };
            };
        };
    VUITaaabo: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 6;
            XmNlabelString = 
            compound_string("HELP");
            XmNshadowThickness = 4;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manphyshelp(0);
                d0xcaeh(1);
                manphyshelp(0);
                };
            };
        };
    VUITaaabp: XmPushButton 
        {
        arguments
            {
            XmNx = 13;
            XmNy = 5;
            XmNlabelString = 
            compound_string("DISMISS");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                umcal(0);
                };
            };
        };
    VUITaaabr: XmScrolledWindow 
        {
        arguments
            {
            XmNwidth = 545;
            XmNheight = 200;
            XmNborderWidth = 1;
            XmNx = 10;
            XmNy = 90;
            XmNscrollBarDisplayPolicy = XmAS_NEEDED;
            XmNscrollingPolicy = XmAUTOMATIC;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 10;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 10;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = 44;
            XmNleftAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopWidget = XmRowColumn VUITaaabs;
            };
        controls
            {
            XmText caeh_text;
            };
        };
    caeh_text: XmText 
        {
        arguments
            {
            XmNheight = 588;
            XmNfontList = font_table(font('FIXED'));
            XmNx = 10;
            XmNy = 7;
            XmNwidth = 704;
            XmNpendingDelete = false;
            XmNresizeHeight = false;
            XmNresizeWidth = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(127);
                };
            };
        };
    etamin: XmText 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 11;
            XmNheight = 25;
            XmNcolumns = 3;
            XmNvalue = 
            "-37";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(129);
                };
            };
        };
    etamax: XmText 
        {
        arguments
            {
            XmNx = 56;
            XmNy = 10;
            XmNheight = 25;
            XmNcolumns = 3;
            XmNvalue = 
            "37";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(130);
                };
            };
        };
    phimin: XmText 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 11;
            XmNheight = 25;
            XmNcolumns = 2;
            XmNvalue = 
            "1";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(131);
                };
            };
        };
    phimax: XmText 
        {
        arguments
            {
            XmNx = 56;
            XmNy = 10;
            XmNheight = 25;
            XmNcolumns = 2;
            XmNvalue = 
            "64";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(132);
                };
            };
        };
    caehetarow: XmRowColumn 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNisHomogeneous = false;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_TIGHT;
            XmNx = -1;
            XmNy = 1;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 8;
                    XmNy = 8;
                    XmNlabelString = 
                    compound_string("ETA:  From");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText etamin;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 35;
                    XmNy = 10;
                    XmNlabelString = 
                    compound_string("To");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText etamax;
            };
        };
    laymin: XmText 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 11;
            XmNheight = 25;
            XmNcolumns = 2;
            XmNvalue = 
            "1";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(133);
                };
            };
        };
    laymax: XmText 
        {
        arguments
            {
            XmNx = 56;
            XmNy = 10;
            XmNheight = 25;
            XmNcolumns = 2;
            XmNvalue = 
            "17";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(134);
                };
            };
        };
    caehphirow: XmRowColumn 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNisHomogeneous = false;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_TIGHT;
            XmNx = 0;
            XmNy = 0;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 8;
                    XmNy = 8;
                    XmNlabelString = 
                    compound_string("PHI:  From");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText phimin;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 35;
                    XmNy = 10;
                    XmNlabelString = 
                    compound_string("To");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText phimax;
            };
        };
    cachcaeh_text: XmText 
        {
        arguments
            {
            XmNheight = 40;
            XmNcolumns = 8;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 47;
            XmNy = 9;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(136);
                };
            XmNactivateCallback = procedures
                {
                d0xcaeh(2);
                };
            };
        };
    VUITaaaad: XmLabel 
        {
        arguments
            {
            XmNlabelString = 
            compound_string("Pointer:");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-O-*--*-100-*-*-*-*-ISO8859-1'));
            XmNx = 5;
            XmNy = 2;
            };
        };
    cachdoit: XmPushButton 
        {
        arguments
            {
            XmNx = 6;
            XmNy = 3;
            XmNlabelString = 
            compound_string("Fetch");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xcaeh(0);
                };
            };
        };
    VUITaaabs: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNtopOffset = 10;
            XmNorientation = XmHORIZONTAL;
            XmNnumColumns = 2;
            XmNpacking = XmPACK_COLUMN;
            };
        controls
            {
            XmRowColumn caehlayrow;
            XmRowColumn caehphirow;
            XmRowColumn caehetarow;
            XmRowColumn caehetrow;
            };
        };
    useall: XmToggleButton 
        {
        arguments
            {
            XmNx = 9;
            XmNy = 8;
            XmNlabelString = 
            compound_string("All CAEH");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNset = true;
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xcaeh(2);
                };
            };
        };
    useptr: XmToggleButton 
        {
        arguments
            {
            XmNx = 20;
            XmNy = 7;
            XmNlabelString = 
            compound_string("CACH/JPTS");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                d0xcaeh(3);
                };
            };
        };
    VUITaaabl: XmRowColumn 
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 11;
            XmNtopOffset = 10;
            XmNorientation = XmVERTICAL;
            XmNpacking = XmPACK_TIGHT;
            XmNnumColumns = 1;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            XmNleftWidget = XmRowColumn VUITaaabs;
            };
        controls
            {
            XmRadioBox 
                {
                arguments
                    {
                    XmNwidth = 25;
                    XmNheight = 25;
                    XmNborderWidth = 1;
                    XmNisHomogeneous = false;
                    XmNx = 0;
                    XmNy = 7;
                    };
                controls
                    {
                    XmToggleButton useall;
                    XmToggleButton useptr;
                    };
                };
            XmLabel VUITaaaad;
            XmText cachcaeh_text;
            };
        };
    printcaeh: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 8;
            XmNlabelString = 
            compound_string("Print");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xcaeh(4);
                };
            };
        };
    byname: XmCascadeButton 
        {
        arguments
            {
            XmNx = 39;
            XmNy = 36;
            XmNlabelString = 
            compound_string("By Name");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton prxxxxsc;
                    XmPushButton prxxxxfi;
                    };
                };
            };
        };
    byaddress: XmCascadeButton 
        {
        arguments
            {
            XmNx = 24;
            XmNy = 7;
            XmNlabelString = 
            compound_string("By Address");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        controls
            {
            XmPulldownMenu 
                {
                arguments
                    {
                    XmNx = 44;
                    XmNy = 13;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton VUITaaabk;
                    XmPushButton VUITaaabq;
                    };
                };
            };
        };
    VUITaaabk: XmPushButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 3;
            XmNlabelString = 
            compound_string("To Screen");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(10);
                };
            };
        };
    VUITaaabq: XmPushButton 
        {
        arguments
            {
            XmNx = 16;
            XmNy = 13;
            XmNlabelString = 
            compound_string("To File");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-120-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0util_proc(11);
                };
            };
        };
    caehlayrow: XmRowColumn 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNisHomogeneous = false;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_TIGHT;
            XmNx = 5;
            XmNy = 2;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 8;
                    XmNy = 8;
                    XmNlabelString = 
                    compound_string("LAYER:  From");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText laymin;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 35;
                    XmNy = 10;
                    XmNlabelString = 
                    compound_string("To");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText laymax;
            };
        };
    caehetrow: XmRowColumn 
        {
        arguments
            {
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 1;
            XmNisHomogeneous = false;
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_TIGHT;
            XmNx = 195;
            XmNy = 58;
            };
        controls
            {
            XmLabel 
                {
                arguments
                    {
                    XmNx = 8;
                    XmNy = 8;
                    XmNlabelString = 
                    compound_string("ET:  From");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText etmin;
            XmLabel 
                {
                arguments
                    {
                    XmNx = 35;
                    XmNy = 10;
                    XmNlabelString = 
                    compound_string("To");
                    XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
                    };
                };
            XmText etmax;
            };
        };
    etmin: XmText 
        {
        arguments
            {
            XmNx = 22;
            XmNy = 11;
            XmNheight = 25;
            XmNcolumns = 5;
            XmNvalue = 
            "-1000";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(138);
                };
            };
        };
    etmax: XmText 
        {
        arguments
            {
            XmNx = 56;
            XmNy = 10;
            XmNheight = 25;
            XmNcolumns = 5;
            XmNvalue = 
            "1000";
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                save_text_tag(139);
                };
            };
        };
    caehdefs: XmPushButton 
        {
        arguments
            {
            XmNx = 2;
            XmNy = 29;
            XmNlabelString = 
            compound_string("Defaults");
            XmNshadowThickness = 4;
            XmNalignment = XmALIGNMENT_CENTER;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                d0xcaeh(5);
                };
            };
        };
    cahitsrc: XmRadioBox 
        {
        arguments
            {
            XmNx = 125;
            XmNy = 17;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = true;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = true;
            };
        controls
            {
            XmToggleButton encahits;
            XmToggleButton discahits;
            };
        };
    encahits: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 7;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(19);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(140);
                };
            };
        };
    discahits: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNarmCallback = procedures
                {
                control_proc(20);
                };
            MrmNcreateCallback = procedures
                {
                save_text_tag(141);
                };
            };
        };
    calorrc: XmRadioBox 
        {
        arguments
            {
            XmNx = 46;
            XmNy = 12;
            XmNwidth = 25;
            XmNheight = 25;
            XmNborderWidth = 0;
            XmNisHomogeneous = true;
            XmNorientation = XmHORIZONTAL;
            XmNadjustLast = true;
            };
        controls
            {
            XmToggleButton VUITaaaao;
            XmToggleButton VUITaaabt;
            };
        };
    VUITaaaao: XmToggleButton 
        {
        arguments
            {
            XmNx = 17;
            XmNy = 7;
            XmNlabelString = 
            compound_string("");
            XmNset = true;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNsensitive = false;
            };
        callbacks
            {
            };
        };
    VUITaaabt: XmToggleButton 
        {
        arguments
            {
            XmNx = 5;
            XmNy = 6;
            XmNlabelString = 
            compound_string("");
            XmNset = false;
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            XmNsensitive = false;
            };
        callbacks
            {
            };
        };
    allpackon: XmPushButton 
        {
        arguments
            {
            XmNx = 150;
            XmNy = 12;
            XmNlabelString = 
            compound_string("ON");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(30);
                };
            };
        };
    allpackoff: XmPushButton 
        {
        arguments
            {
            XmNx = 143;
            XmNy = 8;
            XmNlabelString = 
            compound_string("OFF");
            XmNfontList = font_table(font('-*-HELVETICA-BOLD-R-*--*-100-*-*-*-*-ISO8859-1'));
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                control_proc(31);
                };
            };
        };
    outnth: XmPushButton 
        {
        arguments
            {
            XmNx = 14;
            XmNy = 79;
            XmNlabelString = 
            compound_string("N-events...");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                out_event(14);
                };
            };
        };

procedure
!***VUIT_Action UserProc myquit ***

    quitting(integer);
!***VUIT_Action UserProc help_d0x ***

    help_proc(integer);
!***VUIT_Action UserProc d0_init ***

    main_init;
!***VUIT_Action UserProc save_text ***

    save_text_tag(integer);
!***VUIT_Action UserProc cfiletype ***

    specify_file_type(integer);
!***VUIT_Action UserProc fileopen ***

    file_open(integer);
!***VUIT_Action UserProc control ***

    control_proc(integer);
!***VUIT_Action UserProc czebra ***

    zebra_proc(integer);
!***VUIT_Action UserProc cd0util ***

    d0util_proc(integer);
!***VUIT_Action UserProc csetmode ***

    mode_proc(integer);
!***VUIT_Action UserProc csearch ***

    search_type(integer);
!***VUIT_Action UserProc cinterrupt ***

    interrupt;
!***VUIT_Action UserProc cset_store ***

    store_type(integer);
!***VUIT_Action UserProc cselect ***

    select_proc;
!***VUIT_Action UserProc cformat ***

    format_proc(integer);
!***VUIT_Action UserProc czeblst ***

    zeblst_proc(integer);
!***VUIT_Action UserProc cnavigate ***

    navigate_proc(integer);
!***VUIT_Action UserProc cagain ***

    again_proc;
!***VUIT_Action UserProc csetcurtop ***

    set_curtop(integer);
!***VUIT_Action Manage raw_form ***

    man_raw;
!***VUIT_Action Unmanage raw_form ***

    unman_raw;
!***VUIT_Action UserProc xdecode ***

    decodeit(integer);
!***VUIT_Action UserProc crawdata ***

    rawcall(integer);
!***VUIT_Action UserProc evout ***

    out_event(integer);
!***VUIT_Action UserProc cprintit ***

    printit(integer);
!***VUIT_Action Manage tree_form ***

    man_tree;
!***VUIT_Action Unmanage tree_form ***

    unman_tree;
!***VUIT_Action UserProc undotree ***

    unman_ztree;
!***VUIT_Action Unmanage nav_control ***

    um_navc;
!***VUIT_Action Unmanage nav_zeb ***

    um_navz;
!***VUIT_Action Unmanage nav_data ***

    um_navd;
!***VUIT_Action Unmanage xdbank_shell ***

    um_tree;
!***VUIT_Action Manage nav_control ***

    man_navc;
!***VUIT_Action Manage nav_data ***

    man_navd;
!***VUIT_Action Manage nav_zeb ***

    man_navz;
!***VUIT_Action Manage xdbank_shell ***

    man_navt;
!***VUIT_Action UserProc csetout ***

    allout(integer);
!***VUIT_Action Manage physics_bull ***

    manphys;
!***VUIT_Action Unmanage physics_bull ***

    unmanphys;
!***VUIT_Action UserProc cphys ***

    cphysics(integer);
!***VUIT_Action UserProc cseljet ***

    jetsel(integer);
!***VUIT_Action Manage disp_bull ***

    mandisp(integer);
!***VUIT_Action Unmanage disp_bull ***

    unmandisp;
!***VUIT_Action UserProc selectc ***

    selectcol(integer);
    phioff;
!***VUIT_Action UserProc cinfo ***

    allinfo(integer);
!***VUIT_Action Manage physicshelp ***

    manphyshelp;
!***VUIT_Action Unmanage physicshelp ***

    umphyshelp;
!***VUIT_Action Manage maincontrol ***

    manfiles;
!***VUIT_Action Unmanage maincontrol ***

    umfiles;
!***VUIT_Action UserProc selecor ***

    eselcor(integer);
!***VUIT_Action Manage output_bull ***

    manout;
!***VUIT_Action Unmanage output_bull ***

    umout;
!***VUIT_Action Unmanage list_bull ***

    umlist;
!***VUIT_Action Manage list_bull ***

    manlist;
!***VUIT_Action UserProc phirot ***

    rotatephi(integer);
!***VUIT_Action UserProc thetarot ***

    rotatetheta(integer);
!***VUIT_Action UserProc psirot ***

    rotatepsi(integer);
!***VUIT_Action Manage jet_bull ***

    manjetb;
!***VUIT_Action Unmanage jet_bull ***

    umjetb;
!***VUIT_Action Manage pnut_bull ***

    manpb;
!***VUIT_Action Unmanage pnut_bull ***

    umpb;
!***VUIT_Action Manage em_bull ***

    manem;
!***VUIT_Action Unmanage em_bull ***

    umem;
!***VUIT_Action UserProc retree ***

    treesize(integer);
!***VUIT_Action Manage pmuo_bull ***

    manpmuo;
!***VUIT_Action Unmanage pmuo_bull ***

    umpmuo;
!***VUIT_Action Manage colbull ***

    mancol;
!***VUIT_Action Unmanage colbull ***

    umcol;
!***VUIT_Action Manage querybull ***

    manq;
!***VUIT_Action Unmanage querybull ***

    umq;
!***VUIT_Action UserProc d0xquery ***

    doquery(integer);
!***VUIT_Action UserProc setquery ***

    squery;
!***VUIT_Action Manage reqzeb ***

    manzq;
!***VUIT_Action Unmanage reqzeb ***

    umzq;
!***VUIT_Action Manage qhelp ***

    manqh;
!***VUIT_Action Unmanage qhelp ***

    umqh;
!***VUIT_Action Manage bullhist ***

    manhist;
!***VUIT_Action Unmanage bullhist ***

    umhist;
!***VUIT_Action UserProc dxhisto ***

    d0xhist;
!***VUIT_Action Manage histform ***

    manhform;
!***VUIT_Action Unmanage histform ***

    umhform;
!***VUIT_Action UserProc d0xhdraw ***

    chdraw(integer);
!***VUIT_Action Manage kunzb ***

    mankunz;
!***VUIT_Action Unmanage kunzb ***

    umkunzb;
!***VUIT_Action Manage tupbull ***

    mantup;
!***VUIT_Action Unmanage tupbull ***

    umtup;
!***VUIT_Action Manage physmc ***

    manpmc;
!***VUIT_Action Unmanage physmc ***

    umpmc;
!***VUIT_Action Manage decodebull ***

    mandec;
!***VUIT_Action Unmanage decodebull ***

    umdec;
!***VUIT_Action Manage d0xuserbull ***

    mand0x;
!***VUIT_Action Unmanage d0xuserbull ***

    umd0x;
!***VUIT_Action Manage querysubbull ***

    manqsub;
!***VUIT_Action Unmanage querysubbull ***

    umqsub;
!***VUIT_Action Manage d0packages ***

    manpack;
!***VUIT_Action Unmanage packform ***

    umpack;
!***VUIT_Action Manage d0dadform ***

    mand0dad;
!***VUIT_Action Unmanage d0dadform ***

    umd0dad;
!***VUIT_Action Manage ptau_bull ***

    manpt;
!***VUIT_Action Unmanage ptau_bull ***

    umpt;
!***VUIT_Action Manage enable_bull ***

    manen;
!***VUIT_Action Unmanage enable_bull ***

    umen;
!***VUIT_Action Manage track_bull ***

    mantrk;
!***VUIT_Action Unmanage track_bull ***

    umtrk;
!***VUIT_Action UserProc d0tracks ***

    d0xtracks(integer);
!***VUIT_Action Manage cal_bull ***

    mancal;
!***VUIT_Action Unmanage cal_bull ***

    umcal;
!***VUIT_Action UserProc d0caeh ***

    d0xcaeh;

value
    nav_x: 0;
    nav_y: 0;

end module;

