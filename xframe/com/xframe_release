#! /bin/csh -f
source `uff $d0unix/d0local.cshrc`
#------------------------------------------------------------------------------
#
# Name:    link
#
# Purpuse: Link object files and libraries to produce an executable.
#
# Usage: 
#
#   link [-cd] [-o exe] file1 file2 ...
#
# Options:
#
# -c  - Use D0cernlib - default is Computing Division cernlib (setup cern).  
# -d  - Use debug libraries.  Default is non-debug.
# -g -t -b  for gamma, test, or beta release (nothing done)
#
# Arguments:
#
# none
#
# Created 12-Feb-1991   Herbert B. Greenlee
# Modified 16-Dec-1992  Drew Baden
#
#------------------------------------------------------------------------------
#
# Set a few defaults
#
set prefix = ''
set cernlib = ( `uff $CRNLIB/libpacklib.a` \
		`uff $CRNLIB/libmathlib.a` \
		`uff $CRNLIB/libkernlib.a` )
set exe = 'd0x'
set xlft = ''
#
# Scan arguments for source files, locally processed options and debug options.
# Other arguments are passed directly to f77 and cc. 
#
set argv = (`getopt cdgtb $argv`)
while("$argv[1]" != '--')
  switch($argv[1])
  case -c:
    set cernlib = ( `uff $d0cernlib/packlib.a` \
		    `uff $d0cernlib/mathlib.a` \
		    `uff $d0cernlib/kernlib.a` )
    shift
    breaksw
  case -d:
    set xlft = ' -g '
    set prefix = 'deb_'
    shift
    breaksw
  case -t:
    shift
    breaksw
  case -g:
    shift
    breaksw
  case -b:
    shift
    breaksw
  endsw
end
shift    # drop --
#
# Define standard options and libraries
#
set stdopts = ' d0x.o '
set stdlibs = ( `uff $d0xframe/${prefix}xframe.a` \
            `uff $d0d0user/${prefix}physics.a` \
	    `uff $d0qcd/${prefix}qcd.a` \
            `uff $d0physics_util/${prefix}physics_util.a` \
            `uff $d0isazeb/${prefix}isazeb.a` \
	    `uff $d0nodi3000/${prefix}nodi3000.a` \
	    `uff $d0calor_off/${prefix}calor_off.a` \
	    `uff $d0calor_filter/${prefix}calor_filter.a` \
	    `uff $d0level2/${prefix}level2.a` \
	    `uff $d0level1/${prefix}level1.a` \
	    `uff $d0level0/${prefix}level0.a` \
	    `uff $d0calor_off/${prefix}calor_off.a` \
	    `uff $d0muon_reco/${prefix}muon_reco.a` \
	    `uff $d0util/${prefix}util.a` \
	    `uff $d0calor_util/${prefix}calor_util.a` \
	    `uff $d0muon_util/${prefix}muon_util.a` \
	    `uff $d0cd_util/${prefix}cd_util.a` )
set stdlibs2 = ( \
	    `uff $d0trd_util/${prefix}trd_util.a` \
	    `uff $d0cdc_util/${prefix}cdc_util.a` \
	    `uff $d0fdc_util/${prefix}fdc_util.a` \
	    `uff $d0vtx_util/${prefix}vtx_util.a` \
	    `uff $d0cd_util/${prefix}cd_util.a` \
            `uff $d0physics_util/${prefix}physics_util.a` \
	    `uff $d0qcd/${prefix}qcd.a` \
	    `uff $d0calor_util/${prefix}calor_util.a` \
	    `uff $d0level0/${prefix}level0.a` \
	    `uff $d0cd_util/${prefix}cd_util.a` \
	    `uff $d0cdc_util/${prefix}cdc_util.a` \
	    `uff $d0dbl3/${prefix}d0dbl3.a` \
	    `uff $d0dbl3/${prefix}dbl3.a` \
            `uff $d0compack/${prefix}compack.a` \
            `uff $d0general/${prefix}general.a` \
	    `uff $d0unix/${prefix}unix.a` \
            $cernlib \
            -lMrm -lXm -lXt -lX11 -lcurses -lPW )
#
# extract tree.o from library
#
ar x ${prefix}xframe.a tree.o
#
# compile d0x.c explicitly
#
cc -c $ccflags `uff $d0xframe/source/d0x.c`
#
# Define link command
#
set link = "$f77 $ldflags $xlft -o d0x d0x.o tree.o $stdlibs "
set link2 = "$stdlibs2 $syslibs"
echo $link $link2
eval $link $link2
#
# now make the .uid file
#
uil -o source/d0xuid `uff $d0xframe/source/d0x.uil`
uil -o source/d0xbw `uff $d0xframe/source/d0xbw.uil`
