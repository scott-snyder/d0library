
******************************
D0$XFRAME$ROOT:[000000.SOURCE]BLOCAT.FOR;1

      SUBROUTINE BLOCAT(main,bank,pointer)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]CFCHAR.FOR;1

      SUBROUTINE CFCHAR(mode,ifile,file,len)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]DATASTATE.FOR;1

      SUBROUTINE DATASTATE(what,state)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]DZSURV.FOR;1

      SUBROUTINE DZSURV (CHTEXT,IXDIV,LBANK)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]DZSURVME.FOR;1

      SUBROUTINE DZSURVME(outchr,nline,CHTEXT,IXDIV,LBANK)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]EMDISPQUANS.FOR;1

      SUBROUTINE EMDISPQUANS(LCLUS,QUANS,NAMQUANS,NQUANS,PDPTH)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]EMSTUFF.FOR;1

      subroutine emstuff(lpoint,vect)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FBLIST.FOR;1

      SUBROUTINE FBLIST(mode,iname,result)
      subroutine fbankok(this,parent,ok,st)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FCONTROL.FOR;1

      SUBROUTINE FCONTROL(tag,nskip)
      logical function refound(run,rec)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FD0UTIL.FOR;1

      SUBROUTINE FD0UTIL(tag,baddr,temp)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FEVOUT.FOR;1

      SUBROUTINE fEVOUT(tag,mode,length,ifile)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FFILETYPE.FOR;1

      SUBROUTINE FFILETYPE(mode,type)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FFORMAT.FOR;1

      SUBROUTINE FFORMAT(mode)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FGOBJ.FOR;1

      SUBROUTINE FGOBJ(threshold,use_ecor,dojnep,nobj,maxobj,baddr,
      subroutine fgeml(addr,depths,cquans)
      subroutine fgemlist(addr,quans,inamquans,nquans,depths)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FGOBJMC.FOR;1

      SUBROUTINE FGOBJMC(nobj,maxobj,jetid,

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FINTERRUPT.FOR;1

      SUBROUTINE FINTERRUPT(dummy)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FMODE.FOR;1

      SUBROUTINE FMODE(mode)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FOENABLE.FOR;1

      SUBROUTINE FOENABLE(dum)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FRAWDATA.FOR;1

      SUBROUTINE FRAWDATA(tag,value,itemp,ncol)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FSEARCH.FOR;1

      SUBROUTINE FSEARCH(tag,temp)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FSETLIN.FOR;1

      SUBROUTINE FSETLIN(linear)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FSETOFF.FOR;1

      SUBROUTINE FSETOFF(mode)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FSETOUT.FOR;1

      SUBROUTINE FSETOUT(w,tag,reason)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FSET_STORE.FOR;1

      SUBROUTINE FSET_STORE(mode)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FZEBLST.FOR;1

      SUBROUTINE FZEBLST(ichar)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FZEBRA.FOR;1

      SUBROUTINE FZEBRA(tag,path)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]FZWIDGET.FOR;1

      SUBROUTINE FZWIDGET(head)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]GETCRATE.FOR;1

      SUBROUTINE GETCRATE(bank,maxcrate,ncrates,icrates,ichans)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]GETPAR.FOR;1

      SUBROUTINE GETPAR(npar,prompt,type,value)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]GETZEBD.FOR;1

      SUBROUTINE GETZEBd(mode,baddr,BANK,MWV,WRUP,LWV,IERR)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]GETZEBLST.FOR;1

      SUBROUTINE GETZEBLST(BANK,MWV,WRUP,LWV,IERR)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]GTLINE.FOR;1

      SUBROUTINE GTLINE(wrup,nr,first6,i,data,mode)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]IAUTO_FMT.FOR;1

      INTEGER FUNCTION IAUTO_FMT(dum)
C-   Outputs : Function value is the format

******************************
D0$XFRAME$ROOT:[000000.SOURCE]INZCOM.FOR;1

      SUBROUTINE INZCOM(I)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]INZSTP.FOR;1

      SUBROUTINE INZSTP

******************************
D0$XFRAME$ROOT:[000000.SOURCE]LEVEL1.FOR;1

      SUBROUTINE LEVEL1(n1,bits,name)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]LEVEL2.FOR;1

      SUBROUTINE LEVEL2(n2,bits,name)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MAPINIT.FOR;1

      SUBROUTINE MAPINIT

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MOVSTR.FOR;1

      SUBROUTINE MOVSTR(CHARIN,OUTSTR)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MUOSTUFF.FOR;1

      SUBROUTINE MUOSTUFF(lpmuo,vect)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MYDROP.FOR;1

      SUBROUTINE MYDROP(which,n,name)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MYISTP.FOR;1

      SUBROUTINE MYISTP( filnam, ierr )

******************************
D0$XFRAME$ROOT:[000000.SOURCE]MYOPEN.FOR;1

      SUBROUTINE MYOPEN(filnam,xopt,lun,ok)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]PRBANK.FOR;1

      SUBROUTINE PRBANK(bank,lun)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]PRJAUX.FOR;1

      SUBROUTINE PRJAUX( PRUNIT, LJAUX, NJAUX, CFL, IFL)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]PRL2EM.FOR;1

      SUBROUTINE PRL2EM( PRUNIT, LL2EM, NL2EM, CFL, IFL)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]READH.FOR;1

      FUNCTION READH(str,tlen)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]READI.FOR;1

      FUNCTION READI(str,tlen)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]READIT.FOR;1

      SUBROUTINE READIT(lun,ok)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]READR.FOR;1

      FUNCTION READR(str,tlen)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]SELJET.FOR;1

      SUBROUTINE SELJET(w,tag,reason)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]SETCAPH.FOR;1

      SUBROUTINE SETCAPH(lpoint)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]SETLIST.FOR;1

      SUBROUTINE setLIST(length,istr,dork)
      entry cllist(length,istr)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]TLEN.FOR;1

      function TLEN(string)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]TREESTATE.FOR;1

      SUBROUTINE TREESTATE(what,state)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]TRNLOG.FOR;1

        subroutine trnlog(logical_name,length,translation,ierr)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]TRULEN.FOR;1

      INTEGER FUNCTION TRULEN(INTXT)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]XCRATE.FOR;1

      SUBROUTINE XCRATE(bank,crate,nchans,chans,clist,ctot,ncol)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]XDADDR.FOR;1

      SUBROUTINE XDADDR(bank)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]XERRMSG.FOR;1

      SUBROUTINE XERRMSG(string)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]XFCLOSE.FOR;1

      SUBROUTINE XFCLOSE(dummy)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]XFOPEN.FOR;1

      SUBROUTINE XFOPEN(file,trans)

******************************
D0$XFRAME$ROOT:[000000.SOURCE]ZEBSTATE.FOR;1

      SUBROUTINE ZEBSTATE(what,state)
