C       These parameters encode the sign of the eta index.
C       These parameters are used to dimension some arrays in the common block.
C       
      INTEGER      POS_ETA, NEG_ETA
      PARAMETER  ( POS_ETA = 0, 
     &             NEG_ETA = 1 )
C
C       ----------------------------------------------------------------------
C       These parameters specify the maximum and minimum quantities for the eta
C       and phi indices of the Trigger towers. 
C       These parameters are used to dimension some arrays in the common block.
C       NOTE the difference between ETA_RANGE_MAX and ETA_MAX. This difference
C       exists because: 1) The Level 1 Data Block only has room for information
C       on 20 ETAs. 2) Existing programs (eg. the Level 1 Simulator Program) 
C       seem to expect only ETA to be confined to a range of [1,20]. 
C       ETA_RANGE_xxx is used internally by LSM to dimension arrays. ETA_xxx is
C       provided for use by existing programs that expect 1 <= ETa.
C       
      INTEGER      ETA_RANGE_MIN, ETA_RANGE_MAX
      PARAMETER  ( ETA_RANGE_MIN = 1,
     &             ETA_RANGE_MAX = 24 )
C
      INTEGER      ETA_MIN, ETA_MAX
      PARAMETER  ( ETA_MIN = 1,
     &             ETA_MAX = 20 )
C
      INTEGER      PHI_MIN, PHI_MAX
      PARAMETER  ( PHI_MIN = 1,
     &             PHI_MAX = 32 ) 
C
C       ----------------------------------------------------------------------
C       These parameters specify the Coverage and number of Large Tiles. 
C       A Large Tile is formed by the sum of 8 Trigger Towers in Phi by 4
C       Trigger Towers in Eta. The only energy quantity built for Large Tile is
C       Tot Et (EM+HD). The Large Tile Energy Signals are built on the Tier#1
C       Px and Py CAT2 cards by doulbe cycling these momentum trees with a
C       lookup not including the sin/cos(phi) projeciton. Each Large Tile
C       energy signal is examined using one of the comparators on the CAT2.
C
C-      The ETA width in Trigger Towers of one Large Tile
C
      INTEGER TT_ETA_PER_LT
      PARAMETER (TT_ETA_PER_LT = 4)
C
C       The PHI width in Trigger Towers of one Large Tile
C
      INTEGER TT_PHI_PER_LT
      PARAMETER (TT_PHI_PER_LT = 8)
C
C       The total number of large tile indices
C
      INTEGER LT_ETA_MIN, LT_ETA_MAX
      PARAMETER (LT_ETA_MIN = 1, LT_ETA_MAX = ETA_MAX / TT_ETA_PER_LT)
C
      INTEGER LT_PHI_MIN, LT_PHI_MAX
      PARAMETER (LT_PHI_MIN = 1, LT_PHI_MAX = PHI_MAX / TT_PHI_PER_LT)
C
C       ----------------------------------------------------------------------
C       These parameters define the type of Trigger Tower. There are two basic
C       tower types, the electro-magnetic (EM) and the hadronic (HD) trigger
C       tower. Except at very high rapidity, all EM and HD towers are paired
C       into projective Total (TOT) Trigger Towers and their EM and HD
C       signals are summed for processing certain quantities. 
C       These parameters are used to dimension some arrays in the common block.
C       
      INTEGER      EM_TOWER, HD_TOWER, TOT_TOWER
      PARAMETER  ( EM_TOWER = 1, 
     &             HD_TOWER = 2,
     &             TOT_TOWER = 3 )
C
C       ----------------------------------------------------------------------
C       These parameters encode the type of coordinate of a trigger Tower
C       (EM, HD or TOT) nominal center used in perfroming the z-correction.
C       These parameters are used to dimension some arrays in the common block.
C       
C       ********* not referenced outside of the library ********
C      
      INTEGER      R_COORD, Z_COORD 
      PARAMETER  ( R_COORD = 0, Z_COORD = 1 )
C
C       ----------------------------------------------------------------------
C       Several quantities are looked up:
C       Using the EM Trigger Tower signal, two quantities are successively
C       looked up on the same PROM: The first quantity is the z-corrected EM
C       Transverse Energy (Et), the second is referenced as EM L2.
C       Using the HD Trigger Tower signal, two quantities are successively
C       looked up on the same PROM: The first quantity is the z-corrected HD
C       Transverse Energy (Et), the second is referenced as HD L2.
C       Using the sum EM+HD=TOT Trigger Tower signal, two quantities are
C       simultaneously looked up on two separate PROMs: One is the component Px 
C       of the z-corrected TOT Et along the x-axis, the other is the component 
C       Py of the z-corrected TOT Et along the y-axis.
C       These parameters are used to dimension some arrays in the common block.
C       
      INTEGER      EM_ET_QUANT, EM_L2_QUANT, 
     &             HD_ET_QUANT, HD_L2_QUANT, 
     &             PX_QUANT, PY_QUANT, 
     &             TOT_ET_QUANT, TOT_L2_QUANT
      PARAMETER  ( EM_ET_QUANT  = 1, EM_L2_QUANT  = 2, 
     &             HD_ET_QUANT  = 3, HD_L2_QUANT  = 4, 
     &             PX_QUANT     = 5, PY_QUANT     = 6,
     &             TOT_ET_QUANT = 7, TOT_L2_QUANT = 8 )
C
C       ----------------------------------------------------------------------
C       These parameter encode the prom type used to generate a given quantity.
C       See the previous parameters for further details.
C       These parameters are used to dimension some arrays in the common block.
C       
C       ********* not referenced outside of the library ********
C      
      INTEGER      EM_PROM, HD_PROM, PX_PROM, PY_PROM
      PARAMETER  ( EM_PROM = 1, HD_PROM = 2, 
     &             PX_PROM = 3, PY_PROM = 4 )
C
C       ----------------------------------------------------------------------
C       These parameters should be used to specify a threshold type as a
C       parameter to the subroutine for translating Trigger Tower (note TT_) 
C       thresholds from GeV units to a downloadable byte.
C       
      INTEGER      TT_EMET_THRTYP, TT_HDVETO_THRTYP, TT_TOTET_THRTYP
      PARAMETER  ( TT_EMET_THRTYP   = 10, 
     &             TT_HDVETO_THRTYP = 11,
     &             TT_TOTET_THRTYP  = 12 )
C
C       ----------------------------------------------------------------------
C       These parameters should be used to specify a threshold type as a
C       parameter to the subroutine for translating global (note GL_)
C       thresholds on global quantities summed over the whole detector from GeV
C       units to a downloadable integer.
C       
C       The existing thresholds are a subset of the available quantities. 
C       They are mapped onto the individual quantities so that the proper tree
C       offset can be accessed.
C       
      INTEGER      GL_EMET_THRTYP,  GL_EML2_THRTYP,
     &             GL_HDET_THRTYP,  GL_HDL2_THRTYP,
     &             GL_TOTET_THRTYP, GL_TOTL2_THRTYP
      PARAMETER  ( GL_EMET_THRTYP  = 20, 
     &             GL_EML2_THRTYP  = 21,
     &             GL_HDET_THRTYP  = 22, 
     &             GL_HDL2_THRTYP  = 23,
     &             GL_TOTET_THRTYP = 24,
     &             GL_TOTL2_THRTYP = 25 )
C
C       ----------------------------------------------------------------------
C       These parameters specify the maximum and minimum quantities for the
C       Level 0 Bin Numbers (L0_BIN_*), for the Level 1 Lookup Page Logical
C       Numbers (PAGE_NUM_*), and for the Physical Page number (PAGE_INDEX_*)
C       in the z-correcting lookup system.
C       These parameters are used to dimension some arrays in the common block.
C       
C       ********* not referenced outside of the library ********
C      
      INTEGER      L0_BIN_MIN, L0_BIN_MAX
      PARAMETER  ( L0_BIN_MIN = -15, L0_BIN_MAX = +15 )
C
      INTEGER      PAGE_NUM_MIN, PAGE_NUM_MAX
      PARAMETER  ( PAGE_NUM_MIN = -3, PAGE_NUM_MAX = +3 )
C
      INTEGER      PAGE_INDEX_MIN, PAGE_INDEX_MAX 
      PARAMETER  ( PAGE_INDEX_MIN = 1, PAGE_INDEX_MAX = 8 ) 
C
C       ----------------------------------------------------------------------
C       These parameters encode the lower and higher boundary type of each
C       of the Level 0 Bins segment along the z-axis.
C       These parameters are used to dimension some arrays in the common block.
C       
C       ********* not referenced outside of the library ********
C      
      INTEGER      Z_LOW, Z_HIGH
      PARAMETER  ( Z_LOW = 0, Z_HIGH = 1 )
C
C       ----------------------------------------------------------------------
      INTEGER      DEPOSITED_ENERGY, TRANSVERSE_ENERGY
      PARAMETER  ( DEPOSITED_ENERGY = 1, TRANSVERSE_ENERGY = 2 )
C
C       ----------------------------------------------------------------------
      LOGICAL LV1_USE_ARTIFICIAL_EVENTS
      PARAMETER (LV1_USE_ARTIFICIAL_EVENTS = .FALSE.)
      LOGICAL LSM_SANITY_CHECKS
      PARAMETER (LSM_SANITY_CHECKS = .TRUE.)
      LOGICAL LV1_DEBUGGING_DUMPS
      PARAMETER (LV1_DEBUGGING_DUMPS = .FALSE.)
      LOGICAL VERIFY_FAST_SIMULATION
      PARAMETER (VERIFY_FAST_SIMULATION = .FALSE.)
      LOGICAL DEBUG_COOR_PARSER
      PARAMETER (DEBUG_COOR_PARSER = .FALSE.)
      INTEGER LV1_DUMP_TT_ENERGY
      PARAMETER (LV1_DUMP_TT_ENERGY = 2)
      INTEGER LV1_DUMP_DATABLOCK
      PARAMETER (LV1_DUMP_DATABLOCK = 0)
      INTEGER LV1_DUMP_FASTSIMUL
      PARAMETER (LV1_DUMP_FASTSIMUL = 3)
