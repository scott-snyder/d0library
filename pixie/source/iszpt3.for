C===========================================================
      SUBROUTINE ISZPT3(NPART,ID,PX,PY,PZ,P,THETA)
C============================================================
C
C  Description:  Displays tracks generated by ISAJET with
C  ============  with lengths proportional to Pt 3D
C
C  Author:
C  =======
C  Tami Kramer
C
C  Revision History:
C  ==================
C  Original Creation - December 23,1987
C
C=============================================================
C
      IMPLICIT NONE
      INCLUDE 'D0$INC:GRAPHF77.INC'
C
C  Local Declarations:
C  ====================
C
      INTEGER J               ! Loop variables
      INTEGER I3D             ! Calling mode indicator for ISZEVT
      INTEGER SI              ! Max no. of particles
      PARAMETER(SI=1000)
      INTEGER ID(SI)          ! ID of particles returned from GIPART
      INTEGER NPART           ! Actual no. of parts returned from GIPART
      REAL PX(SI),PY(SI)      ! XYZ components of momentum
      REAL PZ(SI)
      REAL P(SI)              ! Total momentum
      REAL THETA(SI)          ! Angle of particle
      REAL PT(SI)             ! Calculated Pt of track
      REAL PI                 ! 3.1416
      REAL PTMAX              ! Max Pt of all particles - used to set
C                             ! windows for graphics.
      REAL DUM                ! Dummy variable
      REAL RMAT(4,4)          ! Rotation matrix
      REAL PTSCAL             ! Scaling factors for displaying 
      REAL PZSCAL,PTZSCA     ! graphics in 3D view
C
C  Data Statments:
C  ===============
C
      DATA PI/3.1416/
      DATA DUM/0./
C
C  Executable Code:
C  ================
C
C  Find Max PT.
C  =============
C
      PTMAX = 0.
      DO 36 J = 1,NPART
         PT(J) = SQRT(PX(J)**2+PY(J)**2)
         IF (PT(J) .GT. PTMAX) PTMAX = PT(J)
   36 CONTINUE
C
C  Setup scales for the window for the 3D view..
C  ================================================
C
      PTSCAL = .5*PTMAX
      PTZSCA = .4*PTMAX
      PZSCAL = .2*PTMAX
      CALL JWINDO(-PTSCAL,PTSCAL,-PTSCAL,PTSCAL)
C
C  Define rotation matrix for the 3D view...
C  ==============================================
C
      CALL JTRANS(RMAT,8,-65.,DUM,DUM,DUM,DUM,DUM,DUM)
      CALL JBUILD(RMAT,7,-10.,DUM,DUM,DUM,DUM,DUM,DUM)
      CALL JMODEL(RMAT)
      CALL JMODON(.TRUE.)
C
C  Draw 3D view...
C  ================
C
      CALL PUOPEN
         CALL PXBOX(0.,0.,0.,PZSCAL,PZSCAL,PTZSCA)
         I3D = 1
         CALL ISZEVT(NPART,ID,PX,PY,PZ,PT,P,THETA,I3D)
      CALL JRCLOS
      CALL JMODON(.FALSE.)
  999 CONTINUE
      RETURN
      END
C
