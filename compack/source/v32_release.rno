.ap
.p 2 1 2
.style headers 4,0,6,4,7,2,1,7,4
.layout 1,3
.no headers
.flags bold
#
.b 2
.rm 75
.lm 9
.c
^*COMPACK Version 3.2 Release Notes.\*
.b 2
.c
J. S. Hoftun
.c
Brown University
.flags substitute
.c ;23 March 1987
.noflags substitute
.noflags accept
.hl ^*Introduction\*
 Described in this note are the changes to COMPACK as implemented in version 3.2
There are NO changes to calling sequences at the application level, and this
release is fully compatible with the previous release (V3.1). This version is
mostly a cosmetic upgrade of V3.1 It uses the screen manager (SMG) in a way
that makes the screen appear clean at most times. There are also a few added
features and fixes which makes older features work better.
.hl ^*New routines\*
.hl+1 DEFCOL
 Purpose: Set number of columns in menu display.
 Calling sequence:###CALL DEFCOL(NUMCOL)
.b                                                                
.lm +25
.i -23;Argument(s):##NUMCOL:##Number of columns to use.
.lm -25
 Notes:##Only 1 or 2 columns work well for a normal screen.
.lm +10
This routine may be called before a call to INTMEN to set the column number
to 1, it will then be easier for the user to move around in a short menu.
.lm -10
.hl LENINT
 Purpose: Find number of characters needed to print an integer.
 Declaration: ##INTEGER LENINT
 Calling sequence:###I=LENINT(INT)
 Return value:###The number of characters needed to print integer.
.b                                                                
.lm +25
.i -23;Argument(s):##INT:###Integer to find length of.
.lm -25
 Notes:##Meant to be used in FORMAT statments to print integers
.lm +10
exactly filling the space wanted. In VAX-FORTRAN one may use 
<INTEGER-expression> anywhere a number of digits etc. is allowed in a FORMAT
statement. This is particularly useful in writing default or current values
into a prompt string before passing it to GETPAR. 
.lm -10
.hl SETLIN 
 Purpose: Set number of lines to be used in split screen mode.
 Calling sequence:###CALL SETMOD(NUMLIN)
.b
.lm +25
.i -23;Argument(s):##NUMLIN:#Number of lines INCLUDING border
to be used for the split screen.
.lm -25
 Notes:##Because of the border, 3 lines is the minimum useful 
.lm +10
number of lines to ask for. If NUMLIN equals 0, no split screen will be
set up. 
.lm -10
.hl-1 ^*New feature \for handling command titles.
 To avoid having anything displayed on the screen which is erased immediately,
a method of indicating which commands should NOT have a title provided
has been implemented. If instead of supplying a title, the line in
the .SET file says NO TITLE, no title will flash on the screen. This line
is the first of the four title lines in a command definition in the .SET
file. In particular, this method should be used for ALL commands which results
in a call to MENUDO and therefore a new menu. 
.hl ^*General Comments\*
 Work has been put into the cosmetic part of how prompts appear on the screen,
how the program ends (it is highly recommended to use EXIMEN as the exit
routine instead of a simple STOP) and other small fixes in the general
appearance on the screen, especially in line mode. The title now ALWAYS
appear on the line above the prompt in line mode.
 ALL commands are now treated the same way as far as finding the unique part
is concerned. Typing just H at the line mode prompt will give HELP provided
there are no other commands at that level which starts with an H. It will
signal ambiguity also for the operational commands if there are other commands
starting with the same sequence of letters. Remember that all commands are
case insensitive.
 If the program is being run as a defined image (by having a NAME :==
$DEVICE:[DIREC]NAME) in the setup file, it now works very well to enter a
command on the VMS command line (just type "NAME command"). The command entered
in this way may be complete or it will ask for missing parameters as usual in
line mode. It may also run a command file in this mode. An initial command file
may be used by typing "NAME/COM=name" at the VMS prompt. These two methods may 
be combined.
