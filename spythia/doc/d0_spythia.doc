                                                       D0_SPYTHIA
                                                       27-Nov-1995 Adam Lyon
                                                        1-Jan-1995 ALL


                         D0 IMPLEMENTATION OF SPYTHIA


  This file explains how to run Spythia, a version of Pythia written
by S. Mrenna that handles supersymmetric particles and processes.
Spythia has been interfaced with D0 routines so that it is mostly
controlled by an RCP file.  It also produces isajet style particle
banks so that the output files can be processed by Geant and Reco
without modification.  The D0 implementation is based on Norm Graf's
D0 Pythia interface.  Note that Spythia is a full SUSY event
generator: it calculates cross sections and branching ratios for SUSY
processes as well as actually generating events, similar to
ISAJET/ISASUSY.

Running Spythia
---------------

(The below is appropriate for VAX and unix machines, except where
noted.  Remember that unix is case sensitive, so all commands below
should be typed in lower case).

1) Type "d0setup spythia".  This command sets logicals and symbols
   (links and aliases on unix) for the spythia and michmodel commands
   as well as the spythia_rcp file. 

2) Copy the spythia_rcp file to your area and modify accordingly.  See
   below for information about the RCP file.

3) Create the SUSY model file with michmodel.  Type "michmodel" to
   run the program. Answer the questions.  The program creates a file
   called susyparams.out (watch out - on unix an old version of
   susyparams.out will be overwritten).  Copy susyparams.out to the
   file name you specified in the spythia_rcp file.  See below for more
   information about michmodel.

4) Run Spythia by typing "spythia".
   Spythia takes a while to run, so you should run Spythia as a batch job
   (or in the background on unix).


MICHMODEL
---------

The SUSY model parameters must be passed to Spythia through the
susyparams.out file (or whatever file you specify under the
SUSYPARAM_FILE in the SPYTHIA_RCP file).  This file must contain all
of the MSSM parameters that Spythia needs, nearly 100 values in all.
Fortunately, a program based on G. Kane's SUGRA to MSSM parameters
algorithm is provided.  Type michmodel (after running the d0setup) and
answer the questions.  You will have to provide the standard SUGRA
parameters: top mass, m0, m1/2, tan beta, A0, and the sign of mu.
Note that the sign of mu is defined in the opposite manner that Baer
and Co. use.  Therefore, if you use -1 for ISAJET/ISASUSY, use +1 for
MICHMODEL.  Note that the code that does the conversion is that used
by Rich Genik in his SUSY parameter space searches and is not official
code; hence no warranties are made.  I did compare the output of
michmodel to Baer's SUGRA->MSSM conversion program, and sparticle
masses matched within a few GeV for the SUGRA points that I tried.
Unfortunately, Baer's program does not calculate some of the MSSM
parameters that Spythia needs, and thus it cannot be used to generate
models processed by Spythia.  Any questions about michmodel should go
to me.

SPYTHIA_RCP
-----------

Aside from the susy model parameters file, SPYTHIA_RCP is the only
other file needed to run Spythia.  The RCP file is based on PYTHIA_RCP
by Norm Graf.  (S)Pythia is a very complicated program and has
literally hundreds of parameters and options that can be set and
changed.  A guide to basic Pythia parameters is given in
D0$PYTHIA:[DOC]PYTHIA_GUIDE.DOC (or `uff $d0pythia/doc/pythia_guide.doc`
under unix).  A guide describing S. Mrenna's changes to Pythia can be
found in the spythia doc directory (spythia_mrenna.ps).

Most of the parameters in the RCP file can be left alone.  The ones
you will want to change are,

NUMBER_OF_EVENTS            -- Number of events to generate.

NUMBER_OF_EVENTS_TO_PRINT   -- Spythia will output a large event dump
                               for the specified number of events to
                               the screen.

LEVEL_OF_PRINT              -- Set to 12 to get particle data and 
                               decay channels (see below).

USER_LIST_OF_COMMANDS       -- See below.

OUTPUT_FILE                 -- Name of the zebra file where events
                               should be saved.

SUSYPARAM_FILE              -- Name of the input file with susy
                               parameters generated by michmodel.


You can set and change Spythia options under the heading,
USER_LIST_OF_COMMANDS.  Options are specified by setting or changing a
myriad of (S)Pythia variables and arrays.  Because there are literally
hundreds of options, you specify only the ones you want to alter in
the USER_LIST_OF_COMMANDS RCP array.  The first value in the array
must be how many commands you are giving.  What follows is a list of
variables and array elements to change (see the default in the RCP
file).  To learn all of the Pythia options, get the Pythia manual from
the Computing Division Library on the 8th floor of the High Rise.
Note that Mrenna has changed some of the particle, decay and process
codes to include SUSY, so read his documentation (spythia_mrenna.ps in
spythia doc) as well.

The structure function is selected by the MSTP(51) and MSTP(52) array
elements. You can use internal Pythia structure functions (MSTP(52)=1)
or use the p.d.f. out of CERN PDFLIB (MSTP(52)=2).  The latter is
probably the better choice.  MSTP(51) is the code of the structure
function to use.  A list is given below (and see examples further down):

FOR MSTP(52) = 1   [ INTERNAL PYTHIA ]

  MSTP(51) = 1  EHLQ set 1 (1986 updated version)
           = 2  EHLQ set 2 (1986 updated version)
           = 3  Duke Owens set 1
           = 4  Duke Owens set 2
           = 5  CTEQ2M
           = 6  CTEQ2MS
           = 7  CTEQ2MF
           = 8  CTEQ2ML
           = 9  CTEQ2L
           = 10 CTEQ2D

FOR MSTP(52) = 2   [ **CERN PDFLIB** ]

  In general,
  MSTP(51) = 1000 * NGROUP + NSET  (if you know the PDF numbering scheme)

  Some examples,
  MSTP(51) = 3031 MRSD-'
           = 3041 MRSG
           = 4018 CTEQ2M
           = 4024 CTEQ2PM
           = 4030 CTEQ3M
           = 5002 GRVH0
           = 5006 GRV94H0             

SUSY process selection is controlled by the MSUB and MSEL variables.
Use MSUB to turn on or off a specific process.  A list of the SUSY
processes and their process numbers can be found in spythia_mrenna.ps.
Because there are many processes to control, a group can be turned on
and off with the MSEL variable.  Values for MSEL are as follows:

MSEL =  0   Processes must be defined by individual MSUB commands.
MSEL = 39   All SUSY processes except Higgs production
MSEL = 40   Squark and Gluino production (Includes stop and all decays)
MSEL = 41   Stop production (all decays)
MSEL = 42   Slepton production (all decays)
MSEL = 43   Squark-Gaugino, Gluino-Gaugino production (does not
               include processes in MSEL=40)
MSEL = 44   Gaugino production (all decays)

If you want to exclude a certain process, you must give MSEL = 0 and
only turn on the processes you desire.  Here are two examples...

1) Turn on all squark/gluino/stop production

\ARRAY USER_LIST_OF_COMMANDS
5    ! Don't forget to change this number if you add or delete commands
'MSTP(52)=2'     ! Use CERN PDFLIB
'MSTP(51)=3031'  ! MRSD-minus-prime
'MSEL=40'        ! Squarks - gluinos - stops
'CKIN(3)=10'     ! Minimum Pt for 2 -> 2
'MSTP(81)=0'     ! No multiple interactions
\END

2) Turn on only squark-gluino production

\ARRAY USER_LIST_OF_COMMANDS
12   ! Don't forget to change this number if you add or delete commands
'MSTP(52)=2'     ! Use CERN PDFLIB
'MSTP(51)=3031'  ! MRSD-minus-prime
'MSEL=0'         ! Direct process control
'MSUB(188)=1'    ! Turn on        g g -> gluino gluino
'MSUB(189)=1'    ! Turn on    q_i q_i -> gluino gluino
'MSUB(190)=1'    ! Turn on    q_i q_j -> squark_i squark_j
'MSUB(191)=1'    ! Turn on q_i qbar_j -> squark_i squarkbar_j
'MSUB(192)=1'    ! Turn on q_i qbar_i -> squark_j squarkbar_j
'MSUB(193)=1'    ! Turn on        g g -> squark_i squarkbar_i
'MSUB(194)=1'    ! Turn on      q_i g -> squark_i gluino
'CKIN(3)=10'   ! Minimum Pt for 2 -> 2
'MSTP(81)=0'   ! No multiple interactions
\END

Note that in the above, squark does not include the stop.

You can also suppress decays of particles.  In order to do that, you
need to determine the particles' ID numbers and branching codes.
Since branching ratios depend on the model parameters, it is easiest
to do a short Spythia run to determine the code numbers and then setup
the RCP file to turn off the particular decays (the code numbers can
change depending on what decays are allowed by the model). Below is an
example.

Say you do not want gluinos of squark and gluino events to decay to
charged gauginos (it's just an example).  In the SPYTHIA.RCP file, set
USER_LIST_OF_COMMANDS to example 2) above.  Set the NUMBER_OF_EVENTS
to generate to one and the LEVEL_OF_PRINT to 12.  That will print out
the entire particle/decay list.  Now run spythia (be sure you've made
the model parameters file first).  You will probably want to save the
output to a file and view it in as wide a window as possible.


In the output of the particle/decay data, the first line of each block
has the KF code (particle ID code), the particle name, the
antiparticle name, its charge, color, etc.).  SUSY particles begin at
KF = 41 and end at KF = 74.  Note that a ~ means antiparticle (not
SUSY particle).  See spythia_mrenna.ps for a list of particle codes.
The lines that follow hold the decay information.  KC is the decay
code number.  The on/off number has the following values: 1 = decay is
allowed, 0 = decay is suppressed, -1 = decay is suppressed and not
included in any cross section/width calculations.  The ME number
signifies if any special matrix-element treatment needs to be given
for that decay. Nearly all SUSY particles have this variable set to 0
(no special treatment).  The next number is the branching ratio and
the following words are the decay products.  Note that for gauginos
(chinn), the first number is the superscript and the second is the
subscript (so chi03 is the third neutralino).  If a third number is
tacked on to the end, that is the charge (so chi010 is the lightest
neutralino, and it has zero charge).  A chi12~- is the 2nd chargino
and it's negatively charged (the ~ means its the antiparticle of the
chi12+ -- the antiparticle symbol and the charge symbol are a bit
redundant [don't get confused, for example, chi12~- is NOT the
antiparticle of the chi12-, which is the chi12+; rather, it means the
particle is the antiparticle of the chi12+ and its charge is
negative]).  Look at the particle word following the KF code number to
determine what the normal name is (what follows is the antiparticle
name if it has one).

To suppress a decay, change MDME(KC,1) to 0 where KC is the decay code
number.  For this example, the gluino is KF code 65.  Decays to
charged gauginos are KC codes 1437-1440.  Thus, redo
USER_LIST_OF_COMMANDS so that it reads as follows...

\ARRAY USER_LIST_OF_COMMANDS
16   ! Don't forget to change this number
'MSTP(52)=2'     ! Use CERN PDFLIB
'MSTP(51)=3031'  ! MRSD-minus-prime
'MSEL=0'         ! Direct process control
'MSUB(188)=1'    ! Turn on        g g -> gluino gluino
'MSUB(189)=1'    ! Turn on    q_i q_i -> gluino gluino
'MSUB(190)=1'    ! Turn on    q_i q_j -> squark_i squark_j
'MSUB(191)=1'    ! Turn on q_i qbar_j -> squark_i squarkbar_j
'MSUB(192)=1'    ! Turn on q_i qbar_i -> squark_j squarkbar_j
'MSUB(193)=1'    ! Turn on        g g -> squark_i squarkbar_i
'MSUB(194)=1'    ! Turn on      q_i g -> squark_i gluino
'CKIN(3)=10'   ! Minimum Pt for 2 -> 2
'MSTP(81)=0'   ! No multiple interactions
'MDME(1437,1)=0'   ! Turn off gluino decays to charged gauginos
'MDME(1438,1)=0'
'MDME(1439,1)=0'
'MDME(1440,1)=0'
\END

You may want to rerun spythia to make sure the on/off codes have
indeed changed to zero.

Then change LEVEL_OF_PRINT to 1, specify the NUMBER_OF_EVENTS to
generate and rerun spythia to make the events.


Running of Alpha_s with SUSY
----------------------------

Steve Mrenna (at the request of Henryk Piekarz) has added a routine to evaluate
the strong coupling constant as a function of scale.  Beyond a threshold where
the MSSM colored sector kicks in, the evolution of alpha s depends on the
squarks and gluinos.  The results need to be tweaked to get the correct alpha_s
value at the Z mass.  There are three new RCP parameters that control this
feature (defaults are also shown)...

 SUSY_ALPHA_S            FALSE    ! Use alpha_s running with SUSY
 SUSY_ALPHA_S_THRESH     200.0    !   SUSY threshold for alpha_s running
 SUSY_ALPHA_S_OFFSET     -0.05    !   Offset for alpha_s


SUSY_ALPHA_S  -  If true, the new routine will be used to calculate alpha_s with
SUSY effects.  If false (the default), the old standard routine is used.

If SUSY_ALPHA_S is true...

  SUSY_ALPHA_S_THRESH  = the threshold in GeV where MSSM kicks in.
  SUSY_ALPHA_S_OFFSET  = the "tweaking" constant added to alpha_s to make it
                         correct at MZ.


COMMENTS
--------

I have verified that spythia makes the correct particles (with Isajet
particle codes in the output file) for squark and gluino events but
have made no comparison with output from Isajet itself.  Thanks go to 
Rich Genik for the michmodel program and to Norm Graf for help with 
interfacing spythia with D0 code.

Questions should be directed to lyon@d0ibm3.fnal.gov or FNALD0::LYON.

