.!  Created by Herbert Greenlee on 27-JUN-1991
.!
.PAGE SIZE  56,80
.LEFT MARGIN  10
.RIGHT MARGIN  70
.LAYOUT  3,2
.no autojustify
.no justify
.RIGHT ;Herbert Greenlee
.RIGHT ;27-JUN-1991
.BLANK 3  !--- underlined title on next line
.CENTER ; ^&The standard D0 UNIX environment\&
.BLANK 2
.!------------ main text start here.
UNIX machines do not have an exact equivalent to VAX logical names.  On UNIX
machines, some of
the information that is stored in VAX logical names will be stored in 
environment
variables instead.
This document describes standard D0 UNIX environment variables and some
utilities to manipulate them.  

.hl1 D0library environment variables.

The single most important use of logical names in VMS is to access the
D0library.  Environment variables have been defined in UNIX that point to the
roots of the official and test libraries and to the roots of the individual
sections.  Due to limited environment space, there are no environment 
variables for section subdirectories.  Here are some standard
environment variables.
.blank
.no fill
.tab stops 23 50
Environment	VAX	Description
Variable	Equivalent
============================================================
.blank
LIB__ROOT	D0$DISK:	D0library root
.blank
d0library	D0$DISK:[D0LIBRARY]	Root of official
		library
.blank
d0test	D0$DISK:[D0LIBRARY.TEST]	Root of test
		Library
.blank
d0xxx	D0$xxx, D0$xxx$ROOT	Root of library
		section xxx
.blank
.fill
Note the following:
.list
.le
Case is significant in UNIX.  Most environment variables are lower case.
.le
The D0 environment variables do not contain dollar signs.  (Dollar signs have
special significance in shell commands.)
.end list

.hl2 Search lists.

One of the most attractive features of VAX logical names is the ability to
specify search lists.  This feature is used to put D0library sections into test
mode.  A construction that is roughly equivalent to a search list logical name
is to specify the value of an environment variable as a series of elements
separated by commas and enclosed in braces.  Here is an example of how to put a
library section into test mode.
.blank
.no fill
% setenv d0inc "{$d0test/inc,$d0library/inc}"
.fill
.blank
This how the UNIX version of libtest works (see sec. 3.2).

.hl1 Using environment variables in c shell commands

Variable substitution in shell commands is achieved by prepending a dollar sign
to a variable.  This syntax is used for both simple variables and search
lists.  The latter case has additional ramifications that are illustrated below
by example.
.blank
.no fill
% echo {b,c,d}
b c d
% echo a{b,c,d}e
abe ace ade
% setenv var "{b,c,d}"
% echo "$var"
{b,c,d}
% echo $var
b c d
% echo a${var}e
abe ace ade
.fill
.blank
In the above examples, the {,} lists are treated purely as character strings.
That is, the shell does not attempt to determine whether the expanded list
contains valid filenames.
Here are some "real life" examples showing lists containing filenames.
.blank
.no fill
% libtest inc
% echo "$d0inc"
{/d0library/test/inc,/d0library/inc}
% echo $d0inc/zebcom.inc
/d0library/test/inc/zebcom.inc /d0library/inc/zebcom.inc
.test page 3
% ls $d0inc/zebcom.inc
/d0library/test/inc/zebcom.inc: No such file or directory
/d0library/inc/zebcom.inc
% echo $d0inc/zebcom.*
/d0library/inc/zebcom.inc
.fill
.blank
The last command is an example of shell filename expansion.  Filename
expansion is invoked by including wildcards (*,?,[]) in filenames.  When 
filename expansion is
invoked, the expanded list is guaranteed to contain only existing files.  
(It is an
error if no files are matched.)

Two filters have been provided to process lists generated by filename and 
search list
expansion.  Find__all deletes non-existent files from a list.  Find__first
returns only the first existing file from a list.  Examples of both are shown
below.
.blank
.no fill
% echo `find__all $d0inc/zebcom.inc`
/d0library/inc/zebcom.inc
% echo `find__first $d0inc/zebcom.inc`
/d0library/inc/zebcom.inc
.fill
.blank
Find__first is specifically intended to be used to select object libraries in
link commands.

.hl1 UNIX utilities

This section summarized environment-oriented UNIX utilities.  This utilities
are located in library section unix (i.e. in $d0unix).

.hl2 D0local.login, d0local.cshrc

These utilities correspond to D0LOCAL.COM.  D0local.login and d0local.cshrc are
supposed to be sourced in users' .login and .cshrc scripts respectively.
D0local.login defines standard D0 environment variables.  D0local.login also
adds $d0unix to the user's PATH.  D0local.cshrc defines standard D0 aliases.
.no fill
.blank
Usage:
.blank
% source /d0library/unix/d0local.login
% source /d0library/unix/d0local.cshrc
.fill
.blank
These utilities must be invoked using their absolute filenames (i.e. not using
$d0unix) when they are invoked in .login or .cshrc.

.hl2 Libtest, nolibtest, showlibtest

These utilities correspond to the VAX utilities of the same names.  Libtest and
nolibtest are really aliases that source the shell script $d0unix/libtest.
Showlibtest is a separate shell script.
.no fill
.blank
Usage:
.blank
% libtest [-bgtop] [-a area] [section ... |all]
.blank
Options:
.blank
-a Alpha mode.  The alpha area is specified as an argument 
   to this option.
-b Beta mode (root $d0beta).
-g Gamma mode (root $d0gamma).
-t Test mode (root $d0test).  This is default.
-o Official mode (root $d0library).  Turns off all 
   non-official libraries.
-p Print values of environment variables that are set.
.blank
Arguments:
.blank
section - A library section operate on (or all).
.fill
.blank
Nolibtest is an alias for libtest -o.  Using libtest or nolibtest on the unix
section of the d0library modifies environment variable PATH in addition to
d0unix.

.hl2 Find__all, find__first

These are filters for file lists.  Find__all returns only existing files.
Find__first returns the first existing file in a list.
.no fill
.blank
Usage:
.blank
% find__all file ...
% find__first file ...
.fill

.hl2 Getoptc

Getoptc is an sh shell script interface to the sh built in command getopts.  It
parses command line options into
maximally expanded form according to standard UNIX syntax rules.
.no fill
.blank
Usage:

% set argv=(`getoptc optstring $argv`)
.blank
.fill

The optstring is a list of allowed single character options.  Options
that require an argument should be followed by a colon in optstring.
