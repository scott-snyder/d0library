#! /bin/csh -f
#------------------------------------------------------------------------------
#
# Name      : cmsupdate
#
# Purpuse   : Update file(s) to the local CMS library on D0SFT.
#
# Usage :
#
# cmsupdate [-b] [-r] [-h rhost] [-u ruser] file(s) cmslib [group] [remark]
#
# Options:
#
#     -b    - Use BNL CMS library (default is local CMS library).
#     -r    - Use rsh (default is d0rexec).
#     rhost - remote host (default $VAXLIB_NODE).
#     ruser - remote user.
#
# Arguments :
#
#     file(s) - One or more filenames to update.  This argument may contain
#               a comma-separated list of filenames and UNIX wildcards.  This
#               argument should be quoted if it contains wildcards or spaces.
#
#     cmslib  - VAX CMS library (e.g. UNIX.CMS).
#
#     group   - CMS group
#
#     remark  - CMS remark
#
# Cmsupdate sources the file ~/.cmsinit (if it exists).  This file may
# contain shell commands defining any of the following shell variables:
#
# rhost - Remote host
# ruser - Remote user
# lhost - Local host
# luser - Local user
# lpass - Local password
#
# These variables may also be set in the environment.
#
# Notes:
#
# 1.  Cmsupdate always operates in NOBNL mode.
#
# 2.  The values of rhost and ruser may be overridden by command line options.
#     If rhost or ruser is not defined, a default remote host and the current
#     user will be used.
#
# 3.  If lhost and luser are not defined, they default the the current host
#     and user.
#
# 4.  All transactions are between trusted hosts.  This means that suitable
#     .rhosts files must exist on both ends.
#
# 5.  The remote host's login.com must ensure that the logical names
#     d0$unix$vms and usr$scratch are defined.
#
# Created 11-JUL-1991   Herbert B. Greenlee
#
#------------------------------------------------------------------------------
#
# brief help message
#
if($#argv == 0 ) then
help:
    echo "usage: cmsupdate [-b] [-r] [-h rhost] [-u ruser] file(s) cmslib [group] [remark]"
    exit 1
endif
#
# initialization
#
if(-e ~/.cmsinit )source ~/.cmsinit	# init script
set noglob = 1				# don't trash wildcards
#
# scan options (don't pass the last argument through getopt in case it
# contains quoted blanks)
#
set bnl = 0
set rsh = 0
set lastarg = "$argv[$#argv]"
set argv[$#argv] = ''
set argv = (`getopt bh:u: $argv:q` "$lastarg")
while("$argv[1]" != '--')
    switch($argv[1])
    case -b:
        set bnl = 1
        shift
        breaksw
    case -r:
        set rsh = 1
        shift
        breaksw
    case -h:
        set rhost = $argv[2]
        repeat 2 shift
        breaksw
    case -u:
        set ruser = $argv[2]
        repeat 2 shift
        breaksw
    default:
        echo "cmsupdate: bad option $argv"
        goto help
    endsw
end
shift		# drop --
#
# make sure that all required variables are defined (supply defaults)
#
if(! $?rhost ) set rhost = $VAXLIB_NODE
if(! $?ruser ) set ruser = $user
if(! $?lhost ) set lhost = `uname -n`
if(! $?luser ) set luser = $user
#
# set up an empty temporary directory
#
set tmpdir = `d0tmpdir cmsupdate`
foreach file ( `ls $tmpdir` )
    if( -f $tmpdir/$file ) rm -f $tmpdir/$file
end
#
# scan arguments
#
if( $#argv < 2 ) then
    echo "cmsupdate: insufficient arguments"
    goto help
endif
set files = "$argv[1]"
set cmslib = "$argv[2]"
if( $#argv >= 3 ) then
    set group = $argv[3]
else
    set group = '""'
endif
if( $#argv >= 4 ) then
    set remark = ( $argv[4-] )
else
    set remark = ''
endif
if( $#argv > 4 ) then
    echo "cmsupdate: too many arguments"
    goto help
endif
#
# Collect files to be transferred in $tmpdir
#
foreach wild ( `echo $files | tr ',' ' '` )
    foreach file (`echo ls $wild | csh -ft`)
        if( -f $file && $file !~ *~ && $file !~ *bak ) cp $file $tmpdir
    end
end
if( `ls $tmpdir | wc -w` == 0 ) then
    echo 'cmsupdate: no files'
    exit 1
endif
#
# do it
#
if( $rsh == 0 )then
  d0rexec $rhost -l $ruser '@d0$unix$vms:cmsupdate' '"'"$tmpdir/*"'"' "$cmslib"\
   "$group" '"'"$remark"'"' '"'"$lhost"'"' '"'"$luser"'"' "$bnl"
else
  rsh $rhost -l $ruser '@d0$unix$vms:cmsupdate' '"'"$tmpdir/*"'"' "$cmslib"\
   "$group" '"'"$remark"'"' '"'"$lhost"'"' '"'"$luser"'"' "$bnl"
endif
#
# delete temporary files
#
foreach file ( `ls $tmpdir` )
    if( -f $tmpdir/$file ) rm -f $tmpdir/$file
end
done:
rmdirp $tmpdir
