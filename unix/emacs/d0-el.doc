



                       D0 Specific Extensions to GNU-EMACS

                                 John D. Hobbs
                                    1/13/94


   This document describes (lisp) extensions to Emacs V18.57 which reproduce a 
subset of the D0 Eve functionality.  In order to use these extensions,
a user must include the lines:

       (defvar  d0-username "Your name in double quotes")
       (setq ftest (substitute-in-file-name "$d0test/unix/emacs/d0.el" ))
       (setq fprod (substitute-in-file-name "$d0library/unix/emacs/d0.el" ))
       (if (file-readable-p ftest) 
           (load-file ftest) 
           (if (file-readable-p fprod) (load-file fprod) ()))

in their .emacs file.

   Three new shortcut key sequences are defined:

              Key       Function
             -----    ------------
             ^z^e     Load the source for a routine from D0 library
             ^z^z     Load the documentation file for a Zebra bank
             ^c^h     Insert a standard fortran (or C if in c-mode) 
                          subroutine, function or program header

To use the ^c^h definition, one must be editting in fortran (or C) mode.

1) General Changes

   File names with extensions '.for', '.inc', '.lnk' or '.params' will 
   cause Emacs to go into fortran (major) mode.  

   The 'if' and 'do' indentation in fortran mode has been changed to 2
   characters to conform with D0 Eve.

   Files are forced to end with a carriage return when written to disk.


2) General D0 functions

   Two new functions have been added, bound to the key sequences ^z^e 
   and ^z^z.

   The ^z^e key sequence will cause the user to be prompted for an entry-
   point-name of a standard D0 library routine.  The entry_point.lis file
   is used to load the source file (readonly) corresponding to this entry
   point.

   The ^z^z key sequence will cause the user to be prompted for a Zebra bank
   name.  If the file 'bank name'.zeb is found in the $d0zeb tree, this file 
   will be loaded (readonly) into a new buffer.  NB:  This first use of this
   function requires a search of the directory tree and thus takes extra time.


3) D0 Fortran specific functions

   The key sequence ^c^h will enter D0 standard headers for Programs, 
   Subroutines or Functions.  Follow the prompts to enter types and names.  
   The name inserted in the Author field is taken from the variable 
   d0-username defined as above.  The ;p ;su and ;f abbrevs have been
   modified to insert standard headers instead of the usual text.

4) D0 C specific functions

   The key sequence ^c^h will enter a D0 standard header for a C function.
   The name inserted in the Author field is taken from the variable 
   d0-username defined as above. 



