
******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD.FOR;1

      PROGRAM PBD
C-   Purpose and Methods : The Program Builder ( PBD ) generates PBD FORTRAN
C-   Based on the PASCAL Program Builder sources

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_BLD_COM.FOR;1

      SUBROUTINE PBD_BLD_COM
C-   Program Builder.
     &'$!     Generated by the Program Builder                 !',

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_BLD_CSH.FOR;1

      SUBROUTINE PBD_BLD_CSH
C-   Program Builder.
     &'#     Generated by the Program Builder                 !',

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_BLD_INIT.FOR;1

      SUBROUTINE PBD_BLD_INIT
C-                         subroutine PBDINI.
C-   Program Builder.
C     First build the main program to Book the Flags for the
      OUTLINE = START_LINE// 'SUBROUTINE PBDINI'
      OUTLINE = COMMENT_STR//'Created by the PROGRAM BUILDER' 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_BLD_LINK.FOR;1

      SUBROUTINE PBD_BLD_LINK
C-   Program Builder.
     &'!     Generated by the Program Builder                 !'/

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_BLD_LNK_CSH.FOR;1

      SUBROUTINE PBD_BLD_LNK_CSH
C-   Program Builder.
     &'#     Generated by the Program Builder                 #'/

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_CHK_DUP.FOR;1

      SUBROUTINE PBD_CHK_DUP(TOKEN,CUR_PACK,PACKINDX,INTINDX)

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_CHK_PACK.FOR;1

      SUBROUTINE PBD_CHK_PACK

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_COMMAND.FOR;1

      SUBROUTINE PBD_COMMAND
C-   Program Builder.
     & '-W-Log file open error - LOG function disabled',
     & '-- PBD LOG function enabled - Log File : PBD.LOG ',

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_COMPILE.FOR;1

      SUBROUTINE PBD_COMPILE
C-   Program Builder.

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_FATMEN_DUMMIES.FOR;1

      SUBROUTINE INFTMN
      SUBROUTINE FMOPEN

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_FILE_OK.FOR;1

      LOGICAL FUNCTION PBD_FILE_OK (FILE_NAME)

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_FLAGS.FOR;1

      SUBROUTINE PBD_FLAGS
C-   Program Builder.
C-    ( To generate code for a new subroutine PBD_GET_FLAG_NAME )
     &  'LOGICAL FUNCTION PBD_SET_FLAG(FLAG_NAME,VALUE)'
     &   'LOGICAL FUNCTION PBD_GET_FLAG(FLAG_NAME,VALUE)' 
     &   'SUBROUTINE PBD_DUMP_FLAGS' 
     &   'SUBROUTINE PBD_UPCASE(IN_STRING,OUT_STRING)' 
     &   'SUBROUTINE PBD_GET_FLAG_NAME(FLAG_ID,FLAG_NAME,FLAG_VALUE)' 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_GET_COM.FOR;1

      SUBROUTINE PBD_GET_COM( TOKEN,LENGTH, COM_NAME, COM_SIZE,
C-   Program Builder.

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_HSTRFL.FOR;1

      SUBROUTINE PBD_HSTRFL
C-                         history subroutine HSTRFL by calling PBD_HST_BANK.
      OUTLINE = COMMENT_STR//'Created by the PROGRAM BUILDER' 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_HST_BANK.FOR;1

      SUBROUTINE PBD_HST_BANK
C-                         site, creation time, program name.  For the
C-   Program Builder.
      INTEGER*4 OFFTIM                  ! EXTERNAL FUNCTION OFFTIM
      INTEGER*4 TRNLNM                  ! EXTERNAL FUNCTION TRNLNM
        MSG_BUF = '-W-Function HISTORY not included'
        MSG_BUF = '-W-Function PRODUCTION not included'

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_INIT_COM.FOR;1

      SUBROUTINE PBD_INIT_COM

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_INIT_CONST.FOR;1

      SUBROUTINE PBD_INIT_CONST ( COM_NAME )
     &   'by the Program Builder'
     &   'Created by the PROGRAM BUILDER'

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_INTERFACE.FOR;1

      SUBROUTINE PBD_INTERFACE
C-   Program Builder.
     &            'LOGICAL FUNCTION '//
     &            'Created by the PROGRAM BUILDER Release' 
     &           '      MESSAG = ''Program execution is aborted''' 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_IS_VALID.FOR;1

      SUBROUTINE PBD_IS_VALID (TOKEN,TABLE,SIZE,OFFSET)
C-   Purpose and Methods : This routine searches each entry of the character 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_MSG.FOR;1

      SUBROUTINE PBD_MSG ( MESSAGE )
C-                         LOG function is enabled.

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_NEXT_WORD.FOR;1

      SUBROUTINE PBD_NEXT_WORD (STRING,TOKEN,POS,LENGTH)

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_PARSE_FILE.FOR;1

      SUBROUTINE PBD_PARSE_FILE ( FILE_SPEC, NODE_NAME, NODE_LEN,

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_READ_FILE.FOR;1

      SUBROUTINE PBD_READ_FILE ( FILE_TYPE )
      LOGICAL    PBD_FILE_OK            ! LOGICAL FUNCTION FOR FILE SEARCH
                    ELSE                ! No entry in package name table

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_READ_PACK.FOR;1

      SUBROUTINE PBD_READ_PACK
      LOGICAL    PBD_FILE_OK            ! LOGICAL FUNCTION FOR FILE SEARCH

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_REM_BLANK.FOR;1

      SUBROUTINE PBD_REM_BLANK ( STRING, LENGTH )

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_SWITCH.FOR;1

      SUBROUTINE PBD_SWITCH
C-                         function STSWCH. 
C-   Program Builder.
      CHARACTER*80 PRG_MSG(6)           ! PROGRAM MESSAGES
     & 'C-    This routine allows the Program Builder user to set',
     & 'C-    Created by the PROGRAM BUILDER'/ 
C      { First build the main program to turn on/off the value of the
     &          'LOGICAL FUNCTION STSWCH()' 

******************************
D0$PROGRAM_BUILDER$ROOT:[000000.SOURCE]PBD_UP_CASE.FOR;1

      SUBROUTINE PBD_UP_CASE ( INPSTRING,OUTSTRING )
