      SUBROUTINE PBD_COMPILE
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : This routine creates a temporary command file to
C-                         compile the FORTRAN source file generated by PBD
C-                         and executes this command file if COMPILE option
C-                         provided.
C-
C-   Inputs  : 
C-   Outputs : 
C-   Controls: Common error flag ERROR_FLAG
C-            ( .TRUE. if fatal error, .FALSE. if no error ) 
C-
C-   Modules called by this routine:  PBD_MSG, LIB$SPAWN
C-  
C-   Based on the PASCAL procedure Compile_Sources_File of the old
C-   Program Builder.
C-
C-
C-   Created  26-JUL-1991   Hyon Joo Kehayias
C-   Updated  17-DEC-1991   Herbert Greenlee
C-       UNIX compatible version
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
C----------------------------------------------------------------------

      INCLUDE 'D0$PROGRAM_BUILDER$INC:PBD_COMMON.INC'

C&IF VAXVMS
      INTEGER*4 LIB$SPAWN               ! SPAWN PROCESS library function
C&ENDIF

      INTEGER*4 STATUS                  ! ERROR RETURN STATUS
      CHARACTER*23 ERROR_BUF            ! ERROR MESSAGE
      CHARACTER*80 MSG_BUF              ! MESSAGE BUFFER
      LOGICAL OPENED                    ! OPENED

      DATA ERROR_BUF /
     &     '-E-File Open error for '/
      CALL D0OPEN(8, 'COMPILATION.TMP', 'OFL', OPENED)
 10   IF ( .NOT.OPENED ) THEN    ! Open error
        MSG_BUF = ERROR_BUF//'COMPILATION.TMP'
        ERROR_FLAG = .TRUE.
        CALL PBD_MSG ( MSG_BUF )
        RETURN
      END IF

      OUTLINE =
     &         '$ WRITE SYS$OUTPUT "-- Compiling source file..."' 
      WRITE ( 8, 100 ) OUTLINE
100   FORMAT ( A )

      OUTLINE ='$ FORTRAN/NODEBUG/F77/NOLIST-' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='     /OBJECT='//FOR_FILE_NAME(1:FOR_FILE_LEN)//
     &                          '.OBJ -' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='     '//FOR_FILE_NAME(1:FOR_FILE_LEN)//
     &                          '.FOR' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='$ FORTRAN/DEBUG=ALL/NOOPTIMIZE/F77/NOLIST-' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='     /OBJECT=DEB_'//FOR_FILE_NAME(1:FOR_FILE_LEN)//
     &                          '.OBJ -' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='     '//FOR_FILE_NAME(1:FOR_FILE_LEN)//
     &                          '.FOR' 
      WRITE ( 8, 100 ) OUTLINE
      OUTLINE ='$ DELETE COMPILATION.TMP;*' 
      WRITE ( 8, 100 ) OUTLINE

      CLOSE (8) 

C&IF VAXVMS
      STATUS = LIB$SPAWN(' ','COMPILATION.TMP' )
C&ENDIF

      RETURN
      END
