C DEC/CMS REPLACEMENT HISTORY, Element PRMUOH.FOR
C *3    28-APR-1989 17:50:15 TAMI "Minor change in format"
C *2    27-OCT-1988 22:30:33 HEDIN "FORMAT CHANGE"
C *1     5-JUL-1988 17:27:14 HEDIN "UNPACK ADDRESS"
C DEC/CMS REPLACEMENT HISTORY, Element PRMUOH.FOR
      SUBROUTINE PRMUOH(PRUNIT,LMUOH,NMUOH,CFL,IFL)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC
CC    PRINT OUT MUOH - PROCESSED MUON HITS
CC
CC    PRUNIT - UNIT NUMBER FOR PRINTOUT
CC    LMUOH - BANK ADDRESS
CC    NMUOH - BANK NUMBER
CC    CFL - FLAG TO CONTROL PRINT OUT
CC    IFL - HOW MUCH TO PRINT
CC
CC    THERE WILL ONLY BE A SINGLE RAW MUON BANK
CC    SO IGNORE CFL
CC
CC    DH MARCH 1986 , 10-86 ,12-86
CC    TK MAY 1988 UNPACK WIRE ADDRESS BEFORE PRINTING
CC    DH 10-88 CHANGE FORMAT ON FLAGS
CC    DH 3/89 MINOR CHANGE
CC    DH 2/92 28 words
CC    DH 6/92 format change for short printout
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IMPLICIT NONE
      INCLUDE 'D0$INC:ZEBCOM.INC'
      INTEGER PRUNIT,LMUOH,NMUOH,IFL,LHIT
      CHARACTER CFL*(*)
      INTEGER LZLOC,NMUONH,I,J,K,L,N,GZMUOH
      INTEGER IADD,IMOD(8),IPLN(8),ICELL(8),IERR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      LHIT=LMUOH
      IF(LHIT.EQ.0) THEN
 100      FORMAT(' NO MUOH BANK')
        LHIT=GZMUOH(0) 
        IF(LHIT.EQ.0) THEN
          WRITE(PRUNIT,100)
          RETURN
        ENDIF
      ENDIF
C
      NMUONH=IQ(LHIT-1)/28       ! 28 WORDS/HIT
      IF(IFL.NE.0) THEN          ! PARTIAL PRINTOUT
        WRITE(PRUNIT,101)
 101    FORMAT('0',10X,' BANK MUOH: MUON PROCESSED HITS'//
     A  ' ADDRESS  DRIFT DIST 1+2   TIME DIVIS 1+2 ',
     A  ' X WIRE  Y WIRE  Z WIRE ')
        DO 10 I=1,NMUONH
        K=28*(I-1)+LHIT
        IADD = IQ(K+1)
        CALL MUADD(IADD,IMOD(1),IPLN(1),ICELL(1),IERR)
        WRITE(PRUNIT,102)IMOD(1),IPLN(1),ICELL(1),(Q(K+J),J=15,18),
     X    (Q(K+J),J=21,23)
 102    FORMAT(1X,I3,I2,I3,1X,2F8.2,2F9.0,3F7.1)
 10     CONTINUE
      ENDIF
      IF(IFL.EQ.0) THEN           ! COMPLETE PRINTOUT
C
        WRITE(PRUNIT,103)
 103    FORMAT('0',10X,' BANK MUOH: MUON PROCESSED HITS'//)
        J=0
  20    CONTINUE
        K=8
        L=LHIT+28*J
        IF(J+K.GT.NMUONH) K=NMUONH-J
        J=J+K
        DO 30 N = 1,K
        IADD = IQ(L+28*(N-1)+1)
        CALL MUADD(IADD,IMOD(N),IPLN(N),ICELL(N),IERR)
 30     CONTINUE
        WRITE(PRUNIT,111)(IMOD(N),IPLN(N),ICELL(N),N=1,K)
        WRITE(PRUNIT,112)(IQ(L+28*(N-1)+2),N=1,K)
        WRITE(PRUNIT,113)(IQ(L+28*(N-1)+3),N=1,K)
        WRITE(PRUNIT,114)(IQ(L+28*(N-1)+4),N=1,K)
        WRITE(PRUNIT,115)(IQ(L+28*(N-1)+5),N=1,K)
        WRITE(PRUNIT,116)(IQ(L+28*(N-1)+6),N=1,K)
        WRITE(PRUNIT,117)(IQ(L+28*(N-1)+7),N=1,K)
        WRITE(PRUNIT,118)(IQ(L+28*(N-1)+8),N=1,K)
        WRITE(PRUNIT,119)(Q(L+28*(N-1)+9),N=1,K)
        WRITE(PRUNIT,120)(Q(L+28*(N-1)+10),N=1,K)
        WRITE(PRUNIT,121)(Q(L+28*(N-1)+11),N=1,K)
        WRITE(PRUNIT,122)(Q(L+28*(N-1)+12),N=1,K)
        WRITE(PRUNIT,123)(Q(L+28*(N-1)+13),N=1,K)
        WRITE(PRUNIT,124)(Q(L+28*(N-1)+14),N=1,K)
        WRITE(PRUNIT,125)(Q(L+28*(N-1)+15),N=1,K)
        WRITE(PRUNIT,126)(Q(L+28*(N-1)+16),N=1,K)
        WRITE(PRUNIT,127)(Q(L+28*(N-1)+17),N=1,K)
        WRITE(PRUNIT,128)(Q(L+28*(N-1)+18),N=1,K)
        WRITE(PRUNIT,129)(Q(L+28*(N-1)+19),N=1,K)
        WRITE(PRUNIT,130)(Q(L+28*(N-1)+20),N=1,K)
        WRITE(PRUNIT,131)(Q(L+28*(N-1)+21),N=1,K)
        WRITE(PRUNIT,132)(Q(L+28*(N-1)+22),N=1,K)
        WRITE(PRUNIT,133)(Q(L+28*(N-1)+23),N=1,K)
        WRITE(PRUNIT,134)(Q(L+28*(N-1)+24),N=1,K)
        WRITE(PRUNIT,135)(Q(L+28*(N-1)+25),N=1,K)
        WRITE(PRUNIT,136)(Q(L+28*(N-1)+26),N=1,K)
        WRITE(PRUNIT,137)(Q(L+28*(N-1)+27),N=1,K)
        WRITE(PRUNIT,138)(Q(L+28*(N-1)+28),N=1,K)
        WRITE(PRUNIT,140)
        IF(J.LT.NMUONH) GO TO 20
      ENDIF
 111  FORMAT(' WIREADD ',8(I3,I2,I3,1X))
 112  FORMAT(' FLAG 1  ',8(I8,1X))
 113  FORMAT(' FLAG 2  ',8(I8,1X))
 114  FORMAT(' RAW HIT ',8(I8,1X))
 115  FORMAT(' ORIENTA ',8(I8,1X))
 116  FORMAT(' N TIMES ',8(I8,1X))
 117  FORMAT(' SPARE   ',8(I8,1X))
 118  FORMAT(' SPARE   ',8(I8,1X))
 119  FORMAT(' TIME 1  ',8F9.1)
 120  FORMAT(' TIME 2  ',8F9.1)
 121  FORMAT(' PAD 1   ',8F9.1)
 122  FORMAT(' PAD 2   ',8F9.1)
 123  FORMAT(' DEL T 1 ',8F9.1)
 124  FORMAT(' DEL T 2 ',8F9.1)
 125  FORMAT(' DR DIS 1',8F9.1)
 126  FORMAT(' DR DIS 2',8F9.1)
 127  FORMAT(' T DIV 1 ',8F9.1)
 128  FORMAT(' T DIV 2 ',8F9.1)
 129  FORMAT(' VER DIS1',8F9.1)
 130  FORMAT(' VER DIS2',8F9.1)
 131  FORMAT(' X WIRE  ',8F9.1)
 132  FORMAT(' Y WIRE  ',8F9.1)
 133  FORMAT(' Z WIRE  ',8F9.1)
 134  FORMAT(' WIRE LEN',8F9.1)
 135  FORMAT(' SPARE   ',8F9.1)      
 136  FORMAT(' DX ROT  ',8F9.1)      
 137  FORMAT(' DY ROT  ',8F9.1)      
 138  FORMAT(' DZ ROT  ',8F9.1)      
 140  FORMAT('0')
      RETURN
      END
