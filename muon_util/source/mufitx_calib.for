      SUBROUTINE MUFITX_CALIB(NP,MODI,MODU,PLN,WIR,IP,XH,YH,ZH,
     A DT012,DT013,DT023,DT123,CHI4,LWIR,IOE,IOE2,IOE3,IOE4,
     A IPL1H,SLOPEX)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  ROUTINE TO ADJUST THE DELTA T0's ASSOCIATED WITH A GIVEN MODULE
C  USES TRACKS WITH ONE ODD AND TWO EVEN OR TWO ODD AND ONE EVEN WIRE
C  HITS IN A MODULE TO ADJUST VALUE FOR THAT MODULE 
C                                                
C  INPUT : NP=NUMBER OF POINTS ON TRACK
C          MODI=MODULE OF INTEREST
C          MODU,PLN,WIR=MODULE,PLANE AND WIRE OF HIT (ARRAYS)
C          IP=delta time flag if = 0 then not used (ARRAY)
C          XH=HIT POSITION ALONG WIRE AXIS (ARRAY)
C          YH=HIT POSITION ALONG PARTICLE TRACK AXIS (ARRAY)
C          ZH=HIT POSITION ALONG DRIFT AXIS (ARRAY)

C  OUTPUT: DT012=DIFFERNCE IN X POSITON (ALONG WIRE AXIS) BETWEEN PLANE
C                1 HIT AND POSTION CALCULATED FROM TRACK FIT (0,1,2 PLANES)
C          DT013=SAME AS ABOVE EXCEPT FOR FIT IN 0,1,AND 3 PLANES
C          DT023=SAME AS ABOVE EXCEPT FOR FIT IN 0,2,AND 3 PLANES
C          DT123=SAME AS ABOVE EXCEPT FOR FIT IN 1,2,AND 3 PLANES
C          CHI4=QUALITY OF FIT (4-PLANE TRACK ONLY)  
C          LWIR=WIRE NUM IN MODULE WITH MOST HITS REGARDLESS OF PLANE.
C               -1 IF LESS THAN TWO FOR EVERY WIRE NUMBER   
C          IOE=FLAG IF ODD-EVEN COMBO. IF 0 THEN NOT: OTHER VALUES INCLUDE
C               CORRECTIONS IOE2,3,4 CORRESPOND TO OTHER DTXXX RESULTS
C          IPL1H=ARRAY NUMBER OF HIT ASSOCIATED WITH PLANE 1
C          SLOPEX=CALCULATED POSITION IN PLANE 1 FROM FIT
C
C  CREATED 3-JUL-1991 by Eric James         
C   DH 4/92 change offset logic
C   DH 6/94 FIX UP A-LAYER STUFF
C   DH 9/94 FIX A-LAYER IF MISSING PLANE 1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IMPLICIT NONE
      INTEGER NP,I,I110,I111,I112,I113,LWIR,NH(24),NN,MODI
      INTEGER SI,MODD,IPL1H,I0,I1,I2
      PARAMETER (SI=40)
      REAL XH(SI),YH(SI),ZH(SI)
      INTEGER MODU(SI),PLN(SI),WIR(SI),IP(SI)
      REAL DEL,SLOPE,X,DT012,DT013,CHI4,SX,SZ,SXZ,SZ2,SX2,A,B,C,D,E
      REAL SLOPEX,IOE,S(2),DT023,DT123,IOE2,IOE3,IOE4
      DATA S/-1.,1./
C
CCC   KLUGE MODULE NUMBERING
      MODD=MODI
      DT012=-9999999.
      DT013=-9999999.
      DT023=-9999999.
      DT123=-9999999.
      CHI4=-9999999.
      DO I=1,24
        NH(I)=0
      ENDDO
      IOE=0.
      IOE2=0.
      IOE3=0.
      IOE4=0.
CCC   FIND MOST COMMON CELL NUMBER
      DO I=1,NP
        IF(IP(I).NE.0.AND.MODD.EQ.MODU(I)) THEN
          NH(WIR(I)+1)=NH(WIR(I)+1)+1
        ENDIF
      ENDDO
      LWIR=-1
      DO I=1,24
        IF(NH(I).EQ.3) LWIR=I-1
      ENDDO
      IF(LWIR.EQ.-1) THEN
        DO I=1,24
          IF(NH(I).EQ.2) LWIR=I-1
        ENDDO
      ENDIF
      IF(LWIR.EQ.-1) RETURN
      I110=0
      I111=0
      I112=0
      I113=0
      SLOPEX=0
      DO I=1,NP
        IF(IP(I).NE.0.AND.MODD.EQ.MODU(I)) THEN
          NN=IABS(WIR(I)-LWIR)
          IF(PLN(I).EQ.0.AND.NN.LE.1) I110=I
          IF(PLN(I).EQ.1.AND.NN.LE.1) I111=I
          IF(PLN(I).EQ.2.AND.NN.LE.1) I112=I
          IF(PLN(I).EQ.3.AND.NN.LE.1) I113=I
        ENDIF
      ENDDO
      IF(I110*I111*I112.EQ.0.AND.I110*I111*I113.EQ.0) LWIR=-1
      IF(I110*I111*I112.NE.0) THEN
        SLOPE=(XH(I110)-XH(I112))/(YH(I110)-YH(I112))
        X=XH(I110)+(YH(I111)-YH(I110))*SLOPE
        DT012=XH(I111)-X
        I0=MOD(WIR(I110),2)+1
        I1=MOD(WIR(I111),2)+1
        I2=MOD(WIR(I112),2)+1
        IF(I0.EQ.I1.AND.I0.EQ.I2) THEN
          IOE=0.               ! SAME SIGN
        ELSE
          IOE=1./(S(I1)-S(I0)+(S(I0)-S(I2))*(YH(I111)-YH(I110))/
     A                                      (YH(I112)-YH(I110)))
        ENDIF
      ENDIF
      IF(I110*I111*I113.NE.0) THEN
        SLOPE=(XH(I110)-XH(I113))/(YH(I110)-YH(I113))
        X=XH(I110)+(YH(I111)-YH(I110))*SLOPE
        DT013=XH(I111)-X
        I0=MOD(WIR(I110),2)+1
        I1=MOD(WIR(I111),2)+1
        I2=MOD(WIR(I113),2)+1
        IF(I0.EQ.I1.AND.I0.EQ.I2) THEN
          IOE2=0.               ! SAME SIGN
        ELSE
          IOE2=1./(S(I1)-S(I0)+(S(I0)-S(I2))*(YH(I111)-YH(I110))/
     A                                      (YH(I113)-YH(I110)))
        ENDIF
      ENDIF
      IF(I110*I112*I113.NE.0) THEN
        SLOPE=(XH(I110)-XH(I113))/(YH(I110)-YH(I113))
        X=XH(I110)+(YH(I112)-YH(I110))*SLOPE
        DT023=XH(I112)-X
        I0=MOD(WIR(I110),2)+1
        I1=MOD(WIR(I112),2)+1
        I2=MOD(WIR(I113),2)+1                                
        IF(I0.EQ.I1.AND.I0.EQ.I2) THEN
          IOE3=0.               ! SAME SIGN
        ELSE
          IOE3=1./(S(I1)-S(I0)+(S(I0)-S(I2))*(YH(I112)-YH(I110))/
     A                                      (YH(I113)-YH(I110)))
        ENDIF
      ENDIF 
      IF(I111*I112*I113.NE.0) THEN
        SLOPE=(XH(I111)-XH(I113))/(YH(I111)-YH(I113))
        X=XH(I111)+(YH(I112)-YH(I111))*SLOPE
        DT123=XH(I112)-X
        I0=MOD(WIR(I111),2)+1
        I1=MOD(WIR(I112),2)+1
        I2=MOD(WIR(I113),2)+1
        IF(I0.EQ.I1.AND.I0.EQ.I2) THEN
          IOE4=0.               ! SAME SIGN
        ELSE
          IOE4=1./(S(I1)-S(I0)+(S(I0)-S(I2))*(YH(I112)-YH(I111))/
     A                                      (YH(I113)-YH(I111)))
        ENDIF
      ENDIF 
      IPL1H=I111
      IF(IPL1H.EQ.0) THEN
        IPL1H=I110
      ENDIF
      SLOPEX=X
C
C     FIT 4 POINTS
      IF(I110.NE.0.AND.I111.NE.0.AND.I112.NE.0.AND.I113.NE.0) THEN
        SX=XH(I110)+XH(I111)+XH(I112)+XH(I113)
        SZ=YH(I110)+YH(I111)+YH(I112)+YH(I113)
        SX2=XH(I110)**2+XH(I111)**2+XH(I112)**2+XH(I113)**2
        SZ2=YH(I110)**2+YH(I111)**2+YH(I112)**2+YH(I113)**2
        SXZ=XH(I110)*YH(I110)+XH(I111)*YH(I111)+
     A      XH(I112)*YH(I112)+XH(I113)*YH(I113)
        CALL MUSLIN(4.,SX,SZ,SX2,SZ2,SXZ,A,B,C,D,E,CHI4)
        IF(CHI4.GT.0.) CHI4=SQRT(CHI4/2.)
      ENDIF
C
      RETURN
      END                
