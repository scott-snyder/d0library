      SUBROUTINE MOTDAT(JREG,JDIP,JLYR,JMOD,IMOD)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : return module number on an OTC or CCT
C-
C-   Inputs  : jreg = region of otc crate (1-5 for 021-061), <0 for CCT
C-             jdip = otc dip switch number from ktable
C-             jlyr = module layer number
C-             jmod = module bit value
C-   Outputs : imod = corresponding module number
C-                    if jreg<0 and jmod=0 then imod = #MACs
C-   Controls: 
C-
C-   Created   4-FEB-1994   M. Fortner
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INTEGER JREG,JDIP,JLYR,JMOD,IMOD,ICHAIN,KMOD
      INTEGER OTCSLT(5)
      INTEGER OTCLYA(16,5),OTCLYB(16,5),OTCLYC(16,5),MACOTC(5,56)
      INTEGER MACCCT(13,32),NMAC(32)
C
C         OTC chain data
C
      DATA OTCSLT /8,12,12,16,16/
C
      DATA OTCLYA / 1, 1, 2, 3, 4, 4, 6, 7,8*0,
     2             15,15, 9, 9,15,15,15,15, 9, 9,15,15,4*0,
     3             16,16,10,10,16,16,16,16,10,10,16,16,4*0,
     4             16*15,
     5             16*16/
      DATA OTCLYB /24,17,18,19,20,21,22,23,8*0,
     2             33,25,25,25,25,33,33,27,27,27,27,33,4*0,
     3             34,26,26,26,26,34,34,28,28,28,28,34,4*0,
     4             16*33,
     5             16*34/
      DATA OTCLYC /42,35,36,37,38,39,40,41,8*0,
     2             43,43,43,49,49,49,45,45,45,47,47,47,4*0,
     3             44,44,44,50,50,50,46,46,46,48,48,48,4*0,
     4             16*55,
     5             16*56/
C
C         MAC chain data
C
      DATA MACOTC/
     1       010, 020, 030, 2*0,       011, 021, 031, 2*0,
     2       032, 022, 012, 2*0,       033, 023, 013, 2*0,
     3       5*0,                      015, 025, 035, 2*0,
     4       036, 026, 016, 2*0,       5*0,
     5       061, 062, 064, 065, 067,  091, 092, 094, 095, 097,
     6       404, 400, 3*0,            430, 434, 3*0,
     7       406, 402, 3*0,            436, 432, 3*0,
     8       405, 401, 3*0,            437, 433, 3*0,
     9       140, 130, 120, 110, 100,  141, 131, 121, 111, 101,
     &       102, 112, 122, 132, 142,  103, 113, 123, 133, 143,
     1       144, 134, 124, 114, 104,  145, 135, 115, 105,   0,
     2       106, 116, 136, 146,   0,  107, 117, 127, 137, 147,
     3       150, 167, 160, 166, 161,  197, 180, 190, 191, 196,
     4       164, 153, 163, 162, 165,  183, 194, 193, 195, 192,
     5       410, 414, 3*0,            444, 440, 3*0,
     6       416, 412, 3*0,            446, 442, 3*0,
     7       417, 413, 3*0,            445, 441, 3*0,
     8       200, 210, 220, 230, 240,  201, 211, 221, 231, 241,
     9       242, 232, 222, 212, 202,  243, 233, 223, 213, 203,
     &       204, 214, 224, 234, 244,  205, 215, 235, 245,   0,
     1       246, 236, 216, 206,   0,  247, 237, 227, 217, 207,
     2       260, 270, 271, 261,   0,  300, 290, 291, 301,   0,
     3       273, 263, 262, 272,   0,  293, 303, 302, 292,   0,
     4       264, 274, 275, 265,   0,  304, 294, 295, 305,   0,
     5       277, 267, 266, 276,   0,  297, 307, 306, 296,   0,
     6       424, 420, 3*0,            450, 454, 3*0,
     7       426, 422, 3*0,            456, 452, 3*0,
     8       425, 421, 3*0,            457, 453, 3*0/
C
C         CCT chain data
C
      DATA NMAC/5*13,2*11,13,8*8,8*6,2*7,2*8,2*7,2*8/
      DATA MACCCT/
     1       010,020,030,100,110,120,130,140,200,210,220,230,240,
     2       011,021,031,101,111,121,131,141,201,211,221,231,241,
     3       012,022,032,102,112,122,132,142,202,212,222,232,242,
     4       013,023,033,103,113,123,133,143,203,213,223,233,243,
     5       013,023,033,104,114,124,134,144,204,214,224,234,244,
     6       015,025,035,105,115,135,145,205,215,235,245,000,000,
     7       016,026,036,106,116,136,146,206,216,236,246,000,000,
     8       010,020,030,107,117,127,137,147,207,217,227,237,247,
     9       061,067,160,161,260,261,270,271,5*0,
     &       062,064,162,163,262,263,272,273,5*0,
     1       064,065,164,165,264,265,274,275,5*0,
     2       065,067,166,167,266,267,276,277,5*0,
     3       091,097,190,191,290,291,300,301,5*0,
     4       092,094,192,193,292,293,302,303,5*0,
     5       094,095,194,195,294,295,304,305,5*0,
     6       095,097,196,197,296,297,306,307,5*0,
     7       401,405,413,417,421,425,7*0,
     8       401,405,413,417,421,425,7*0,
     9       401,405,413,417,421,425,7*0,
     &       401,405,413,417,421,425,7*0,
     1       433,437,441,445,453,457,7*0,
     2       433,437,441,445,453,457,7*0,
     3       433,437,441,445,453,457,7*0,
     4       433,437,441,445,453,457,7*0,
     5       150,260,261,401,405,413,417,6*0,
     6       153,263,262,401,405,413,417,6*0,
     7       153,165,264,265,401,405,413,417,5*0,
     8       150,166,267,266,401,405,413,417,5*0,
     9       180,290,291,433,437,441,445,6*0,
     &       183,293,292,433,437,441,445,6*0,
     1       183,195,294,295,433,437,441,445,5*0,
     2       180,196,297,296,433,437,441,445,5*0/
C
C----------------------------------------------------------------------
C
      IMOD = 0
      IF (JREG.GT.0) THEN
          IF (JDIP.LT.0.OR.JDIP.GT.15) RETURN
          ICHAIN = 0
          IF (JLYR.EQ.1) THEN
              ICHAIN = OTCLYA(JDIP+1,JREG)
          ELSE IF (JLYR.EQ.2) THEN
              ICHAIN = OTCLYB(JDIP+1,JREG)
          ELSE IF (JLYR.EQ.3) THEN
              ICHAIN = OTCLYC(JDIP+1,JREG)
          END IF
          KMOD = JMOD
          IF (MACOTC(1,ICHAIN).GE.400) KMOD = 1
          IF (KMOD.LT.1.OR.KMOD.GT.5) RETURN
          IF (ICHAIN.NE.0) IMOD = MACOTC(KMOD,ICHAIN)
      ELSE
          ICHAIN = JDIP
          IF (JREG.NE.-1) ICHAIN = JDIP - JREG*4
          IF (ICHAIN.LE.0.OR.ICHAIN.GT.32.OR.JMOD.GT.13) RETURN
          IF (JMOD.LE.0) THEN
              IMOD = NMAC(ICHAIN)
          ELSE
              IMOD = MACCCT(JMOD,ICHAIN)
          ENDIF
      ENDIF
C
  999 RETURN
      END
