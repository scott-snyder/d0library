      SUBROUTINE MUMDAT(NMOD,NMODX,NPLNX,NWIRX)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : GIVEN NMOD RETURN # OF PLN'S & WIR'S
C-   Inputs  : NMOD
C-   Outputs : NMODX,NPLNX,NWIRX  if unphysical -1 RETURNED
C-             NPLNX,NWIRX = SECTION#,STATION# for SAMUS
C-   Controls: 
C-
C-   Created   7-MAR-1990   E. MIERKIEWICZ
C-   DH 5/90 NUMBER OF WIRES/PLANE
C    DH 6/90 planes and wires count strat from 1, all unphysical for modules
C            now returned as -1
C    TD 3/92 305 and 306 are 16 wide -- not 24 wide.
C    MF 10/93 Do SAMUS as well
C----------------------------------------------------------------------
      IMPLICIT NONE
C----------------------------------------------------------------------
C
      INTEGER NMOD,NMODX,NPLNX,NWIRX,PLNX(307),WIRX(307),I
      INTEGER SAMSTA(58),SAMSEC(58)
C
C-----# OF PLANES DATA 3 AND 4 (COUNTING FROM 1...)
      DATA PLNX/-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,4,4,-1,4,
     a 4,-1,-1,-1,4,4,4,4,-1,4,4,-1,-1,-1,4,4,4,4,-1,
     a 4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,4,4,-1,
     a 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,4,4,-1,
     a 4,-1,-1,3,3,3,3,3,3,3,3,-1,-1,3,3,3,3,3,3,3,3,-1,
     a -1,3,3,3,3,3,-1,-1,3,-1,-1,3,3,3,3,3,3,3,3,-1,-1,
     a 3,3,3,3,3,3,3,3,-1,-1,3,-1,-1,3,-1,-1,-1,-1,-1,
     a -1,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,-1,3,-1,-1,3,-1,-1,-1,-1,-1,-1,3,3,3,3,
     a 3,3,3,3,-1,-1,3,3,3,3,3,3,3,3,-1,-1,3,3,3,3,3,3,3,3,
     a -1,-1,3,3,3,3,3,-1,-1,3,-1,-1,3,3,3,3,3,3,3,3,-1,
     a -1,3,3,3,3,3,3,3,3,-1,-1,3,3,-1,3,-1,3,-1,-1,-1,
     a -1,3,3,3,3,3,3,3,3,-1,-1,3,3,3,3,3,3,3,3,-1,-1,3,3,
     a -1,3,-1,3,-1,-1,-1,-1,3,3,3,3,3,3,3,3,-1,-1,3,3,
     a 3,3,3,3,3,3/
C-----NUMBER OF CELLS (COUNTING FROM 1...)
      DATA WIRX/-1,-1,-1,-1,-1,-1,-1,-1,-1,24,24,24,24,-1,
     a 24,24,-1,-1,-1,24,24,24,24,-1,24,24,-1,-1,-1,24,24,
     a 24,24,-1,24,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,16,16,
     a -1,16,13,-1,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,16,16,
     a -1,16,13,-1,16,-1,-1,16,16,16,16,16,21,21,16,-1,-1,
     a 24,24,24,24,24,24,24,24,-1,-1,24,24,24,24,24,-1,-1,24,
     a -1,-1,24,24,24,24,24,24,24,24,-1,-1,16,16,16,16,16,21,
     a 21,16,-1,-1,24,-1,-1,24,-1,-1,-1,-1,-1,-1,24,24,
     a 24,24,24,24,24,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
     a -1,-1,24,-1,-1,24,-1,-1,-1,-1,-1,-1,24,24,24,24,
     a 24,24,24,24,-1,-1,24,24,24,24,24,16,16,24,-1,-1,24,24,
     a 24,24,24,21,21,24,-1,-1,24,24,24,24,24,-1,-1,24,-1,
     a -1,24,24,24,24,24,21,21,24,-1,-1,24,24,24,24,24,16,16,24,
     a -1,-1,16,15,-1,16,-1,16,-1,-1,-1,-1,24,24,24,24,24,
     a 24,24,24,-1,-1,24,24,24,24,24,16,16,24,-1,-1,16,15,-1,
     a 16,-1,16,-1,-1,-1,-1,24,24,24,24,24,24,24,24,-1,-1,
     a 24,24,24,24,24,16,16,24/
C-----SECTION # (NMOD-400+1)
      DATA SAMSEC/1,2,3,-1,4,5,6,-1,-1,-1,
     &            4,-1,3,2,1,-1,6,5,-1,-1,
     &            1,2,3,-1,4,5,6,-1,-1,-1,
     &            4,-1,3,2,1,-1,6,5,-1,-1,
     &            1,2,3,-1,4,5,6,-1,-1,-1,
     &            4,-1,3,2,1,-1,6,5/
C-----SECTION # (NMOD-400+1)
      DATA SAMSTA/1,1,1,-1,1,1,1,-1,-1,-1,
     &            2,-1,2,2,2,-1,2,2,-1,-1,
     &            3,3,3,-1,3,3,3,-1,-1,-1,
     &            4,-1,4,4,4,-1,4,4,-1,-1,
     &            5,5,5,-1,5,5,5,-1,-1,-1,
     &            6,-1,6,6,6,-1,6,6/
C
      IF (NMOD.GT.0.AND.NMOD.LE.307) THEN                     ! WAMUS
          NMODX = NMOD
          NPLNX = PLNX(NMOD) 
          NWIRX = WIRX(NMOD)
          IF ((NPLNX.EQ.-1).OR.(NWIRX.EQ.-1)) NMODX = -1
      ELSEIF (NMOD.GE.400.AND.NMOD.LE.457) THEN               ! SAMUS
          NMODX = NMOD-400+1
          NPLNX = SAMSEC(NMODX)
          NWIRX = SAMSTA(NMODX)
          NMODX = NMOD
          IF ((NPLNX.EQ.-1).OR.(NWIRX.EQ.-1)) NMODX = -1
      ELSE                                                   ! JUNK
        NMODX = -1
        NPLNX = -1
        NWIRX = -1
      ENDIF
      RETURN
      END
