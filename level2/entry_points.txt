
******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_SHADOW_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_SHADOW_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_SHADOW_FILTER_STP.FOR;1

      PROGRAM FILT_SHADOW_FILTER_STP                                          

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_TEST_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_TEST_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]FILT_TEST_FILTER_STP.FOR;1

      PROGRAM FILT_TEST_FILTER_STP

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]REGULAR_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]REGULAR_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]REGULAR_FILTER_STP.FOR;1

      PROGRAM REGULAR_FILTER_STP                                              

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]VMS_FILTER_HSTRFL.FOR;1

C-    Created by the PROGRAM BUILDER                                            
      SUBROUTINE HSTRFL                                                         

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]VMS_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]VMS_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.L2SIM]VMS_FILTER_STP.FOR;1

      PROGRAM VMS_FILTER_STP                                                  

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]ABC.FOR;1

      SUBROUTINE ABC
      SUBROUTINE ABC2(A,I1,I2,J1,J2,K1,K2)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKCDH1.FOR;1

      SUBROUTINE BKCDH1(NHITS, LCDH1)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKCDH2.FOR;1

      SUBROUTINE BKCDH2(lcdh2)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKCDH3.FOR;1

      SUBROUTINE BKCDH3(lcdh3)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKDLEP.FOR;1

      SUBROUTINE BKDLEP(LDLEP)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKL0VT.FOR;1

      SUBROUTINE BKL0VT(LL0VT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKL2CD.FOR;1

      SUBROUTINE BKL2CD(NCHA,LL2CD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKL2CH.FOR;1

      SUBROUTINE BKL2CH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKL2CR.FOR;1

      SUBROUTINE BKL2CR(LL2CR,NDATA)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKL2FD.FOR;1

      SUBROUTINE BKL2FD(LL2FD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKRMAS.FOR;1

      SUBROUTINE BKRMAS(NPARIN,LRMAS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]BKSL2H.FOR;1

      SUBROUTINE BKSL2H(LSL2H)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CACALIB.FOR;1

      SUBROUTINE CACALIB

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CACALIB_INIT.FOR;1

      SUBROUTINE CACALIB_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CACALIB_PARAMETERS.FOR;1

      SUBROUTINE CACALIB_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDCALIB.FOR;1

      SUBROUTINE CDCALIB

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDCALIB_INIT.FOR;1

      SUBROUTINE CDCALIB_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDCALIB_PARAMETERS.FOR;1

      SUBROUTINE CDCALIB_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDC_L2TRK.FOR;1

      SUBROUTINE CDC_L2TRK

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDC_L2TRK_INIT.FOR;1

      SUBROUTINE CDC_L2TRK_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDC_L2TRK_PARAMETERS.FOR;1

      SUBROUTINE CDC_L2TRK_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDHEVT.FOR;1

      Logical Function CDHEVT()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDHINI.FOR;1

      LOGICAL FUNCTION CDHINI()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]CDHPAR.FOR;1

      LOGICAL FUNCTION CDHPAR()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2CDC.FOR;1

      SUBROUTINE COSMIC_L2CDC(FLAG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2_FDC_INIT.FOR;1

      SUBROUTINE COSMIC_L2_FDC_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2_FDC_PARAMETERS.FOR;1

      SUBROUTINE COSMIC_L2_FDC_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_L2_FILTER_STP.FOR;1

      PROGRAM COSMIC_L2_FILTER_STP                                            

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_TRD.FOR;1

      SUBROUTINE COSMIC_TRD

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_TRD_INIT.FOR;1

      SUBROUTINE COSMIC_TRD_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_TRD_PARAMETERS.FOR;1

      SUBROUTINE COSMIC_TRD_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_VTX.FOR;1

      SUBROUTINE COSMIC_VTX(PS_NUM,HARDWARE,RESULT_FLAG,FORCE_FLAG)
      SUBROUTINE VCRUNP(STATUS)
      SUBROUTINE VFSTRK(LAYER,SECTOR,WIRE,WEND,NCLUS,HITLST)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_VTX_INIT.FOR;1

      SUBROUTINE COSMIC_VTX_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]COSMIC_VTX_PARAMETERS.FOR;1

C *1    19-SEP-1989 16:00:55 HOFTUN "Dummy parameter entry point for TOOL1 included as example"
      SUBROUTINE COSMIC_VTX_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DCRUNP.FOR;1

      SUBROUTINE DCRUNP(STATUS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DCRUNP_FDC.FOR;1

      SUBROUTINE DCRUNP_FDC(STATUS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DFSTRK.FOR;1

      SUBROUTINE DFSTRK(ILYR,ISCTR,IWIRE,NPULSE,HITLST)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DFSTRK_FDC.FOR;1

      SUBROUTINE DFSTRK_FDC(HALF,UNIT,QUAD,SECT,WIRE,NPULSE,HITLST)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DGTTMS.FOR;1

      SUBROUTINE DGTTMS(ID,LAYER,SECTOR,WIRE,VALUE,VEL,LENGTH,IFL)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DIFF_FSUM.FOR;1

      SUBROUTINE DIFF_FSUM(IFILE,TIME_IN)
      ENTRY GRAND_FILTER_DIFF(LUN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DL2GT_ETA.FOR;1

      SUBROUTINE DL2GT_ETA(SCTL0,SCTL1,SCTL2,SCTL3,THETA,ZVTX)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DL2TIM.FOR;1

      SUBROUTINE DL2TIM(SECTOR,TIM)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DL2_RZTRK.FOR;1

      SUBROUTINE DL2_RZTRK(DLHIT,Z,ZVTX,THETA)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DNL_EVT_PASS.FOR;1

      SUBROUTINE DNL_EVT_PASS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DNL_EVT_PASS_INIT.FOR;1

      SUBROUTINE DNL_EVT_PASS_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]DNL_EVT_PASS_PARAMETERS.FOR;1

      SUBROUTINE DNL_EVT_PASS_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]ESUM_CON_VERS_2_TO_3.FOR;1

      FUNCTION ESUM_CON_VERS_2_TO_3()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_SHADOW_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_SHADOW_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_SHADOW_FILTER_STP.FOR;1

      PROGRAM FILT_SHADOW_FILTER_STP                                          

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_TEST_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_TEST_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FILT_TEST_FILTER_STP.FOR;1

      PROGRAM FILT_TEST_FILTER_STP                                            

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]FLDLEP.FOR;1

      SUBROUTINE FLDLEP(SECTOR,FLAG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GET_NEEP.FOR;1

      SUBROUTINE GET_NEEP(IP,ID_OBJECT,NUMF,ET,ETA,PHI,POS1,POS2)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GRAND_FILTER_SUMMARY.FOR;1

      FUNCTION GRAND_FILTER_SUMMARY(TTIME,NUMB,LUN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GRAND_FSUM.FOR;1

      FUNCTION GRAND_FSUM()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTDLEP.FOR;1

      SUBROUTINE GTDLEP(NTRACK,PHI,ETA,ZVTX)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTL0VT.FOR;1

      SUBROUTINE GTL0VT(FASTZ,FAST_FLAG,SLOWZ,SLOW_FLAG,OK)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTL2FALH.FOR;1

      SUBROUTINE GTL2FALH(HALF,UNIT,QUAD,SECT,WIRE,XC,YC,ZC)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTL2FWAL.FOR;1

      SUBROUTINE GTL2FWAL(MODULE,DIMENS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTL2FWTX.FOR;1

      SUBROUTINE GTL2FWTX(HALF,QUAD,SECTOR,DIMENS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GTRMAS.FOR;1

      SUBROUTINE GTRMAS(PARAM_NUM,STATUS,OBJECT,NUM_OBJ,MASS,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZCDH1.FOR;1

      INTEGER FUNCTION GZCDH1()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZCDH2.FOR;1

      INTEGER FUNCTION GZCDH2()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZFTCH.FOR;1

      FUNCTION GZFTCH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL0VT.FOR;1

      INTEGER FUNCTION GZL0VT()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2CD.FOR;1

      FUNCTION GZL2CD()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2CH.FOR;1

      INTEGER FUNCTION GZL2CH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2CR.FOR;1

      FUNCTION GZL2CR()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2DPDH.FOR;1

      INTEGER FUNCTION GZL2DPDH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2DRFT.FOR;1

      FUNCTION GZL2DRFT()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2DTMD.FOR;1

      INTEGER FUNCTION GZL2DTMD(ILAYER)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2DTMH.FOR;1

      FUNCTION GZL2DTMH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2DTMW.FOR;1

      INTEGER FUNCTION GZL2DTMW(ILAYER)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FAHF.FOR;1

      FUNCTION GZL2FAHF(HALF)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FAQD.FOR;1

      FUNCTION GZL2FAQD(HALF,QUAD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FASE.FOR;1

      FUNCTION GZL2FASE(HALF,UNIT,QUAD,SECTOR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FAUN.FOR;1

      FUNCTION GZL2FAUN(HALF,UNIT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FD.FOR;1

      FUNCTION GZL2FD()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FGEH.FOR;1

      FUNCTION GZL2FGEH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FPDH.FOR;1

      INTEGER FUNCTION GZL2FPDH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTHF.FOR;1

      FUNCTION GZL2FTHF(HALF)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTMH.FOR;1

      FUNCTION GZL2FTMH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTPH.FOR;1

      FUNCTION GZL2FTPH(HALF)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTQU.FOR;1

      FUNCTION GZL2FTQU(HALF,QUAD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTSE.FOR;1

      FUNCTION GZL2FTSE(HALF,UNIT,QUAD,SECTOR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FTUN.FOR;1

      FUNCTION GZL2FTUN(HALF,UNIT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FWAL.FOR;1

      FUNCTION GZL2FWAL()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FWTA.FOR;1

      FUNCTION GZL2FWTA()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2FWTB.FOR;1

      FUNCTION GZL2FWTB()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2SVTX.FOR;1

      FUNCTION GZL2SVTX()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2VPDH.FOR;1

      INTEGER FUNCTION GZL2VPDH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZL2VPDL.FOR;1

      FUNCTION GZL2VPDL(LAYER)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZRMAS.FOR;1

      FUNCTION GZRMAS()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]GZSL2H.FOR;1

      FUNCTION GZSL2H()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L0VTFL.FOR;1

      SUBROUTINE L0VTFL

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L15_UNBIAS_INFO.FOR;1

      SUBROUTINE L15_UNBIAS_INFO(UNBIAS,L1_MASK)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CDC.FOR;1

      SUBROUTINE L2CDC(ok)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CDHT_INIT.FOR;1

      SUBROUTINE L2CDHT_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CDPULS.FOR;1

      SUBROUTINE L2CDPULS(channel_id, depth, data, maxhit,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CDUNPK.FOR;1

      SUBROUTINE L2CDUNPK(end, depth, data, ier)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CRCAL.FOR;1

      SUBROUTINE L2CRCAL

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CRCAL_INIT.FOR;1

      SUBROUTINE L2CRCAL_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2CRCAL_PARAMETERS.FOR;1

      SUBROUTINE L2CRCAL_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2FDC.FOR;1

      SUBROUTINE L2FDC(ok)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2FDC_STP.FOR;1

      SUBROUTINE L2FDC_STP

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2FDPULS.FOR;1

      SUBROUTINE L2FDPULS(channel_id, depth, data, maxhit,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2TAU.FOR;1

      SUBROUTINE L2TAU( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2TAU_INIT.FOR;1

      SUBROUTINE L2TAU_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2TAU_PARAMETERS.FOR;1

      SUBROUTINE L2TAU_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2TRAK_STP.FOR;1

      SUBROUTINE L2TRAK_STP

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2TRD.FOR;1

      SUBROUTINE L2TRD

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2VTPULS.FOR;1

      SUBROUTINE L2VTPULS(LABEL, EXPDAT, MAXPUL,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2VTX.FOR;1

       SUBROUTINE L2VTX(ok)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2VTX_STP.FOR;1

      SUBROUTINE L2VTX_STP

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ACOL_JETS.FOR;1

      SUBROUTINE L2_ACOL_JETS( PARAM_SET_NUMBER, HARDWARE, RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ACOL_JETS_INIT.FOR;1

      SUBROUTINE L2_ACOL_JETS_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ACOL_JETS_PARAMETERS.FOR;1

      SUBROUTINE L2_ACOL_JETS_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDC.FOR;1

      SUBROUTINE L2_CDC(ROAD, TRTIME, L2CD, RESULT_FLAG)
      N_OUTER = 0                     ! Start with 1st entry in SECLST

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDCUNP.FOR;1

      SUBROUTINE L2_CDCUNP(STATUS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDC_SECTORS.FOR;1

      SUBROUTINE L2_CDC_SECTORS(APHI,DPHI) 

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDEL.FOR;1

      SUBROUTINE L2_CDEL(ROAD,N_INNER,N_OUTER,NUM_DEL,ADRESS,LENGTH,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDGETZ.FOR;1

      SUBROUTINE L2_CDGETZ
C- DL correction function coefficients

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDHITS.FOR;1

      SUBROUTINE L2_CDHITS(ROAD,ILYR,ISCTR,IWIRE,NPULSE,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDINIT.FOR;1

      SUBROUTINE L2_CDINIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CDPULS.FOR;1

      SUBROUTINE L2_CDPULS(NPULSE,HITLST,MAXPUL)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CD_MATCH.FOR;1

      SUBROUTINE L2_CD_MATCH(ETA,PHI,XYZ_CLUS,WETA,WPHI,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CD_MATCH_INIT.FOR;1

      SUBROUTINE L2_CD_MATCH_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CD_MATCH_PARAMETERS.FOR;1

      SUBROUTINE L2_CD_MATCH_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE.FOR;1

      FUNCTION L2_COMPARE()
C-  Entry points:
      ENTRY L2_COMPARE_INI()
C     begin program initialization hook
      ENTRY L2_COMPARE_DIA()
      ENTRY L2_COMPARE_SUM()
C     program summary hook...

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_D0USER.FOR;1

      SUBROUTINE PBDINI                                                         
C-    Created by the PROGRAM BUILDER                                            
C-    The following routine has been generated by the Program Builder           
C-    Created by the PROGRAM BUILDER                                            
      SUBROUTINE INZCOM(I)                                                      
C-    The following routine has been generated by the Program Builder           
C-    Created by the PROGRAM BUILDER                                            
      SUBROUTINE INZSTP                                                         
C-    The following routine has been generated by the Program Builder           
C-    Created by the PROGRAM BUILDER                                            
      SUBROUTINE INZWRK                                                         
C-    The following routine has been generated by the Program Builder           
C-    Created by the PROGRAM BUILDER                                            
      SUBROUTINE INPAWC                                                         
      LOGICAL FUNCTION STSWCH()                                                 
C-    This routine allows the Program Builder user to set                       
C-    Created by the PROGRAM BUILDER                                            
      LOGICAL FUNCTION PBD_SET_FLAG(FLAG_NAME,VALUE)                            
      LOGICAL FUNCTION PBD_GET_FLAG(FLAG_NAME,VALUE)                            
      SUBROUTINE PBD_DUMP_FLAGS                                                 
      SUBROUTINE PBD_UPCASE(IN_STRING,OUT_STRING)                               
      SUBROUTINE PBD_GET_FLAG_NAME(FLAG_ID,FLAG_NAME,FLAG_VALUE)                
      LOGICAL FUNCTION EVENT_READ_OK()                                          
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USREVT()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRINI()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
            MESSAG = 'Program execution is aborted'                             
      LOGICAL FUNCTION USDIAL()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USENDR()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRPAR()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRPST()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USETSS()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION EVT_DSTDROP()                                            
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION PXEXEC()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRSSM()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRUSM()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRWRT()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USRZEV()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION USZERO()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION DMPUDF()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION DMPUSR()                                                 
C-    Created by the PROGRAM BUILDER Release                                    
      LOGICAL FUNCTION UQUIT()                                                  
C-    Created by the PROGRAM BUILDER Release                                    

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_FILT.FOR;1

      FUNCTION L2_COMPARE_FILT(LUN,PRTLEV,SET,TRIED,PASSED)
      ENTRY L2_COMPARE_FILT_OUT(LUN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_L1ON.FOR;1

      SUBROUTINE L2_COMPARE_L1ON(IWORD,L1ON,FLTON)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_MARK_BIT.FOR;1

      SUBROUTINE L2_COMPARE_MARK_BIT(BIT,IWORD,STRING)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_PB128.FOR;1

      SUBROUTINE L2_COMPARE_PB128(LUN,FIRST,NUM,STRINGS,TITLE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMPARE_PB32.FOR;1

      SUBROUTINE L2_COMPARE_PB32(LUN,FIRST,NUM,STRINGS,TITLE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_ACOL.FOR;1

      SUBROUTINE L2_COMP_ACOL(LUN,LACOL,IB,OKOK,ACOL_ET,ACOL_ETA,
     &        '' ACOL entry discrepancy'',/,
     &      '' ACOL entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_EM.FOR;1

      SUBROUTINE L2_COMP_EM(LUN,L2EM,IB,OKOK,
     &        '' L2EM entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_JETS.FOR;1

      SUBROUTINE L2_COMP_JETS(LUN,LJAUX,LJPAR,IB,OKOK,
     &        '' JAUX entry discrepancy'',/,
      ENTRY L2_COMP_JETS_OUT(LUN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_LETA.FOR;1

      SUBROUTINE L2_COMP_LETA(LUN,LLETA,IB,OKOK,LETA_DETA,LETA_ET,
     &        '' LETA entry discrepancy'',/,
     &      '' LETA entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_MUOT.FOR;1

      SUBROUTINE L2_COMP_MUOT(LUN,LMUOT,IB,OKOK,
     &        '' MUOT entry discrepancy: Bank # '',I4,/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_PNUT.FOR;1

      SUBROUTINE L2_COMP_PNUT(LUN,LPNUT,IB,OKOK,
     &        '' PNUT entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_RMAS.FOR;1

      SUBROUTINE L2_COMP_RMAS(LUN,LRMAS,IB,OKOK,RMAS_MASS,RMAS_ETAB,
     &        '' RMAS entry discrepancy'',/,
     &      '' RMAS entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_COMP_VT.FOR;1

      SUBROUTINE L2_COMP_VT(LUN,L2VT,IB,OKOK,CFAST,CSLOW)
     &        '' L0VT entry discrepancy'',/,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CONFIRM_L15.FOR;1

      SUBROUTINE L2_CONFIRM_L15(PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CONFIRM_L15_INIT.FOR;1

      SUBROUTINE L2_CONFIRM_L15_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_CONFIRM_L15_PARAMETERS.FOR;1

      SUBROUTINE L2_CONFIRM_L15_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ETACUT.FOR;1

      SUBROUTINE L2_ETACUT( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,
C...statement function returns true if substring SUB found in OBJECT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ETACUT_INIT.FOR;1

      SUBROUTINE L2_ETACUT_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ETACUT_PARAMETERS.FOR;1

      SUBROUTINE L2_ETACUT_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FDC.FOR;1

      SUBROUTINE L2_FDC(ETA,PHI,WETA,WPHI,RESULT_FLAG) 
      REAL FROAD(1:4)          ! obtained from a call to entry FDC_ROAD
C                              ! in the subroutine L2_ROAD

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FDCINIT.FOR;1

      SUBROUTINE L2_FDCINIT
C-                                      subroutine FGEOM_INIT.

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FDCUNP.FOR;1

      SUBROUTINE L2_FDCUNP(STATUS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FDC_COSMICS.FOR;1

      SUBROUTINE L2_FDC_COSMICS(FDC_FLAG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FDHITS.FOR;1

      SUBROUTINE L2_FDHITS(FROAD,HALF,UNIT,QUAD,SECT,WIRE,NPULSE,ZVTX)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FLFSEC.FOR;1

      SUBROUTINE L2_FLFSEC(ZVTX,PHIMINI,PHIMAXI,THEMINI,THEMAXI,ON,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FNDSEC.FOR;1

      SUBROUTINE L2_FNDSEC(ROAD) 

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_FTRINI.FOR;1

      FUNCTION L2_FTRINI()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_GENERIC.FOR;1

      SUBROUTINE L2_GENERIC( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_GENERIC_INIT.FOR;1

      SUBROUTINE L2_GENERIC_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_GENERIC_PARAMETERS.FOR;1

      SUBROUTINE L2_GENERIC_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_GZDPDH.FOR;1

      FUNCTION L2_GZDPDH()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_GZSCDC.FOR;1

      FUNCTION L2_GZSCDC()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HBERR.FOR;1

      SUBROUTINE L2_HBERR(ROUTINE,STRING,ID)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HBOOK1.FOR;1

      SUBROUTINE L2_HBOOK1(ID,TITLE,NBIN,LLIM,ULIM,VMX)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HEXIST.FOR;1

      LOGICAL FUNCTION L2_HEXIST(ID)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HFILL.FOR;1

      SUBROUTINE L2_HFILL(ID,VALUEX,VALUEY,WEIGHT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HI.FOR;1

      FUNCTION L2_HI(ID,IBIN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HIDOPT.FOR;1

      SUBROUTINE L2_HIDOPT(ID,OPT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HITFIND.FOR;1

      SUBROUTINE L2_HITFIND( IOPT,HITADR,HITLEN,POINT,NPULSE,HITLST )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HIX.FOR;1

      SUBROUTINE L2_HIX(ID,IBIN,XVALUE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HLIMIT.FOR;1

      SUBROUTINE L2_HLIMIT(SIZE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HNOENT.FOR;1

      SUBROUTINE L2_HNOENT(ID,NENTR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HPAK.FOR;1

      SUBROUTINE L2_HPAK(ID,CONT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HRESET.FOR;1

      SUBROUTINE L2_HRESET(ID,NEWTITLE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HSTATI.FOR;1

      FUNCTION L2_HSTATI(ID,ICASE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HUNPAK.FOR;1

      SUBROUTINE L2_HUNPAK(ID,CONT)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_HXI.FOR;1

      SUBROUTINE L2_HXI(ID,XVALUE,IBIN)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_INZHST.FOR;1

      SUBROUTINE L2_INZHST(NSIZE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_KEEP_CD_RAW.FOR;1

      SUBROUTINE L2_KEEP_CD_RAW( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_KEEP_CD_RAW_INIT.FOR;1

      SUBROUTINE L2_KEEP_CD_RAW_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_KEEP_CD_RAW_PARAMETERS.FOR;1

      SUBROUTINE L2_KEEP_CD_RAW_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_L0_INIT.FOR;1

      SUBROUTINE L2_L0_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_L0_VERTEX.FOR;1

      SUBROUTINE L2_L0_VERTEX( FZPOS, FGOOD, SZPOS, SGOOD, MI_FLAG)
C      ENTRY L2_L0_PARAMETERS
      ENTRY L2_L0_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MASSCUT.FOR;1

      SUBROUTINE L2_MASSCUT( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,
C...statement function returns true if substring SUB found in OBJECT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MASSCUT_INIT.FOR;1

      SUBROUTINE L2_MASSCUT_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MASSCUT_PARAMETERS.FOR;1

      SUBROUTINE L2_MASSCUT_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MIN_BIAS.FOR;1

      SUBROUTINE L2_MIN_BIAS
C...statement function returns true if substring SUB found in SHAPE_CUTS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MIN_BIAS_INIT.FOR;1

      SUBROUTINE L2_MIN_BIAS_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MIN_BIAS_PARAMETERS.FOR;1

      SUBROUTINE L2_MIN_BIAS_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MU_COSMICS.FOR;1

      SUBROUTINE L2_MU_COSMICS(PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MU_COSMICS_INIT.FOR;1

      SUBROUTINE L2_MU_COSMICS_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_MU_COSMICS_PARAMETERS.FOR;1

      SUBROUTINE L2_MU_COSMICS_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_NXT_INT_DIFF.FOR;1

      FUNCTION L2_NXT_INT_DIFF(I1,I2,IR1,IR2,C)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_NXT_REAL_DIFF.FOR;1

      FUNCTION L2_NXT_REAL_DIFF(I1,I2,R1,R2,THR,C)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_PASS_FAIL.FOR;1

      SUBROUTINE L2_PASS_FAIL( PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,
      ENTRY L2_PASS_FAIL_INIT
      ENTRY L2_PASS_FAIL_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_PRESCALE.FOR;1

      SUBROUTINE L2_PRESCALE(PSN,BITS,RESULT,EXTRA)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_PRESCALE_INIT.FOR;1

      SUBROUTINE L2_PRESCALE_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_PRESCALE_PARAMETERS.FOR;1

      SUBROUTINE L2_PRESCALE_PARAMETERS(NEWPAR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_PRE_GET_ONLINE.FOR;1

      SUBROUTINE L2_PRE_GET_ONLINE(FOUND,ONLINE_PASS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ROAD.FOR;1

      SUBROUTINE L2_ROAD(ETA, PHI, XYZ_CLUS, WETA, WPHI, ROAD)
C-             correction (see the entry point  COSMIC_TRGR  to see how this
      ENTRY CDC_ROAD(ETA, PHI, XYZ_CLUS, WETA, WPHI, ROAD)
      ENTRY COSMIC_TRGR(ETA, PHI, WETA, WPHI, ROAD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_SUMM.FOR;1

      FUNCTION L2_SUMM()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_SUMM_FILT.FOR;1

      LOGICAL FUNCTION L2_SUMM_FILT()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_TEST.FOR;1

      SUBROUTINE L2_TEST(PARAM_SET_NUMBER,HARDWARE,RESULT_FLAG,
C...did parameters entry ever get called?
     &    'Parameters entry never called','W')
     &    'Parameters entry called with .le. parameters','W')

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_TEST_INIT.FOR;1

      SUBROUTINE L2_TEST_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_TEST_PARAMETERS.FOR;1

      SUBROUTINE L2_TEST_PARAMETERS(NEWPAR)
      ENTRY L2_TEST_GOT_PARAMETERS(GOT,NPAR)
C-        ENTRY WAS EVER CALLED

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_TRTIME.FOR;1

      SUBROUTINE L2_TRTIME (TRTIM)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VERT.FOR;1

      FUNCTION L2_VERT
C-                          EXTENDED OPTIONS BY ADDING ENTRY POINTS
      ENTRY L2_VERT_NOMINAL
      ENTRY L2_VERT_L0

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VERTEX_CDC.FOR;1

      SUBROUTINE L2_VERTEX_CDC(GOOD_VERTEX,ZVERTX) 

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VERTEX_CDC_PARAMETERS.FOR;1

      SUBROUTINE L2_VERTEX_CDC_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VERT_INIT.FOR;1

      SUBROUTINE L2_VERT_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VERT_PARAMETERS.FOR;1

      SUBROUTINE L2_VERT_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_VTXINIT.FOR;1

      SUBROUTINE L2_VTXINIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZCDCFL.FOR;1

      SUBROUTINE L2_ZCDCFL(ZVERTX,ZERROR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZCDCGZ.FOR;1

      SUBROUTINE L2_ZCDCGZ

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZCDCHS.FOR;1

      SUBROUTINE L2_ZCDCHS(ZVERTX,ZERROR)
      NENTRY = 0.0
      NENTRY = 0.0
        NENTRY = NENTRY + CONTEN(I)
        IF (NENTRY .GT. 1) THEN

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZCDCHT.FOR;1

      SUBROUTINE L2_ZCDCHT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZDEXPD.FOR;1

      SUBROUTINE L2_ZDEXPD(DCDTYP, LABEL, DATAS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]L2_ZFDSEC.FOR;1

      SUBROUTINE L2_ZFDSEC

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]LV0_DATA.FOR;1

      FUNCTION LV0_DATA()
C-   PURPOSE AND METHODS : THIS IS A LOGICAL FUNCTION THAT WILL EXTRACT
C-                         L0VT WHICH HANGS UNDER FILT. THE FUNCTION IS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MASSTEST.FOR;1

      LOGICAL FUNCTION MASSTEST(ET1,ET2,ETA1,ETA2,PHI1,PHI2)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUATSEL.FOR;1

      LOGICAL FUNCTION MUATSEL( ITK ) 

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_CALOR_CONFIRM.FOR;1

      SUBROUTINE MUON_CALOR_CONFIRM(IETA,IPHI,THRESH,ESUM,PASS,REGION)
C      ! FUNCTION VERSION!!!!!!!!

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_CONSTANTS.FOR;1

      SUBROUTINE MUON_CONSTANTS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_L2.FOR;1

      SUBROUTINE MUON_L2
C-            08-DEC-92   Include SAMUS_L2 as subroutine and subtool (HTD)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_L2_INIT.FOR;1

      SUBROUTINE MUON_L2_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_L2_PARAMETERS.FOR;1

      SUBROUTINE MUON_L2_PARAMETERS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]MUON_L2_TIR_PARSE.FOR;1

      SUBROUTINE MUON_L2_TIR_PARSE(PSN,TRIG_LEVEL,DET_REGION)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]PRL0VT.FOR;1

      SUBROUTINE PRL0VT ( PRUNIT, LL0VT, NL0VT, CFL )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]PRL2CD.FOR;1

      SUBROUTINE PRL2CD ( PRUNIT, LL2CD, NL2CD, CFL, IFL )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]PRL2CR.FOR;1

      SUBROUTINE PRL2CR ( PRUNIT, LL2CR, NL2CR, CFL, IFL )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]PRRMAS.FOR;1

      SUBROUTINE PRRMAS ( PRUNIT, LRMAS, NRMAS, CFL, IFL )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]PRSL2H.FOR;1

      SUBROUTINE PRSL2H ( PRUNIT, LSL2H, NSL2H, CFL, IFL )

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]READ_FSUM.FOR;1

      SUBROUTINE READ_FSUM(FILENAME,WEIGHT,TIME_OUT,IER)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]REGULAR_FILTER_INIT.FOR;1

      SUBROUTINE FILTER_INIT
      ENTRY GET_L2TYPE_NAME(NAME_STR)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]REGULAR_FILTER_PARAMETERS.FOR;1

      SUBROUTINE FILTER_PARAMETERS(RUN_NUMBER,PARFLG)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]REGULAR_FILTER_STP.FOR;1

      PROGRAM REGULAR_FILTER_STP                                              

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]RERUN_L12.FOR;1

      LOGICAL FUNCTION RERUN_L12()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]RMASFL.FOR;1

      SUBROUTINE RMASFL(PARAM_NUM,LRMAS)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAMUS_CONSTANTS.FOR;1

      SUBROUTINE SAMUS_CONSTANTS

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAMUS_L2.FOR;1

      SUBROUTINE SAMUS_L2(ITRACKS,PTTRACK,ETATRACK,PHITRACK,SIDETRACK)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAMUS_L2_INIT.FOR;1

      SUBROUTINE SAMUS_L2_INIT

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAMUS_L2_PARAMETERS.FOR;1

      SUBROUTINE SAMUS_L2_PARAMETERS 

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAMUS_L2_SIDE.FOR;1

      SUBROUTINE SAMUS_L2_SIDE(ISIDE)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SAM_CAL_CONFIRM.FOR;1

      SUBROUTINE SAM_CAL_CONFIRM(ETA,PHI,PASS,ESUM,REGION)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]SUM_FSUM.FOR;1

      SUBROUTINE SUM_FSUM(TIME_IN,TTIME)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]VLEVEL2.FOR;1

      Character*72 Function VLEVEL2()

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]WAM_CAL_CONFIRM.FOR;1

      SUBROUTINE WAM_CAL_CONFIRM(VTX,DIR,PASS,ESUM,REGION)

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]WRITE_FSUM.FOR;1

      SUBROUTINE WRITE_FSUM

******************************
D0$LEVEL2$ROOT:[000000.SOURCE]ZFIND.FOR;1

      SUBROUTINE ZFIND(TIM,DLHIT,Z)
