      LOGICAL FUNCTION LQNN()
C----------------------------------------------------------------------
C-
C-   Purpose and Methods :
C-
C-   Returned value  :
C-   Inputs  :
C-   Outputs :
C-   Controls:
C-
C-   Created   8-FEB-1993   DOUGLAS M. NORMAN
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$LINKS:IZPELC.LINK'
      INCLUDE 'D0$LINKS:IZPPHO.LINK'
      INCLUDE 'D0$LINKS:IZPNUT.LINK'
      INCLUDE 'D0$INC:ZEBCOM.INC'
      INTEGER LJETS,GZJETS,ILI,NCJ,IER,IVERS,IIER,ISHARE
      INTEGER LPNUT,GZPNUT,LPARH,GZPARH,LPELC,LCACL,NELE,I
      INTEGER LHMTE
      INTEGER NPHO,LPPHO
      REAL CJ_X(25),CJ_Y(25),CJ_Z(25)
      REAL   ETMISS2,ETA_MISS2,PHI_MISS2,THETA_MISS2,EX_MISS2,EY_MISS2
      REAL  ET_SCALAR2,CONE_E(5),ELEC_X(20),ELEC_Y(20)
      REAL ELEC_Z(20),ELEC_ETA(20),ELEC_PHI(20),ELEC_THETA(20),
     &  ELEC_E(20),ELEC_PT(20),EL_EMF(20),NUM_TRACKS(20)
      REAL DCLAPP(20),ISOLATION(20),CHISQR(20),TRNC_CHISQR(20)
      REAL CJ_PT(25),CJ_JE(25)
      REAL E_GRAND(7),CJ_THETA(25),CJ_PHI(25),CJ_ETA(25),PHI_JTSH
      REAL ETA_JTSH,EMFRAC_JTSH,CJ_HOT(25),CJ_CHF(25)
      REAL RWIDTH(25),EMF(25)
      REAL TEMPLATE(20),DUMMY1(25),DUMMY2(25),DUMMY3(25),DUMMY4(25),
     &DUMMY5(25),DUMMY6(25),DUMMY7(25),DUMMY8(25),DUMMY9(25)
      REAL PHOT_PT(25)
      REAL PTCUT1,PTCUT2,PTCUT3,EMFRAC_LOW,MET_CUT,DELTA_PHIJML
      REAL DELTA_PHIJMH,DELTA_PHIJJL
      REAL EMFRAC_HIGH,DELTA_PHIJJH
      REAL DELTA_ENGYJM,DELTA_ENGYJJ
      REAL DIFFPHI1,DIFFPHI2,DIFFENGY1,DIFFENGY2,DIFFPHI3,DIFFENGY3
      REAL RSUM(20),RSUMMARY(20)
      LOGICAL FIRST,LQNN_EOJ
      LOGICAL ELECOK,EMF1OK,EMF2OK,EMF3OK,METOK,JETOK,PHOTOK,ANGOK
      DATA FIRST /.TRUE./
C----------------------------------------------------------------------
      IF (FIRST) THEN
        FIRST=.FALSE.
C
        CALL INRCP ('LQNN_RCP', IER)
        IF (IER.EQ.0) THEN
          CALL EZPICK ('LQNN_RCP')
          CALL EZGET ('PTCUT1', PTCUT1, IER)
          CALL EZGET ('PTCUT2', PTCUT2, IER)
          CALL EZGET ('PTCUT3', PTCUT3, IER)
          CALL EZGET ('EMFRAC_LOW', EMFRAC_LOW, IER)
          CALL EZGET ('EMFRAC_HIGH', EMFRAC_HIGH, IER)
          CALL EZGET ('MET_CUT', MET_CUT, IER)
          CALL EZGET ('DELTA_PHIJML',DELTA_PHIJML,IER)
          CALL EZGET ('DELTA_PHIJMH',DELTA_PHIJMH,IER)
          CALL EZGET ('DELTA_PHIJJL',DELTA_PHIJJL,IER)
          CALL EZGET ('DELTA_PHIJJH',DELTA_PHIJJH,IER)
          CALL EZGET ('DELTA_ENGYJM',DELTA_ENGYJM,IER)
          CALL EZGET ('DELTA_ENGYJJ',DELTA_ENGYJJ,IER)
          CALL EZRSET
        ELSE
          CALL ERRMSG ('No LQNN_RCP', 'LQNN',
     &        'Could not find LQNN_RCP', 'F')
        ENDIF
        CALL VZERO (RSUMMARY, 20)
      ENDIF
C
      LQNN=.FALSE.
      ELECOK=.FALSE.
      EMF1OK=.FALSE.
      EMF2OK=.FALSE.
      EMF3OK=.FALSE.
      METOK=.FALSE.
      JETOK=.FALSE.
      PHOTOK=.FALSE.
      ANGOK=.FALSE.
C ****  SET PATH TO THE DEFAULT JET FINDING ALGORITHM
C ****       ( CONE WITH R=0.7, ET=8GEV )
C
      TEMPLATE(1)=2.0
      TEMPLATE(2)=6.0
      TEMPLATE(3)=0.7
      TEMPLATE(4)=7.0
      TEMPLATE(5)=8.0
      CALL SET_CAPH('CONE_JET',TEMPLATE,IER)
      IF ( IER.NE.0 ) THEN
        CALL RESET_CAPH
        GOTO 999
      ENDIF
      LJETS = GZJETS( )
C
      CALL VZERO(CJ_PT,25)
      CALL VZERO(CJ_ETA,25)
      CALL VZERO(CJ_PHI,25)
      CALL VZERO(EMF,25)
      CALL VZERO(RWIDTH,25)
      CALL VZERO(CJ_HOT,25)
      CALL VZERO(CJ_CHF,25)
      CALL GTJETS_TOTAL(NCJ,IER)
      DO ILI=1,NCJ
        IER=0
        CALL GTJETS(ILI,IVERS,E_GRAND,CJ_THETA(ILI),CJ_PHI(ILI),
     &    CJ_ETA(ILI),IER)
        CALL GTJTSH(ILI,PHI_JTSH,ETA_JTSH,EMFRAC_JTSH,ISHARE,IIER)
C
        CJ_PT(ILI) = E_GRAND(5)
        CJ_JE(ILI) = E_GRAND(4)
        CJ_X(ILI) = E_GRAND(1)
        CJ_Y(ILI) = E_GRAND(2)
        CJ_Z(ILI) = E_GRAND(3)
        CJ_HOT(ILI)=Q(LJETS+19)
        CJ_CHF(ILI)=Q(LJETS+18)
C
        IF (IIER.EQ.-5) THEN
          RWIDTH(ILI) = E_GRAND(6)
          EMF(ILI)=E_GRAND(7)
        ELSE
          RWIDTH(ILI)=SQRT(PHI_JTSH**2+ETA_JTSH**2)
          EMF(ILI)=EMFRAC_JTSH
        ENDIF
C
        LJETS=LQ(LJETS)
C
      END DO
      CALL RESET_CAPH
C ***   sort by descending order  ******
      IF (NCJ.LE.0) GOTO 791
      CALL SORT_DESCEND(CJ_PT,CJ_ETA,CJ_PHI,EMF,
     &RWIDTH,CJ_HOT,CJ_CHF,DUMMY1,DUMMY2,DUMMY3,NCJ)
  791 CONTINUE
C ****  GET MISSING ET - no muon correction
C
C
      LPNUT = GZPNUT(2)
      IF(LPNUT.GT.0) THEN
        ETMISS2 = Q(LPNUT+7)
        ETA_MISS2=Q(LPNUT+9)
        PHI_MISS2=Q(LPNUT+10)
        THETA_MISS2=LQ(LPNUT+8)
        EX_MISS2=Q(LPNUT+3)
        EY_MISS2=Q(LPNUT+4)
        ET_SCALAR2=Q(LPNUT+14)
      END IF
C
      LPARH=GZPARH()
C
      CALL VZERO(ELEC_PT,20)
      CALL VZERO(ELEC_ETA,20)
      CALL VZERO(ELEC_PHI,20)
      CALL VZERO(EL_EMF,20)
      CALL VZERO(ISOLATION,20)
      CALL VZERO(TRNC_CHISQR,20)
      CALL VZERO(DCLAPP,20)
      CALL VZERO(NUM_TRACKS,20)
      NELE=0
      LPELC=LQ(LPARH-IZPELC)
      IF(LPELC.LE.0) GOTO 88
   73 CONTINUE
      LCACL=LQ(LPELC-2)
      NELE=NELE+1
      ELEC_X(NELE)=Q(LPELC+3)
      ELEC_Y(NELE)=Q(LPELC+4)
      ELEC_Z(NELE)=Q(LPELC+5)
      ELEC_PT(NELE)=Q(LPELC+7)
      ELEC_E(NELE)=Q(LPELC+6)
      ELEC_ETA(NELE)=Q(LPELC+9)
      ELEC_PHI(NELE)=Q(LPELC+10)
      ELEC_THETA(NELE)=Q(LPELC+8)
C
      EL_EMF(NELE) = (Q(LCACL+7)-Q(LCACL+19))/Q(LCACL+7)
C

      CONE_E(1)=Q(LPELC+14)
      CONE_E(2)=Q(LPELC+15)
      CONE_E(3)=Q(LPELC+16)
      CONE_E(4)=Q(LPELC+17)
      CONE_E(5)=Q(LPELC+18)
      NUM_TRACKS(NELE)=Q(LPELC+21)
      DCLAPP(NELE)=Q(LPELC+22)
      IF (CONE_E(4).LE.0) THEN
        PRINT*, ' GOLD-ELEC: CORE ENERGY .LE. 0'
        ISOLATION(NELE)=0.0
      ELSE
        ISOLATION(NELE) = (CONE_E(3)-CONE_E(4))/CONE_E(4)
      ENDIF
      LHMTE=LQ(LPELC-1)
      CHISQR(NELE)=Q(LHMTE+5)
      TRNC_CHISQR(NELE)=Q(LHMTE+7)
      LPELC=LQ(LPELC)
      IF (LPELC.GT.0) GOTO 73
C
C *** sort electron descending pt order
      IF (NELE.LE.0) GOTO 792
      CALL SORT_DESCEND(ELEC_PT,ELEC_ETA,ELEC_PHI,EL_EMF,
     &ISOLATION,TRNC_CHISQR,DCLAPP,NUM_TRACKS,DUMMY1,DUMMY2,NELE)
  792 CONTINUE
   88 CONTINUE
C****** PHOTON INFORMATION
      NPHO=0
      CALL VZERO(PHOT_PT,25)
      LPPHO=LQ(LPARH-IZPPHO)
      IF (LPPHO.LE.0) GOTO 876
   55 NPHO=NPHO+1
      PHOT_PT(NPHO)=Q(LPPHO+7)
      LPPHO=LQ(LPPHO)
      IF (LPPHO.GT.0) GOTO 55
  876 CONTINUE
C *** sort PHOTON descending pt order
      IF (NPHO.LE.0) GOTO 793
      CALL SORT_DESCEND(PHOT_PT,DUMMY1,DUMMY2,DUMMY3,
     &DUMMY4,DUMMY5,DUMMY6,DUMMY7,DUMMY8,DUMMY9,NPHO)
  793 CONTINUE
C*****************************************
      IF (ELEC_PT(1).LT.PTCUT1) ELECOK=.TRUE.
      IF (PHOT_PT(1).LT.PTCUT1) PHOTOK=.TRUE.
C
      IF ((CJ_PT(1).GT.PTCUT2.AND.EMF(1).GT.EMFRAC_LOW
     &.AND.EMF(1).LT.EMFRAC_HIGH).AND.
     &(CJ_PT(2).GT.PTCUT2.AND.EMF(2).GT.EMFRAC_LOW.AND.EMF(2)
     &.LT.EMFRAC_HIGH))
     &JETOK=.TRUE.
C
      DIFFPHI1=ABS(PHI_MISS2-CJ_PHI(1))
      DIFFPHI2=ABS(PHI_MISS2-CJ_PHI(2))
      DIFFPHI3=ABS(CJ_PHI(1)-CJ_PHI(2))
      IF (DIFFPHI1.GT.3.1416) DIFFPHI1=6.2832-DIFFPHI1
      IF (DIFFPHI2.GT.3.1416) DIFFPHI2=6.2832-DIFFPHI2
      IF (DIFFPHI3.GT.3.1416) DIFFPHI3=6.2832-DIFFPHI3
      DIFFENGY1=ABS(ETMISS2-CJ_PT(1))
      DIFFENGY2=ABS(ETMISS2-CJ_PT(2))
      DIFFENGY3=ABS(CJ_PT(1)-CJ_PT(2))
      IF (((DIFFPHI1.GT.DELTA_PHIJML.AND.DIFFPHI1.LT.DELTA_PHIJMH)
     &.OR.DIFFENGY1.GT.DELTA_ENGYJM)
     &.AND.((DIFFPHI2.GT.DELTA_PHIJML.AND.DIFFPHI2.LT.DELTA_PHIJMH)
     &.OR.DIFFENGY2.GT.DELTA_ENGYJM).AND.
     &(DIFFPHI3.LT.DELTA_PHIJJH.OR.DIFFENGY3.GT.DELTA_ENGYJJ))
     & ANGOK=.TRUE.
C
      IF (ETMISS2.GT.MET_CUT) METOK=.TRUE.
      IF (JETOK) RSUMMARY(1) = RSUMMARY(1) + 1
      IF (METOK .AND. JETOK)  RSUMMARY(2) = RSUMMARY(2) + 1
      IF (JETOK .AND. ANGOK)  RSUMMARY(3) = RSUMMARY(3) + 1
      IF (ELECOK.AND.PHOTOK) RSUMMARY(4) = RSUMMARY(4) + 1
C
      IF (METOK.AND.JETOK.AND.ELECOK.AND.PHOTOK.AND.ANGOK) LQNN=.TRUE.
C
C****************************************
  999 RETURN
C
      ENTRY LQNN_EOJ(RSUM)
C
      LQNN_EOJ = .TRUE.
      DO 10 I = 1 ,  20
        RSUM(I) = RSUMMARY(I)
   10 CONTINUE
      END
