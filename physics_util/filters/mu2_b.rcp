\START    MU2_B_RCP
\SIZE         52        50
!----------------------------------------------------------------------
!    Name:       MU2_B.RCP
!----------------------------------------------------------------------
USE_HEADER      .FALSE.  !If true, does stripping when the event header is
                        !read in, and skips reading the rest of the event
                        !if the strip decision rejects it.  Currently (5/29/92),
                        !setting it true only works for processed, not raw, data
STRIP_ON_L1     .FALSE.  !If true, requires at least one of the L1 bits in L1BITS
                        !to be set in order for the event to pass
\ARRAY  L1BITS
 5 6 7
\END
STRIP_ON_L2     .FALSE. !If true, requires at least one of the L2 bits in L2BITS
                        !to be set in order for the event to pass
\ARRAY  L2BITS
! 0 1 2 3 4 5 6 7 8
\END
STRIP_ON_BOTH   .FALSE. ! Logic: STRIP_ON_L1   T\
                        !        STRIP_ON_L2   T \ Any bit from L1BITS OR
                        !        STRIP_ON_BOTH F/  any bit from L2BITS will
                        !                          cause event to pass
                        !        STRIP_ON_L1   T\
                        !        STRIP_ON_L2   T \ Requires at least one bit
                        !        STRIP_ON_BOTH T/  from L1BITS AND one from
                        !                          L2BITS to pass event
                        ! If either STRIP_ON_L1 or ON_L2 is false, those
                        ! bits are not checked regardless of the value of
                        ! STRIP_ON_BOTH.
                        !
                        !
                        ! MU2_B parameters
                        !
CUTRHD         .TRUE.
CUTMRC         .TRUE.
CUTIFW         .TRUE.
CUTCOS         .TRUE.
CUTBDL         .TRUE.
CUTCDM         .FALSE.
CUTCAL         .TRUE.
CALCUT          1.0     ! min value of Q(LPMUO+34)
ISOCUT          -2.0    ! min value of Q(LPMUO+30)
BDLCUT          0.2
DPHCUT        160.
DTHCUT         10.
\STOP
