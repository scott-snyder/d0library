      SUBROUTINE SPLIT_BITMASK(BITS_32,TWO_REALS)
C----------------------------------------------------------------------
C-
C-   Purpose and Methods : Given a 32 bit integer word, split into two 16
C-    bit words and return the corresponding reals.
C-
C-
C-   Inputs  : BITS_32       - 32 bit integer
C-   Outputs : TWO_REALS(1:2) - array of two reals
C-    TWO_REALS(1) - float of the 16 MSB
C-    TWO_REALS(2) - float of the 16 LSB
C-
C-   ENTRY REMAKE_BITMASK(BITS_32,TWO_REALS):
C-
C-   **OUTPUTS**  : BITS_32       - 32 bit integer
C-   **INPUTS**   : TWO_REALS(1:2) - array of two reals
C-    TWO_REALS(1) REAL variable containing the 16 MSB
C-    TWO_REALS(2) REAL variable containing the 16 LSB
C-
C-   REMAKE_BITMASK takes as inputs two reals generated by SPLIT_BITMASK
C-   and returns the original integer longword input to SPLIT_BITMASK.
C-
C-   Controls: NONE
C-
C-   Created  14-DEC-1993   Ian Adam
C-   Updated  21-DEC-1993   Ian Adam  Fix gross mistakes
C-   Updated   7-APR-1995   Ian Adam  Protect against invalid NaN input
C-                          in REMAKE_BITMASK
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'D0$PARAMS:BYTE_ORDER.PARAMS'

      REAL        TWO_REALS(2),TWO_REALS_COPY(2)
      INTEGER     TWO_INTEGERS(2)
      INTEGER     BITS_32,BITMASK,MS_BITS,LS_BITS
      INTEGER*2   SPLITMASK(2),SMALLINT1(2),SMALLINT2(2)

      EQUIVALENCE (BITMASK,SPLITMASK)
      EQUIVALENCE (LS_BITS,SMALLINT1)
      EQUIVALENCE (MS_BITS,SMALLINT2)
      EQUIVALENCE (TWO_INTEGERS,TWO_REALS_COPY)
C----------------------------------------------------------------------
      BITMASK=BITS_32

      SMALLINT1(WORD2)=0
      SMALLINT1(WORD1)=SPLITMASK(WORD1)
      SMALLINT2(WORD2)=0
      SMALLINT2(WORD1)=SPLITMASK(WORD2)

      TWO_REALS(1)=FLOAT(MS_BITS)
      TWO_REALS(2)=FLOAT(LS_BITS)

      RETURN

      ENTRY REMAKE_BITMASK(BITS_32,TWO_REALS)

      TWO_REALS_COPY(1) = TWO_REALS(1)
      TWO_REALS_COPY(2) = TWO_REALS(2)

      IF ((TWO_INTEGERS(1).EQ.32769).OR.(TWO_INTEGERS(2).EQ.32769)) THEN
        CALL ERRMSG('NaN error','REMAKE_BITMASK',
     &   'Notify UDST authors of run/event number','W')
        BITS_32 = 0
        BITMASK = 0
        GOTO 999
      ENDIF

      MS_BITS=INT(TWO_REALS(1))
      LS_BITS=INT(TWO_REALS(2))

      SPLITMASK(WORD1)=SMALLINT1(WORD1)
      SPLITMASK(WORD2)=SMALLINT2(WORD1)

      BITS_32=BITMASK

  999 RETURN
      END
