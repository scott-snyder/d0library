******************************************************************************
*                                                                            *
*   File  L_DSP_C3.A40                                  Rev.   22-APR-1994   *
*                                                                            *
*  "Meaningful" Register Usage                                               *
*  ---------------------------                                               *
*  AR4: Base of Peripheral Bus                              Input            *
*  DP:  Base of Global SRAM                                 Input            *
*                                                                            *
*  "Destroyable" Register Usage                                              *
*  ----------------------------                                              *
*  R11                                                                       *
*                                                                            *
*  Module Description                                                        *
*  ==================                                                        *
*                                                                            *
*  This module performs the Node Initialization for Local DSP Node >> C3 <<. *
*  This module "hard-wires" the Local DSP Node ID to C3 (i.e. the node that  *
*  services eta = +7..+10).   There must be a different Local DSP Node       *
*  Initialization module for each Local DSP Node.                            *
*                                                                            *
*  Recall the assignment of Eta Coordinates for this Local DSP Node          *
*                                                                            *
*  Relative        Actual          Is this Node        Relative     Actual   *
*  Eta             Eta             responsible for     Rack         Rack     *
*  Coordinate      Coordinate      this Eta Coord?     Number       Number   *
*  ----------      ----------      ---------------     ------       ------   *
*     n + 0            +5              NO                 1          M105    *
*     n + 1            +6              NO                 1          M105    *
*     n + 2            +7              YES                1          M105    *
*     n + 3            +8              YES                1          M105    *
*     n + 4            +9              YES                2          M107    *
*     n + 5            +10             YES                2          M107    *
*     n + 6            +11             NO                 2          M107    *
*     n + 7            +12             NO                 2          M107    *
*                                                                            *
*  Also recall the assignment of the Comm Ports                              *
*                                                                            *
*                                                                            *
*   Comm Port       Function                                                 *
*   ---------       ---------                                                *
*           0       Trigger Tower EM Et Data from Rack #1 (eta +5:+8)        *
*           1       Trigger Tower Tot Et Data from Rack #1 (eta +5:+8)       *
*           2       Trigger Tower EM Et Data from Rack #2 (eta +9:+12)       *
*           3       Trigger Tower Tot Et Data from Rack #2 (eta +9:+12)      *
*           4       Local-to-Global Transfer:  to DSP #C2 Comm Port #0       *
*           5       Local-to-Global Transfer: from DSP #C4 Comm Port #1      *
*                                                                            *
*  Then control is returned to the calling module                            *
*                                                                            *
*  This module also contains a subroutine to setup the Mark and Force Pass   *
*  Data Readout.  This subroutine is called from the L_Scan module whenever  *
*  a Mark-and-Force-Pass event occurs                                        *
*                                                                            *
*  This module also contains a routine which is BRANCHED to from the L_Scan  *
*  module, which is used to wait for the Local-to-Global Transfer from the   *
*  "previous" LDSP (if appropriate)                                          *
******************************************************************************

******************************************************************************
*         Include the Hydra and C40 Specific Constant Definitions            *
******************************************************************************

         .include   "hydra.inc"

******************************************************************************
*         Include the       DSP Program-Specific Constant Definitions        *
******************************************************************************

         .include   "constant.inc"
                                                                           
******************************************************************************
*         Include the MACRO Definitions                                      *
******************************************************************************

         .include   "macros.inc"

******************************************************************************
*         Load Code into the  .text  Section                                 *
******************************************************************************

         .text

Initialize_Node:

******************************************************************************
*   This code is specific to Local DSP Node C3.  All "Node-Specific"         *
*   definitions are handled here.  No other code module is allowed to        *
*   reference node-specific labels.  This is handled by using this module    *
*   to copy all node-specific values and pointers into "generic" memory      *
*   locations                                                                *
*                                                                            *
*   Recall the Node-Specific information:                                    *
*                                                                            *
*       (1) The base of the LDSP List of Identified Objects                  *
*       (2) The actual eta coordinates serviced by this node                 *
*       (3) The EM Et and Total Et Zero Responses for the Trigger Towers     *
*           serviced by this Local DSP Node                                  *
*       (4) The Comm Ports corresponding to Rack #1 EM, Rack #1 Total,       *
*           Rack #2 EM, and Rack #2 Total Inputs                             *
*       (5) The Comm Port(s) used for transmitting data to the Global DSP    *
*           (recall that this is fairly complex due to the "staged" nature   *
*           of the Local-to-Global transfer.                                 *
*                                                                            *
*   Note that (1)-(3) are defined simply using assembler .word directives    *
*   while (4)-(5) require code to execute on the C40                         *
*                                                                            *
******************************************************************************

******************************************************************************
*   Program the Comm Ports and DMA Channels which correspond to              *
*                                                                            *
*           >>>>>  Rack #1 EM Et Trigger Tower Data     <<<<<                *
*           >>>>>  Rack #1 Total Et Trigger Tower Data  <<<<<                *
*           >>>>>  Rack #2 EM Et Trigger Tower Data     <<<<<                *
*           >>>>>  Rack #2 Total Et Trigger Tower Data  <<<<<                *
*           >>>>>  Local-to-Global Transfer to "next"   <<<<<                *
*           >>>>>  Local-to-Global Transfer from "prev" <<<<<                *
*                                                                            *
*   Programming each DMA Channel is done with the SETUP_DMA macro            *
*   Programming each Local-to-Global-to-Next Comm Port is done with the      *
*       SETUP_LG_NEXT_PORT macro                                             *
*   Programming each Local-to-Global-from-Previous Comm Port is done with    *
*       the SETUP_LG_PREV_PORT macro                                         *
******************************************************************************
                                                                              
******************************************************************************
*   Program the Comm Port and DMA Channel corresponding to                   *
*                                                                            *
*           >>>>>  Rack #1 EM Et Trigger Tower Data     <<<<<                *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The EM Et TT Data for Rack #1 arrives on        Comm Port 0              *
*                                                                            *
*   The transfer should be Read Synchronized with ICRDY0                     *
*                                                                            *
*   The Rack_1_EM_DMA_Finished_ISR should be called by DMAINT0               *
*                                                                            *
******************************************************************************

        SETUP_DMA   0, @Rack_1_EM_DMA_Link_Pointer_Loc, @ICRDY0_Read_Synch_Loc, @Rack_1_EM_DMA_Finished_ISR_Loc

        SETUP_CRC_PORT  0

******************************************************************************
*   Program the Comm Port and DMA Channel which correspond to                *
*                                                                            *
*           >>>>>  Rack #1 Total Et Trigger Tower Data  <<<<<                *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The Total Et TT Data for Rack #1 arrives on     Comm Port 1              *
*                                                                            *
*   The transfer should be Read Synchronized with ICRDY1                     *
*                                                                            *
*   The Rack_1_Tot_DMA_Finished_ISR should be called by DMAINT1              *
*                                                                            *
******************************************************************************

        SETUP_DMA   1, @Rack_1_Tot_DMA_Link_Pointer_Loc, @ICRDY1_Read_Synch_Loc, @Rack_1_Tot_DMA_Finished_ISR_Loc

        SETUP_CRC_PORT  1

******************************************************************************
*   Program the Comm Port and DMA Channel corresponding to                   *
*                                                                            *
*           >>>>>  Rack #2 EM Et Trigger Tower Data     <<<<<                *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The EM Et TT Data for Rack #2 arrives on        Comm Port 2              *
*                                                                            *
*   The transfer should be Read Synchronized with ICRDY2                     *
*                                                                            *
*   The Rack_2_EM_DMA_Finished_ISR should be called by DMAINT2               *
*                                                                            *
******************************************************************************

        SETUP_DMA   2, @Rack_2_EM_DMA_Link_Pointer_Loc, @ICRDY2_Read_Synch_Loc, @Rack_2_EM_DMA_Finished_ISR_Loc

        SETUP_CRC_PORT  2

******************************************************************************
*   Program the Comm Port and DMA Channel corresponding to                   *
*                                                                            *
*           >>>>>  Rack #2 Total Et Trigger Tower Data  <<<<<                *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The Total Et TT Data for Rack #2 arrives on     Comm Port 3              *
*                                                                            *
*   The transfer should be Read Synchronized with ICRDY3                     *
*                                                                            *
*   The Rack_2_Tot_DMA_Finished_ISR should be called by DMAINT3              *
*                                                                            *
******************************************************************************

        SETUP_DMA   3, @Rack_2_Tot_DMA_Link_Pointer_Loc, @ICRDY3_Read_Synch_Loc, @Rack_2_Tot_DMA_Finished_ISR_Loc  

        SETUP_CRC_PORT  3

******************************************************************************
*   Program the Comm Port and DMA Channel corresponding to                   *
*                                                                            *
*           >>>>>  LDSP C3 Local-to-Global Transfer  to "next" DSP  <<<<<    *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The connection to the "next" DSP is on          Comm Port 4              *
*                                                                            *
*   The transfer should be Write Synchronized with OCRDY4                    *
*                                                                            *
*   The LG_Xfr_to_Next_Complete_ISR  hould be called by DMAINT4              *
*                                                                            *
******************************************************************************

        SETUP_DMA   4, @LG_Next_DMA_Link_Pointer_Loc, @OCRDY4_Write_Synch_Loc, @LG_Xfr_to_Next_Complete_ISR_Loc

        SETUP_LG_NEXT_PORT  4

******************************************************************************
*   Program the Comm Port and DMA Channel corresponding to                   *
*                                                                            *
*           >>>>>  LDSP C3 Local-to-Global Transfer from "prev" DSP #4 <<<<< *
*                                                                            *
*   Recall that this is DSP C3                                               *
*                                                                            *
*   The connection from the "prev" DSP #4 is on     Comm Port 5              *
*                                                                            *
*   The transfer should be Read  Synchronized with ICRDY5                    *
*                                                                            *
*   The LG_Xfr_fr_Prev_Complete_ISR  hould be called by DMAINT5              *
*                                                                            *
******************************************************************************

        SETUP_DMA   5, @LG_Pr_4_DMA_Link_Pointer_Loc, @ICRDY5_Read_Synch_Loc, @LG_Xfr_fr_Pr_4_Complete_ISR_Loc

        SETUP_LG_PREV_PORT  5

******************************************************************************
*   Now insert a lot of NOPs to allow the last DMA Dummy List to transfer    *
*   and allow the DMA Channel to autoinitialize with the Real List           *
******************************************************************************

        NOP                                         ; These are not
        NOP                                         ; absolutely necessary
        NOP                                         ; but I want the DMA
        NOP                                         ; Channels to be
        NOP                                         ; fully initialized
        NOP                                         ; BEFORE control is 
        NOP                                         ; transferred to the
        NOP                                         ; next module. 
        NOP                                       
        NOP                                       
        NOP                                        
        NOP
        NOP                                       

        RETS                                            ; Return to the 
                                                        ; calling module
               
******************************************************************************
*   This section of code is used to set up the Mark and Force Pass Data      *
*   Readout.  It is called by the L_Scan module whenever a Mark and Force    *
*   Pass event flows through the Cal Trig (recall that this information is   *
*   derived from the "DSP Wakeup Word" which comes from the 68K).            *
*                                                                            *
*   Recall that this is LDSP C3                                              *
*                                                                            *
*   The connection to the "next" DSP is on          Comm Port 4              *
*                                                                            *
*   The connection from the "previous" DSP is on    Comm Port 5              *
*                                                                            *
*       [Note that this LDSP only receives "previous" DSP data via           *
*        one Comm Port]                                                      *
*                                                                            *
*   I use the SETUP_MFP_TO_NEXT_DMA  macro to set up the DMA Channel         *
*   for the "next" data                                                      *
*                                                                            * 
*   I use the SETUP_MFP_FROM_SINGLE_PREV_DMA macro to set up the DMA Channel *
*   for the "previous" data                                                  *
******************************************************************************

Setup_Mark_and_Force_Pass_DMA:                                                
                                                                              
Setup_MFP_to_Next_DSP:                  

        SETUP_MFP_TO_NEXT_DMA               4   


Setup_MFP_from_Prev_DSP:

        SETUP_MFP_FROM_SINGLE_PREV_DMA      5

                                                            
        RETS                                            ; return to the
                                                        ; calling module
    
******************************************************************************
*   This is the module which is called to wait for the arrival of the        *
*   data from the "previous" LDSP(s) in the Local-to-Global Transfer         *
*   Chain.  The arrival of the data is indicated by an interrupt from        *
*   the                                                                      *
*                                                                            *
*   Recall that not all LDSPs have a "previous" LDSP in the Local-to-Global  *
*   Tranfer Chain.  If there is no "previous" LDSP, then there is            *
*                                                                            *
*   If this LDSP does have a "previous" LDSP, then this module is            *
*           a loop which examines the status of the transfer from the        *
*           "previous" DSP, followed by a BRANCH back to the                 *
*           Start_LG_Xfr_to_Next_DSP entry point of L_Scan                   *
*                                                                            *
*   If this LDSP does NOT have a "previous" LDSP, then this module is        *
*           a BRANCH back to the Start_LG_Xfr_to_Next_DSP entry point of     *
*           L_Scan                                                           *
*                                                                            *
*   This is LDSP C3 which     has       "previous" LDSP data                 *
*                                                                            *
*   I use the WAIT_FOR_PREV_DMA macro to wait for the "previous" LDSP data   *
*   to arrive                                                                *
******************************************************************************

Wait_for_Previous_DSP_Data:                             ; Need to wait for   
                                                        ; previous LDSP data
                                        
        WAIT_FOR_PREV_DMA           
                                                    ; the next instruction
                                                    ; does not execute 
                                                    ; until the transfer
                                                    ; from the previous
                                                    ; DSP is complete

        BR      Start_LG_Xfr_to_Next_DSP                ; Return to the
                                                        ; L_Scan module to
                                                        ; start the Transfer
                                                        ; to the next DSP

******************************************************************************
*  This is the Bulkhead.  This code should never be executed                 *
******************************************************************************

End_Of_L_DSP_C3:                        ; These instructions should never be
                                        ; executed in the "normal" operation
         BR     End_Of_L_DSP_C3         ; of the program.  If the program
                                        ; counter becomes corrupted or
         BR     End_Of_L_DSP_C3         ; if we have a bug in the program
                                        ; we MAY try to execute these
         BR     End_Of_L_DSP_C3         ; instructions.  If we get to these
                                        ; instructions the program will appear
         BR     End_Of_L_DSP_C3         ; to halt.  We could also use a
                                        ; TRAP instruction here, and jump to
                                        ; a service routine.

*****************************************************************************
*       Constants defined using the assembler .set directive                *
*       These constants differ across Node Initialization Modules           *
*****************************************************************************
                                  
Local_Mem_Ctrl_Reg_Value        .set    1DCC4000h       ; Value to use for
                                                        ; Local Memory
                                                        ; Interface Control
                                                        ; Register

Rack_1_EM_ComPort_Input .set Base_of_Peripheral_Bus + Disp_to_ComPort_0_Input
                                                        ; Port Input Register
                                                        ; for Rack 1 EM Et
                                                        ; Trigger Tower Data

Rack_1_Tot_ComPort_Input .set Base_of_Peripheral_Bus + Disp_to_ComPort_1_Input
                                                        ; Comm Port Input
                                                        ; Register for Rack 1
                                                        ; Total Et Trigger Tower
                                                        ; Data.

Rack_2_EM_ComPort_Input .set Base_of_Peripheral_Bus + Disp_to_ComPort_2_Input
                                                        ; Port Input Register
                                                        ; for Rack 1 EM Et
                                                        ; Trigger Tower Data

Rack_2_Tot_ComPort_Input .set Base_of_Peripheral_Bus + Disp_to_ComPort_3_Input
                                                        ; Comm Port Input
                                                        ; Register for Rack 1
                                                        ; Total Et Trigger Tower
                                                        ; Data.

LG_to_Next_ComPort_Output .set Base_of_Peripheral_Bus + Disp_to_ComPort_4_Output
                                                        ; Comm Port Output
                                                        ; Register for Local
                                                        ; to Global to Next
                                                        ; DSP 
                                                        ; Transfer

LG_to_Next_DMA_Control  .set  Base_of_Peripheral_Bus + Disp_to_DMA_4_Control
                                                        ; DMA Control 
                                                        ; Register for Local
                                                        ; to Global to Next
                                                        ; DSP
                                                        ; Transfer  

LG_from_Pr_4_ComPort_Input .set Base_of_Peripheral_Bus + Disp_to_ComPort_5_Input
                                                        ; Comm Port Output
                                                        ; Register for Local
                                                        ; to Global from
                                                        ; the Previous DSP 
                                                        ; Transfer

LG_from_Pr_4_DMA_Control .set  Base_of_Peripheral_Bus + Disp_to_DMA_5_Control
                                                        ; DMA Control 
                                                        ; Register for Local
                                                        ; to Global from    
                                                        ; the Previous DSP
                                                        ; Transfer  



*****************************************************************************
*       Define constants and working variables in the Data Section          *
*       These constants and working variables are the same for all          *
*       Node Initialization Modules                                         *
*****************************************************************************

            .data

Local_Mem_Ctrl_Reg_Value_Loc:                           ; Memory location
                                                        ; to store the
            .word        Local_Mem_Ctrl_Reg_Value       ; value of the Local
                                                        ; MICR         

LG_Next_DMA_Control_Reg_Handle:                         ; Memory location
                                                        ; which holds the 
            .word       LG_to_Next_DMA_Control          ; address of the
                                                        ; Local-to-Global
                                                        ; DMA Channel
                                                        ; Control Register

******************************************************************************
*       Include the "common for all Nodes" parts of the DMA Lists            *
*   These are defined in an include file                                     *
******************************************************************************

        .include "l_dmacmn.inc"

****************************************************************************
*      Define constants and working variables in the Data Section          *
*      These constants and working variables differ across                 *
*      Node Initialization Modules                                         *
****************************************************************************

    .data

LG_Next_DMA_List_Loc:                                   ; The following 7
                                                        ; memory locations
                                                        ; define the DMA List
                                                        ; for the Local to    
                                                        ; Global to "next"
                                                        ; DSP DMA Transfer  

LG_Next_DMA_Control_Loc:                                ; Memory location
                                                        ; which holds the
        .word    DMA_Start_Word_for_LG_Next             ; Control Register

LG_Next_DMA_Source_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    LDSP_C3_ObjectList_Loc                 ; Source Address
                                                        ; Register

LG_Next_DMA_Source_Index_Loc:                           ; Memory location
                                                        ; which holds the
        .word    1                                      ; Source Address Index
                                                        ; Register

LG_Next_DMA_Counter_Loc:                                ; Memory location
                                                        ; which holds the
        .word    2 * LDSP_ObjectList_Length             ; Transfer Counter
                                                        ; Register

LG_Next_DMA_Destination_Loc:                            ; Memory location
                                                        ; which holds the
        .word    LG_to_Next_ComPort_Output              ; Destination Address
                                                        ; Register

LG_Next_DMA_Dest_Index_Loc:                             ; Memory location
                                                        ; which holds the
        .word    0                                      ; Destination Address
                                                        ; Index Register
                                                      
LG_Next_DMA_Link_Pointer_Loc:                           ; Memory location
                                                        ; which holds the
        .word    LG_Next_DMA_List_Loc                   ; Link Pointer
                                                        ; Register         


MFP_DC_DMA_List_Loc:                                    ; The following 7
                                                        ; memory locations
                                                        ; define the
                                                        ; Derived Constant
                                                        ; data subsection
                                                        ; of the DMA List for
                                                        ; the Mark and Force
                                                        ; Pass section of
                                                        ; the Data Block

MFP_DC_DMA_Control_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    DMA_Cont_Word_for_MFP_Next             ; Control Register

MFP_DC_DMA_Source_Loc:                                  ; Memory location
                                                        ; which holds the
        .word    MFP_Derived_Const_Data_Loc             ; Source Address
                                                        ; Register

MFP_DC_DMA_Source_Index_Loc:                            ; Memory location
                                                        ; which holds the
        .word    1                                      ; Source Address Index
                                                        ; Register

MFP_DC_DMA_Counter_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    MFP_Derived_Const_Length + 1           ; Transfer Counter
                                                        ; Register

MFP_DC_DMA_Destination_Loc:                             ; Memory location
                                                        ; which holds the
        .word    LG_to_Next_ComPort_Output              ; Destination Address
                                                        ; Register

MFP_DC_DMA_Dest_Index_Loc:                              ; Memory location
                                                        ; which holds the
        .word    0                                      ; Destination Address
                                                        ; Index Register

MFP_DC_DMA_Link_Pointer_Loc:                            ; Memory location
                                                        ; which holds the
        .word    MFP_Prv_to_Nxt_DMA_List_Loc            ; Link Pointer
                                                        ; Register
 

MFP_Prv_to_Nxt_DMA_List_Loc:                            ; The following 7
                                                        ; memory locations
                                                        ; define the
                                                        ; "MFP Data from the
                                                        ; Previous DSP to
                                                        ; the Next DSP"
                                                        ; data subsection
                                                        ; of the DMA List for
                                                        ; the Mark and Force
                                                        ; Pass section of
                                                        ; the Data Block

MFP_PN_DMA_Control_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    DMA_Cont_Word_for_MFP_Next_End         ; Control Register

MFP_PN_DMA_Source_Loc:                                  ; Memory location
                                                        ; which holds the
        .word    LDSP_C4_Mark_Pass_Data_Loc             ; Source Address
                                                        ; Register

MFP_PN_DMA_Source_Index_Loc:                            ; Memory location
                                                        ; which holds the
        .word    1                                      ; Source Address Index
                                                        ; Register

MFP_PN_DMA_Counter_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    LDSP_MFP_Section_Length                ; Transfer Counter
                                                        ; Register

MFP_PN_DMA_Destination_Loc:                             ; Memory location
                                                        ; which holds the
        .word    LG_to_Next_ComPort_Output              ; Destination Address
                                                        ; Register

MFP_PN_DMA_Dest_Index_Loc:                              ; Memory location
                                                        ; which holds the
        .word    0                                      ; Destination Address
                                                        ; Index Register

MFP_PN_DMA_Link_Pointer_Loc:                            ; Memory location
                                                        ; which holds the
        .word    LG_Next_DMA_List_Loc                   ; Link Pointer
                                                        ; Register


LG_Pr_4_DMA_List_Loc:                                   ; The following 7
                                                        ; memory locations
                                                        ; define the DMA List
                                                        ; for the Local to    
                                                        ; Global from the 
                                                        ; "Previous" DSP #4
                                                        ; DMA Transfer  

LG_Pr_4_DMA_Control_Loc:                                ; Memory location
                                                        ; which holds the
        .word    DMA_Start_Word_for_LG_Prev             ; Control Register

LG_Pr_4_DMA_Source_Loc:                                 ; Memory location
                                                        ; which holds the
        .word    LG_from_Pr_4_ComPort_Input             ; Source Address
                                                        ; Register

LG_Pr_4_DMA_Source_Index_Loc:                           ; Memory location
                                                        ; which holds the
        .word    0                                      ; Source Address Index
                                                        ; Register

LG_Pr_4_DMA_Counter_Loc:                                ; Memory location
                                                        ; which holds the
        .word    LDSP_ObjectList_Length                 ; Transfer Counter
                                                        ; Register

LG_Pr_4_DMA_Destination_Loc:                            ; Memory location
                                                        ; which holds the
        .word    LDSP_C4_ObjectList_Loc                 ; Destination Address
                                                        ; Register

LG_Pr_4_DMA_Dest_Index_Loc:                             ; Memory location
                                                        ; which holds the
        .word    1                                      ; Destination Address
                                                        ; Index Register
                                                      
LG_Pr_4_DMA_Link_Pointer_Loc:                           ; Memory location
                                                        ; which holds the
        .word    LG_Pr_4_DMA_List_Loc                   ; Link Pointer
                                                        ; Register         


LG_MFP_Pr_4_DMA_List_Handle:                            ; Memory locatio
                                                        ; to store the
        .word   LG_MFP_Pr_4_DMA_List_Loc                ; base address of
                                                        ; the DMA List for
                                                        ; for the Mark and 
                                                        ; Force Pass section
                                                        ; of the "Previous"
                                                        ; DSP #4's Data Block

LG_MFP_Pr_4_DMA_List_Loc:                               ; The following 
                                                        ; memory locations
                                                        ; define the DMA List
                                                        ; from the "previous"
                                                        ; DSP #4's 
                                                        ; Mark and Force Pass 
                                                        ; section of the Data
                                                        ; Block.
                                                        ; The Mark and Force
                                                        ; Pass section is
                                                        ; composed of Trigger
                                                        ; Tower data, Ref Set
                                                        ; Data, and Tool-
                                                        ; Dependent data.
                                                        
LG_MFP_Pr_4_DMA_Control_Loc:                            ; Memory location
                                                        ; which holds the
        .word    DMA_Start_Word_for_MFP_Prev_End        ; Control Register

LG_MFP_Pr_4_DMA_Source_Loc:                             ; Memory location
                                                        ; which holds the
        .word    LG_from_Pr_4_ComPort_Input             ; Source Address
                                                        ; Register

LG_MFP_Pr_4_DMA_Source_Index_Loc:                       ; Memory location
                                                        ; which holds the
        .word    0                                      ; Source Address Index
                                                        ; Register

LG_MFP_Pr_4_DMA_Counter_Loc:                            ; Memory location
                                                        ; which holds the
        .word    LDSP_MFP_Section_Length                ; Transfer Counter
                                                        ; Register

LG_MFP_Pr_4_DMA_Destination_Loc:                        ; Memory location
                                                        ; which holds the
        .word    LDSP_C4_Mark_Pass_Data_Loc             ; Destination Address
                                                        ; Register

LG_MFP_Pr_4_DMA_Dest_Index_Loc:                         ; Memory location
                                                        ; which holds the
        .word    1                                      ; Destination Address
                                                        ; Index Register

LG_MFP_Pr_4_DMA_Link_Pointer_Loc:                       ; Memory location
                                                        ; which holds the
        .word    LG_Pr_4_DMA_List_Loc                   ; Link Pointer
                                                        ; Register


This_LDSP_Node_ID_Loc:  .word     Local_DSP_C3          ; Memory location
                                                        ; to store the Node
                                                        ; ID of this Local
                                                        ; DSP

This_LDSP_Ref_Set_Block_Handle:                         ; Memory location  
                                                        ; to store the 
             .word     LDSP_C3_Ref_Set_Block_Loc        ; base address of
                                                        ; this LDSP's 
                                                        ; Ref Set Data in
                                                        ; Dual Port Memory
                                                        ; (for loading
                                                        ; from TCC)

This_LDSP_to_TCC_Status_Handle:                         ; Memory location
                                                        ; to store the
             .word  LDSP_C3_to_TCC_Stat_Base_Address    ; Base Address of
                                                        ; the "LDSP-to-TCC"
                                                        ; Status Block in
                                                        ; Dual Port Memory
                                                        ; for this LDSP

This_LDSP_to_68K_Status_Handle:                         ; Memory location
                                                        ; to store the
             .word  LDSP_C3_to_68K_Stat_Base_Address    ; Base Address of
                                                        ; the "LDSP-to-68K"
                                                        ; Status Block in
                                                        ; Dual Port Memory
                                                        ; for this LDSP

Eta_Nplus2_Coord_Loc:   .word     Eta_Pos_7             ; Memory location
                                                        ; to store the actual
                                                        ; eta coordinate
                                                        ; corresponding to
                                                        ; this Node's eta
                                                        ; "n + 2"

Eta_Nplus3_Coord_Loc:   .word     Eta_Pos_8             ; Memory location
                                                        ; to store the actual
                                                        ; eta coordinate
                                                        ; corresponding to
                                                        ; this Node's eta
                                                        ; "n + 3"

Eta_Nplus4_Coord_Loc:   .word     Eta_Pos_9             ; Memory location
                                                        ; to store the actual
                                                        ; eta coordinate
                                                        ; corresponding to
                                                        ; this Node's eta
                                                        ; "n + 4"

Eta_Nplus5_Coord_Loc:   .word     Eta_Pos_10            ; Memory location
                                                        ; to store the actual
                                                        ; eta coordinate
                                                        ; corresponding to
                                                        ; this Node's eta
                                                        ; "n + 5"

Eta_Nplus0_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_5_EM_Et_Zero_Response              ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 0"

Eta_Nplus1_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_6_EM_Et_Zero_Response              ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 1"

Eta_Nplus2_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_7_EM_Et_Zero_Response              ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 2"

Eta_Nplus3_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_8_EM_Et_Zero_Response              ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 3"

Eta_Nplus4_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_9_EM_Et_Zero_Response              ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 4"

Eta_Nplus5_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_10_EM_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 5"

Eta_Nplus6_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_11_EM_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 6"

Eta_Nplus7_EM_Et_Zeresp_Loc:                            ; Memory location to
                                                        ; store the EM Et
         .word   Eta_12_EM_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 7"

Eta_Nplus0_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_5_Tot_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 0"

Eta_Nplus1_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_6_Tot_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 1"

Eta_Nplus2_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_7_Tot_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 2"

Eta_Nplus3_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_8_Tot_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 3"

Eta_Nplus4_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_9_Tot_Et_Zero_Response             ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 4"

Eta_Nplus5_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_10_Tot_Et_Zero_Response            ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 5"

Eta_Nplus6_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_11_Tot_Et_Zero_Response            ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 6"

Eta_Nplus7_Tot_Et_Zeresp_Loc:                           ; Memory location to
                                                        ; store the EM Et
         .word   Eta_12_Tot_Et_Zero_Response            ; Zero Response of 
                                                        ; this Node's eta
                                                        ; "n + 7"


This_LDSP_ObjectList_Handle:                            ; Memory location to
                                                        ; store the base Adrs
         .word   LDSP_C3_ObjectList_Loc                 ; of the List of ID'd
                                                        ; Objects for this
                                                        ; Local DSP Node
                                             
Mask_of_TT_Data_Blocks_Loc:                             ; Memory location
                                                        ; to store the Mask
         .word   Racks_1_2_EM_Tot_TT_Data               ; of Trigger Tower
                                                        ; Data Blocks.  

******************************************************************************
*  Cross-References                                                          *
******************************************************************************

******************************************************************************
*   Include the Local Definitions and References                             *
******************************************************************************

    .include    "l_refdef.inc"
                
******************************************************************************
*       End of this module                                                   *
******************************************************************************

         .end
                                                    
